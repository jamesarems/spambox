# heading - Configuration Synchronization and Sharing

# variable - enableCFGShare
msg009170=Enable Configuration Sharing
msg009171=<hr><b>Read all positions in this section carefully (multiple times is recommended!!!)!&nbsp;A wrong configuration sequence or wrong configuration values can lead in to a destroyed SPAMBOX configuration!</b><hr>
  If set, the configuration value and option files synchronization will be enabled. This synchronization belong to the configuration values, to the file that is possibly defined in a value and to the include files that are possibly defined in the configured file. If you don't want a specific configuration file or include file to be synchronized (send and receive), write<br />
  # assp-no-sync<br />
  as a comment anywhere in the file. A possible reason could be for example 'localDomains' - if SPAMBOX1 is hosting DOMAIN1 and DOMAIN2 but SPAMBOX2 is hosting only DOMAIN2 - so the entry for DOMAIN2 could be put in a not synchronized include file on SPAMBOX1 and the synchronized main config file contains the entry for DOMAIN1.<br />
  If the configuration of all values in this section is valid, the synchronization status will be shown in the GUI for each config value that is, or <b>could be shared</b>. There are several configuration values, that could not be shared. The list of all shareable values could be found in the distributed file spambox_sync.cfg<br /><br />
  For an initial synchronization setup set the following config values in this order: setup syncServer, syncConfigFile, syncTestMode and as last syncCFGPass (leave isShareSlave and isShareMaster off). Use the default (distributed syncConfigFile spambox_sync.cfg) file and configure all values to your needs - do this on all peers by removing lines or setting the general sync flag to 0 or 1 (see the description of syncConfigFile ).<br />
  If you have finished this initial setup, enable isShareMaster or isShareSlave - now assp will setup all entries in the configuration file for all sync peers to the configured default values (to 1 if isShareMaster or to 3 if isShareSlave is selected). Do this on all peers. Now you can configure the synchronization behavior for each single configuration value for each peer, if it should differ from the default setup.<br />
  For the initial synchronization, configure only one SPAMBOX installation as master (all others as slave). If the initial synchronization has finished, which will take up to one hour, you can configure all or some assp as master and slave. On the initial master simply switch on isShareSlave. On the inital slaves, switch on isShareMaster and change all values in the sync config file that should be bidirectional shared from 3 to 1. As last action enable enableCFGShare on the SyncSlaves first and then on the SyncMaster.<br />
  After such an initial setup, any changes of the peers (syncServer) will have no effect to the configuration file (syncConfigFile)! To add or remove a sync peer after an initial setup, you have to configure syncServer and you have to edit the sync config file manually.<br /><br />
  This option can only be enabled, if isShareMaster and/or isShareSlave and syncServer and syncConfigFile and syncCFGPass are configured!<br />
  <b>Because the synchronization is done using a special SMTP protocol (without "mail from" and "rcpt to"), this option requires an installed <a href="http://search.cpan.org/search?query=Net::SMTP" rel="external">Net::SMTP</a> module in PERL. If you want the sync feature to use a secured connection (using STARTTLS) , DoTLS has to be set to "do TLS". This special SMTP protocol is not usable to for any MTA for security reasons, so the "sync mails" could not be forwarded via any MTA.<br />
  For this reason all sync peers must have a direct or routed TCP connection to each other peer.</b><br /><br />
  If you build a sync topology with more than two SPAMBOX, please notice, that it is not allowed to build any ring-synchronization. Only a chain-, tree- or star- topology is supported. It is also not allowed to build a sync ring inside any of the three allowed topologies!<br />
  <input type="button" value="show sync status" onclick="javascript:popFileEditor('files/sync_failed.txt',8);" />

# variable - isShareMaster
msg009180=This is a Share Master
msg009181=If selected, SPAMBOX will send configured configuration changes to sync peers.

# variable - isShareSlave
msg009190=This is a Share Slave
msg009191=If selected, SPAMBOX will receive configured configuration changes from sync peers. To accept a sync request, every sending peer has to be defined in syncServer - even if there are manually made entries in the sync config file for a peer.

# variable - syncServer
msg009200=Default Sync Peers
msg009201=Define all configuration sync peers here (to send changes to or to receive changes from). Separate multiple values by "|". Any value must be a pair of hostname or ip-address and :port, like 10.10.10.10:25 or mypeerhost:125 or mypeerhost.mydomain.com:225. The :port must be defined!<br />
  The target port can be the listenPort , listenPort2 , relayPort or if syncUsesSSL is enabled, it has to be the listenPortSSL of the peer.

# variable - syncUsesSSL
msg010140=SSL is used for the Sync SMTP Transport
msg010141=If selected, SSL will be used for the transport of the synchronization requests. In this case the target ip:port of all peers must be its listenPortSSL ! The Perl modules Net::SMTP::SSL and IO::Socket::SSL must be installed and enabled if this option is selected, otherwise all synchronization requests will fail!

# variable - syncTestMode
msg009210=Test Mode for Config Sync
msg009211=If selected, a master (isShareMaster) will process all steps to send configuration changes, but will not realy send the request to the peers. A slave (isShareSlave) will receive all sync requests, but it will not change the configuration values and possibly sent configuration files will be stored at the original location and will get an extension of ".synctest".

# variable - syncConfigFile
msg009220=Configuration File for Config Sync*
msg009221=Define the synchronization configuration file here (default is file:spambox_sync.cfg).<br />
 This file holds the configuration and the current status of all synchronized assp configuration values.<br />
 The format of an initial value is:  "varname:=syncflag" - where syncflag could be 0 -not shared and 1 -is shared - for example: HeaderMaxLength:=1 . The syncflag is a general sign, which means, a value of 0 disables the synchronization of the config value for all peers. A value of 1, enables the peer configuration that possibly follows.<br />
 The format after an initial setup is: "varname:=syncflag,syncServer1=status,syncServer2=status,......". The "status" could be one of the following:<br /><br />
 0 - no sync - changes of this value will not be sent to this syncServer - I will ignore all change requests for this value from there<br />
 1 - I am a SyncMaster, the value is still out of sync to this peer and should be synchronized as soon as possible<br />
 2 - I am a SyncMaster, the value is still in sync to this peer - I am also a SyncSlave to this peer (bidirectional sync) if isShareSlave is enabled<br />
 3 - I am not a SyncMaster but a SyncSlave - only this SyncMaster (peer) knows the current sync status to me<br />
 4 - I am a SyncMaster and a SyncSlave (bidirectional sync) - a change of this value was still received from this syncServer (peer) and should not be sent back to this syncServer - this flag will be automatically set back to 2 at the next synchronization check<br /><br />
 

# variable - syncCFGPass
msg009230=Config Sync Password
msg009231=The password that is used and required (additionally to the sending IP address) to identify a valid sync request. This password has to be set equal in all SPAMBOX installations, from where and/or to where the configuration should be synchronized.<br />
  The password must be at least six characters long.<br />
  If you want or need to change this password, first disable enableCFGShare here and on all peers, change the password on all peers, enable enableCFGShare on SyncSlaves then enable enableCFGShare on SyncMasters.

# variable - syncShowGUIDetails
msg009250=Show Detail Sync Information in GUI
msg009251=If selected, the detail synchronization status is shown at the top of each configuration parameter like:<br /><br />
  nothing shown - there is no entry defined for this parameter in the syncConfigFile or it is an unsharable parameter<br />
  "(shareable)" - the parameter is shareable but the general sync sign in the syncConfigFile is zero<br />
  "(shared: ...)" - the detail sync status for each sync peer<br /><br />
  If not selected, only different colored bulls are shown at the top of each configuration parameter like:<br /><br />
  nothing shown - no entry in the syncConfigFile or it is an unsharable parameter<br />
  "black bull <b><font color='black'>&bull;</font></b>" - the parameter is shareable but the general sync sign in the syncConfigFile is zero<br />
  "green bull <b><font color='green'>&bull;</font></b>" - the parameter is shared and in sync to each peer<br />
  "red bull <b><font color='red'>&bull;</font></b>" - the parameter is shared but it is currently out of sync to at least one peer<br /><br />
  If you move the mouse over the bull, a hint box will show the detail synchronization status. A click on the bull or link will open a sync config dialog box for the single configuration parameter.
  <hr /><div class="menuLevel1">Notes Config Sync</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/configsync.txt',3);" />

# heading - Network Setup <a href="http://sourceforge.net/p/assp/wiki/SPAMBOX_Advanced_Workflow/" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="Network Flow" /></a>

# variable - DisableSMTPNetworking
msg000010=Disable all new SMTP and Proxy Network Connections
msg000011=If selected, SPAMBOX will not answer to new SMTP and Proxy connections on 'listenPort , listenPort2 , listenPortSSL , relayPort and ProxyConf'. Currently existing SMTP and Proxy connections are not affected! Web and Stat connection are also not affected.

# variable - enableINET6
msg009480=Enable IPv6 support
msg009481=For IPv6 network support to be enabled, check this box. Default is disabled. IO::Socket::INET6 is able to handle both IPv4 and IPv6. NOTE: This option requires an installed <a href="http://search.cpan.org/search?query=IO::Socket::INET6" rel="external">IO::Socket::INET6</a> module in PERL and your system should support IPv6 sockets to give enabling this option a sense!<br />
  It is recommended to leave this option OFF as long as you don't want to use IPv6 addresses for a listener or a destination (SMTP,DNS-server,LDAP-server etc.).<br />
  Before you enable or disable IPv6, please check every IP listener and destination definition in assp and correct the settings. After changing this option a restart of assp is recommended. IPv4 addresses are defined for example 192.168.0.1 or 192.168.0.1:25 - IPv6 addresses are defined like [FE80:1:0:0:0:0:0:1]:25 or [FE80:1::1]:25 ! If an IPv4 address is defined for a listener, assp will listen only on the IPv4 socket. If an IPv6 address is defined for a listener, assp will listen only on the IPv6 socket. If only a port is defined for a listener, assp will listen on both IPv4 and IPv6 sockets.<br />
  For the definition of destination IP's applies the same. You are free to define hostnames instead of IP addresses like myhost.mydomain.com:25 - how ever, because of the needed IP address resolving, this will possibly slow down assp.

# variable - listenPort
msg000020=SMTP Listen Port
msg000021=The port number on which SPAMBOX will listen for incoming SMTP connections (normally 25). You can specify both an IP address and port number to limit connections to a specific interface. Separate multiple entries by "|".<p><small><i>Examples:</i> 25, 127.0.0.1:25, 127.0.0.1:25|127.0.0.2:25|[FE80:1::1]:25 </small></p>

# variable - smtpDestination
msg000030=SMTP Destination
msg000031=The IP <b>number!</b> and port number of your primary SMTP <a href=http://en.wikipedia.org/wiki/Mail_transfer_agent>mail transfer agent</a> (MTA). If multiple servers are listed and the first listed MTA does not respond, each additional MTA will be tried. If only a port number is entered, or the dynamic keyword <b>INBOUND</b> is used with a port number, then the connection will be established to the local IP address on which the connection was received. This is useful when you have several IP addresses with different domains or profiles in your MTA. If INBOUND:PORT is used, ReportingReplies (Analyze,Help,etc and CopyMail will go to 127.0.0.1:PORT or [::1]:PORT. If your needs are different, use smtpReportServer (SMTP Reporting Destination) and sendAllDestination (Copy Spam SMTP Destination). Separate multiple entries by "|"<br />.
  If you need to connect to the SMTP destination host using native SSL, write 'SSL:' in front of the IP/host definition. In this case the Perl module <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a> must be installed and enabled ( useIOSocketSSL ).<br />
  <br /><small><i>Examples:</i> 125,  127.0.0.1:125, 127.0.0.1:125|127.0.0.5:125|SSL:127.0.0.1:465, INBOUND:125</small>

# variable - smtpDestinationRT
msg000040=SMTP Destination Routing Table*
msg000041=If INBOUND is used in the SMTP Destination field, the rules specified here are used to route the inbound IP address to a different outbound IP address. You must specify a port number with the outbound IP address. <p><small><i>Example:</i>141.120.110.1=>141.120.110.129:25|141.120.110.2=>141.120.110.130:125|141.120.110.3=>SSL:141.120.110.130:125</small></p>

# variable - smtpLocalIPAddress
msg010430=SMTP - Destination to Local IP-address Mapping*
msg010431=You need to use the "file: ..." option for this parameter!<br />
  On windows systems at least Vista/2008 is required!<br />
  On multihomed systems with multiple default gateways, it could be required to define the local IP address (source) used for outgoing SMTP connections.<br />
  This parameter allows to define local IP addresses used for specific targets (IP's or hosts) - based on the local address, the system will use the right gateway/interface.<br />
  Define one entry per line, comments (#) are allowed. The syntax for an entry is 'target=>local-IP'.<br />
  target could be any of: IP(4/6) network, IP(4/6) address, hostname, domain-name with wildcard (*).<br /><br />
  for example:<br />
  22.* => 192.168.1.1            # IP4 Network<br />
  2222:333:* => FE81::1          # IP6 Network<br />
  22.23.24.25 => 10.1.1.1,       # host IP4<br />
  1:2:3:4:5:6:7:8 => FE94::5     # host IP6<br />
  *.domain.com => 10.1.1.1       # domain<br />
  host.domain.com => 192.168.1.1 # host<br />
  * => 172.16.1.1                # default - if not defined, the system default is used<br /><br />
  NOTICE: assp will NOT check, that the local IP address is available and bound to a local interface! It will also NOT check the system routing table! YOU SHOULD KNOW WHAT YOU DO!

# variable - listenPortSSL
msg000050=SMTP Secure Listen Port
msg000051=The port number on which SPAMBOX will listen for incoming secure SMTP connections (normally 465). You can specify both an IP address and port number to limit connections to a specific interface. Separate multiple entries by "|".<p><small><i>Examples:</i> 465, 127.0.0.1:465, 127.0.0.1:465|127.0.0.2:465 </small></p>. More configuration options are smtpSSLRequireClientCert, SSLSMTPCertVerifyCB and SSLSMTPConfigure .

# variable - smtpDestinationSSL
msg000060=SSL Destination
msg000061=The IP <b>address!</b> and port number to connect to when mail is received on the SSL listen port. If the field is blank, the primary SMTP destination will be used.<br />
  If you need to connect to the SSL destination host using native SSL, write 'SSL:' in front of the IP/host definition. In this case the Perl module <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a> must be installed and enabled ( useIOSocketSSL ).<br />
  <p><small><i>Examples:</i>127.0.0.1:565, 565</small></p>

# variable - listenPort2
msg000070=Second SMTP Listen Port
msg000071=A secondary port number on which SPAMBOX can accept SMTP connections. This is useful as a dedicated port for VPN clients or for those who cannot directly send mail to a mail server outside of their ISP's network because the ISP is blocking port 25. You may also specify an IP address to limit connections to a specific interface. Separate multiple entries by "|".<p><small><i>Examples:</i> 2525, 127.0.0.1:2525, 192.168.0.100:25000</small></p>

# variable - smtpAuthServer
msg000080=Second SMTP Destination
msg000081=The IP address and port number to connect to when mail is received on the second SMTP listen port. If the field is blank, the primary SMTP destination will be used. The purpose of this setting is to allow remote users to make authenticated connections and transmit their email without encountering SPF failures.
  If you need to connect to the second SMTP destination host using native SSL, write 'SSL:' in front of the IP/host definition. In this case the Perl module <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a> must be installed and enabled ( useIOSocketSSL ).<br />
  <p><small><i>Examples:</i> 587, 127.0.0.1:587, SSL:127.0.0.1:465</small></p>

# variable - NoAUTHlistenPorts
msg008060=Disable AUTH support on listenPorts
msg008061=This disables the SMTP AUTH command on the defined listenPorts independent from any other setting. This option works for listenPort , listenPort2 and listenPortSSL . The listener definition here has to be the same like in the port definitions. Separate multiple entries by "|".<p><small><i>Examples:</i> 25, 127.0.0.1:25, 127.0.0.1:25|127.0.0.2:25 </small></p>

# variable - DisableExtAUTH
msg010250=Disable SMTP AUTH for External Clients
msg010251=If you do not want external clients (IP not in acceptAllMail or relayPort is not used) to use SMTP AUTH - for example to prevent address and password harvesting - check this option.<br />
  The "AUTH" offer in the EHLO and HELP reply will be stripped out, if set to on.<br />
  Notice: setting this option to ON could prevent roaming users (dynamic IP) from being able to authenticate!

# variable - AUTHrequireTLS
msg010470=SMTP AUTH requires SSL/TLS
msg010471=An SSL listener or STARTTLS is required before the SMTP AUTH command can be used.<br />
  This setting is ignored for all private IP addresses (localhost, RFC 1918, RFC 4193)!<br />
  In case of a mistake '538 5.7.11 encryption required for requested authentication mechanism' is replied to the client.<br />
  'NO' is the default setting, but 'ALL' is recommended!

# variable - EnforceAuth
msg000090=Force SMTP AUTH on Second SMTP Listen Port
msg000091=Force clients connecting to the second listen port to authenticate before transferring mail. To use this setting, both listenPort2 (Second SMTP Listen Port) and smtpAuthServer (Second SMTP Destination) must be configured.<hr /><div class="menuLevel1">Notes On Network Setup</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/network.txt',3);" />

# heading - SMTP Session Limits 

# variable - MaxErrors
msg000100=Maximum Errors Per Session
msg000101=The maximum number of SMTP session errors encountered before the connection is dropped. A value of zero disables this feature. PB: meValencePB

# variable - maxSMTPSessions
msg000110=Maximum Sessions
msg000111=The maximum number of simultaneous SMTP sessions. This can prevent server overloading and DoS attacks. 64 simultaneous sessions are typically enough. Zero means no limit. Connections on relayPort will be counted, but connections on relayPort will never be limited because of this value. If the value is reached, assp will wait until the number of simultaneous SMTP sessions is lower than (value - 20) or (value * 0.75).

# variable - noMaxSMTPSessions
msg009160=No Maximum Sessions IP numbers*
msg009161=Mail from any of these IP numbers will pass through without checking maximum number of simultaneous SMTP sessions. For example: 145.145.145.145

# variable - maxSMTPipSessions
msg000120=Maximum Sessions Per IP Address
msg000121=The maximum number of SMTP sessions allowed per IP address. Use this setting to prevent server overloading and DoS attacks. 5 sessions are typically enough. If set to 0 there is no limit imposed by SPAMBOX. ispip (ISP/Secondary MX Servers) and acceptAllMail (Accept All Mail) matches are excluded from SMTP session limiting. PB: iplValencePB

# variable - HeaderMaxLength
msg000130=Maximum Header Size
msg000131=The maximum allowed header length, in bytes. At each mail hop header information is added by the mail server. A large mail header can indicate a mail loop. If the value is blank or 0 the header size will not be checked.

# variable - detectMailLoop
msg008860=Detect Possible Mailloop
msg008861=If set to a value higher than 0, SPAMBOX count it's own Received-header in the header of the mail. If this count exceeds the defined value, the transmission of the message will be canceled.

# variable - MaxEqualXHeader
msg009060=Maximum Equal X-Header Lines*
msg009061=The maximum allowed equal X-header lines - eg. "X-SubscriberID". If the value is set to empty the header will not be checked for equal X-header lines. This check will be skipped for noprocessing, whitelisted and outgoing mails.<br />
  The default is "*=&gt;20", which means any X-header can occur 20 time maximum. You can define different values for different X-headers - wildcards like "*" and "?" are allowed to be used.<br />
  For example:<br />
  *=&gt;20|X-Notes-Item=&gt;100|X-Subscriber*=&gt;10|X-AnyTag=&gt;0<br />
  A value of zero disables the check for the defined X-header. The check is also skipped if no default like "*=&gt;20" is defined and the X-header definition is not found.

# variable - maxRealSize
msg000140=Max Real Size of Local Message
msg000141=If the value of (number of [rcpt to] * [message size]) exceeds maxRealSize in bytes the transmission of the local message will be canceled. No limit is imposed by SPAMBOX if the field is left blank or set to 0. This option allows admins to limit useless bandwidth wasting based on the total transmit size.

# variable - MaxRealSizeAdr
msg009490=Max Real Size of Local Message Addresses*
msg009491=Use this parameter to set individual maxRealSize values for email addresses, domains, user names and IP addresses. A file must be specified if used.<br />
Accepts specific addresses (user@domain.com), user parts (user), entire domains (@domain.com) and IP addresses (CIDR notation like 123.1.101/32 is here not supported!) - group definitions could be used. Use one entry per line. Wildcards are supported (fribo*@domain.co?). A second parameter separated by "=>" specifies the size limit. <br />
For example:<br />
fribo*@thisdomain.co?=&gt;1000000<br />
jhanna=&gt;0<br />
@sillyguys.org=&gt;500000<br />
101.1.2.*=&gt;0<br />
[admins]=&gt;0 <br />
If multiple matches (values) are found in a mail for any IP address in the transport mail chain, any envelope recipient and the envelope sender, the highest value or 0 (no limit) will be used! If no match (value) is found in a mail, the definition in maxRealSize will take place.

# variable - maxRealSizeExternal
msg000150=Max Real Size of External Message
msg000151=If the value of (number of [rcpt to] * [message size]) exceeds maxRealSizeExternal in bytes the transmission of the external message will be canceled. No limit is imposed by SPAMBOX if the field is left blank or set to 0. This option allows admins to limit useless bandwidth wasting based on the total transmit size.

# variable - MaxRealSizeExternalAdr
msg009500=Max Real Size of External Message Addresses*
msg009501=Use this parameter to set individual maxRealSizeExternal values for email addresses, domains, user names and IP addresses. A file must be specified if used.<br />
Accepts specific addresses (user@domain.com), user parts (user), entire domains (@domain.com) and IP addresses (CIDR notation like 123.1.101/32 is here not supported!) - group definitions could be used. Use one entry per line. Wildcards are supported (fribo*@domain.co?). A second parameter separated by "=>" specifies the size limit. <br />
For example:<br />
fribo*@thisdomain.co?=&gt;1000000<br />
jhanna=&gt;0<br />
@sillyguys.org=&gt;500000<br />
101.1.2.*=&gt;0<br />
[admins]=&gt;0 <br />
If multiple matches (values) are found in a mail for any IP address in the transport mail chain, any envelope recipient and the envelope sender, the highest value or 0 (no limit) will be used! If no match (value) is found in a mail, the definition in maxRealSizeExternal will take place.

# variable - maxRealSizeError
msg000160=max real message size Error
msg000161=SMTP error message to reject maxRealSize / maxRealSizeExternal exceeding mails. For example:552 message exceeds MAXREALSIZE byte (size * rcpt)! MAXREALSIZE will be replaced by the value of maxRealSize / maxRealSizeExternal.

# variable - maxSize
msg008620=Max Size of Local Message
msg008621=If the value of ([message size]) exceeds maxSize in bytes the transmission of the local message will be canceled. No limit is imposed by SPAMBOX if the field is left blank or set to 0. This option allows admins to limit useless bandwidth wasting based on the transmit size.

# variable - MaxSizeAdr
msg009510=Max Size of Local Message Addresses*
msg009511=Use this parameter to set individual maxSize values for email addresses, domains, user names and IP addresses. A file must be specified if used.<br />
Accepts specific addresses (user@domain.com), user parts (user), entire domains (@domain.com) and IP addresses (CIDR notation like 123.1.101/32 is here not supported!) - group definitions could be used. Use one entry per line. Wildcards are supported (fribo*@domain.co?). A second parameter separated by "=>" specifies the size limit. <br />
For example:<br />
fribo*@thisdomain.co?=&gt;1000000<br />
jhanna=&gt;0<br />
@sillyguys.org=&gt;500000<br />
101.1.2.*=&gt;0<br />
[admins]=&gt;0 <br />
If multiple matches (values) are found in a mail for any IP address in the transport mail chain, any envelope recipient and the envelope sender, the highest value or 0 (no limit) will be used! If no match (value) is found in a mail, the definition in maxSize will take place.

# variable - maxSizeExternal
msg008630=Max Size of External Message
msg008631=If the value of ([message size]) exceeds maxSizeExternal in bytes the transmission of the external message will be canceled. No limit is imposed by SPAMBOX if the field is left blank or set to 0. This option allows admins to limit useless bandwidth wasting based on the transmit size.

# variable - MaxSizeExternalAdr
msg009520=Max Size of External Message Addresses*
msg009521=Use this parameter to set individual maxSizeExternal values for email addresses, domains, user names and IP addresses. A file must be specified if used.<br />
Accepts specific addresses (user@domain.com), user parts (user), entire domains (@domain.com) and IP addresses (CIDR notation like 123.1.101/32 is here not supported!) - group definitions could be used. Use one entry per line. Wildcards are supported (fribo*@domain.co?). A second parameter separated by "=>" specifies the size limit. <br />
For example:<br />
fribo*@thisdomain.co?=&gt;1000000<br />
jhanna=&gt;0<br />
@sillyguys.org=&gt;500000<br />
101.1.2.*=&gt;0<br />
[admins]=&gt;0 <br />
If multiple matches (values) are found in a mail for any IP address in the transport mail chain, any envelope recipient and the envelope sender, the highest value or 0 (no limit) will be used! If no match (value) is found in a mail, the definition in maxSizeExternal will take place.

# variable - maxSizeError
msg008640=max message size Error
msg008641=SMTP error message to reject maxSize / maxSizeExternal exceeding mails. For example:552 message exceeds MAXSIZE byte (size)! MAXSIZE will be replaced by the value of maxSize / maxSizeExternal.

# variable - MaxAUTHErrors
msg009310=Max Number of AUTHentication Errors
msg009311=If an IP (/24 network is used) exceeds this number of authentication errors (535 or 530) the transmission of the current message will be canceled and any new connection from that IP will be blocked for 5-10 minutes.<br />
  Every 5 Minutes the 'AUTHError' -counter of the IP will be decreased by one. autValencePB is used for the penalty box.<br />
  No limit is imposed by SPAMBOX if the field is left blank or set to 0. This option allows admins to prevent external bruteforce or dictionary attacks via AUTH command. Whitelisted, noBlockingIPs and NoProcessing IP's are ignored like any relayed connection.

# variable - noMaxAUTHErrorIPs
msg009580=Do not check MaxAUTHErrors for these IP's*
msg009581=List of IP's which should not be checked for MaxAUTHErrors .  For example: 145.145.145.145|145.146.

# variable - DoSameSubject
msg010040=Check Same Subjects
msg010041=If activated, assp will check the mail subjects for equality using the config parameters below. Scoring is done with 'isValencePB'.

# variable - subjectFrequencyInt
msg010050=Subject Frequency Interval
msg010051=The time interval in seconds in which the number of equal subjects has not to exceed a specific number ( subjectFrequencyNumSubj ).<br />
  Use this in combination with subjectFrequencyNumSubj to limit the number of equal subjects in a given interval. A value of 0 (default) will disable this feature and clean the cache within five minutes.<br />
  <input type="button" value="edit Subject Frequency Cache" onclick="javascript:popFileEditor('DB-subjectFrequencyCache','1h');" />

# variable - subjectFrequencyNumSubj
msg010060=Subject Frequency Number of Subjects
msg010061=The number of equal subjects that has not to exceed in a specific time interval ( subjectFrequencyInt ).<br />
  Use this in combination with subjectFrequencyInt to limit the number of equal subjects in a given interval. A value of 0 (default) will disable this feature and clean the cache within five minutes.<br />
  <input type="button" value="edit Subject Frequency Cache" onclick="javascript:popFileEditor('DB-subjectFrequencyCache','1h');" />

# variable - subjectFrequencyOnly
msg010070=Check Equal Subject Frequency for this Users only*
msg010071=A list of local addresses, for which the 'subject frequency check' should be done. Leave this field blank (default), to do the check for every address.<br />
  Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).<br />
  For example: fribo*@thisdomain.com|jhanna|@sillyguys.org 

# variable - NoSubjectFrequency
msg010080=Check Equal Subject Frequency NOT for this Users*
msg010081=A list of local addresses, for which the 'subject frequency check' should not be done.<br />
  Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).<br />
  For example: fribo*@thisdomain.com|jhanna|@sillyguys.org 

# variable - NoSubjectFrequencyIP
msg010090=Check Equal Subject Frequency NOT for this IP's*
msg010091=Mail from any of these IP numbers will pass through without checking the equality of subjects. For example: 145.145.145.145

# variable - smtpIdleTimeout
msg000170=SMTP Idle Timeout
msg000171=The number of seconds a session is allowed to be idle before being forcibly disconnected. The default is 180 seconds. No limit is imposed by SPAMBOX if the field is left blank or set to 0. If you have not defined an IdleTimeout on your MTA, this value should not be set to 0, because then a connection will never be timed out!

# variable - NpWlTimeOut
msg009860=SMTP Idle Timeout for Whitelisted and Noprocessing
msg009861=The number of seconds a whitelisted or noprocessing session is allowed to be idle before being forcibly disconnected. The default is 1200 seconds. No limit is imposed by SPAMBOX if the field is left blank or set to 0. If you have not defined an IdleTimeout on your MTA, this value should not be set to 0, because then a connection will never be timed out!

# variable - smtpNOOPIdleTimeout
msg000180=SMTP Idle Timeout after NOOP
msg000181=The number of seconds a session is allowed to be idle after a "NOOP" command is received, before being forcibly disconnected. The default is 0 seconds. No limit is imposed by SPAMBOX if the field is left blank or set to 0.<br />
  This should prevent hackers to hold and block connections by sending "NOOP" commands short before the "smtpIdleTimeout" is reached.

# variable - smtpNOOPIdleTimeoutCount
msg000190=SMTP Idle Timeout after NOOP Count
msg000191=The number of counts a session is allowed send "NOOP" commands following on each other, before being forcibly disconnected. The default is 0. No limit is imposed by SPAMBOX if the field is left blank or set to 0.<br />
  This in cooperation with "smtpNOOPIdleTimeout" should prevent hackers to hold and block connections by sending repeatedly "NOOP" commands short before the "smtpNOOPIdleTimeout" is reached. If "smtpNOOPIdleTimeout" is not defined or 0, this value will be ignored!<hr /><div class="menuLevel1">Notes On SMTP Session Limits</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/sessionlimits.txt',3);" />

# heading - Group definition

# variable - Groups
msg009470=Address and Domain Groups*
msg009471=
 If you don't want to use group definitions, leave this field blank otherwise a file definition like 'file:files/groups.txt' is required.<br/>
 Group definitions could be used in any other configuration value where multiple user names, email addresses or domain names or IP addresses could be defined.<br />
 Groups are defined and used using the same syntax [group-name] (including the brackets) in a single line. In the configuration parameters, the line [group-name] will be replaced by the content of the group definition, that is done here.<br />
 All group definitions are case sensitive. Group names can only contain the following characters: A-Z, a-z, 0-9, - , _ and @ !<br />
 The structure of this file has to be as follows:<br />
 <br />
 [super_spamlovers]<br />
 myBoss<br />
 ldap:{host=&gt;my_LDAP_server:389,base=&gt;(sep)DC=domain,DC=tld(sep),user=&gt;(sep)CN=admin,DC=domain(sep),password=&gt;(sep)pass(sep),timeout=&gt;2,scheme=&gt;ldap,STARTTLS=&gt;1,version=&gt;3},{(CN=management)}{member},{(CN=%USERID%)}{mailaddress}<br />
 entry<br />
 exec:/usr/bin/list_postfix_users --domain mydomain --group postoffice<br />
 entry<br />
 ...<br />
 <br />
 [admins]<br />
 ldap:{host=&gt;domino1.mydomain.com:389,base=&gt;(sep)DC=domain,DC=tld(sep),user=&gt;(sep)Administrator(sep),password=&gt;(sep)pass(sep),timeout=&gt;2,scheme=&gt;ldap,STARTTLS=&gt;1,version=&gt;3},{(CN=LocalDomainAdmins)}{member},{(CN=%USERID%)}{mailaddress}<br />
 entry<br />
 entry<br />
 ...<br />
 <br />
 [specialIPList]<br />
 1.2.3.4<br />
 123.234.0.0/16<br />
 ::1<br />
 <br />
 Lines starting with a # OR ; are consider a comment. Empty lines will be ignored. A group definition stops, if a new group definition starts or at the end of the file. Comments are not allowed inside a definition line.<br />
 <br />
 There are two possible methods to import entries from an external source in to a group - the execution of a system command or an LDAP query.<br />
 To import entries via a system command like (eg. cat|grep or find or your self made shell script), write a single line that begins with exec: followed by the command to be executed - like:<br />
 exec:cat /etc/anydir/*.txt|grep '@'<br />
 The executed system command has to write a comma(,) or pipe(|) or linefeed(LF,CRLF) separated list of entries to STDOUT, that should become part of that group, where this line is used. There could be multiple and any combination of entry types in one group definition.<br />
 <br />
 If you are familar with the usage of LDAP, you can define LDAP queries to import entries from one or more LDAP server. This is done, defining one query per line. The syntax of such a line is:<br />
 <br />
 ldap:{host_and_protocol},{LDAP_group_query_filter}{LDAP_group_query_attribut_to_return},{LDAP_entry_query_filter}{LDAP_entry_query_attribut_to_return}<br />
 <br />
 If the 'host_and_protocol' part is empty {}, the default LDAP configuration will be used. A 'host_and_protocol' part should contain the following entries in the following structure:<br />
 {host=&gt;127.0.0.1:389,base=&gt;(sep)DC=domain,DC=tld(sep),user=&gt;(sep)...(sep),password=&gt;(sep)pass(sep),timeout=&gt;..,scheme=&gt;ldap/ldaps,STARTTLS=&gt;0/1,version=&gt;2/3}<br />
 The 'host' has to be set, if you want to define any other LDAP parameter. If any other parameter is not defined, the default LDAP configuration value will be used, except user and password. The port definition (:xxx) in the host setting is optional - if not defined, the default LDAP ports 389(LDAP) and 636(LDAPS) will be used. It is possible to define a comma(,) separated list of hosts for failover functionality like 'host=>"localhost:389,192.168.1.1:389,...."' - notice the quotes as terminator which are required in this case!<br />
 The value of the base, password and user parameter has to start and end with a single character (sep) as terminator, that is not part of the value
 and is not used in the value. The parameter "base" defines the LDAP search root like LDAPRoot .<br />
 <br />
 The 'LDAP_group_query_filter' and 'LDAP_group_query_attribut_to_return' are used to query an LDAP group for it's members (users). The resulting list will contain the requested attributes of all group members. The definition of these two parameters could look as follows:<br />
 {(&(objectclass=dominoGroup)(CN=LocalDomainAdmins))}{member}<br />
 <br />
 It is possible to modify each returned value with a callback-code. This is for example useful for MS-AD queries on the attribute 'proxyaddresses', which returns a list of all available mail addresses (SMTP,smtp,X400...).
 <br />
 example: ldap:{},{(&(CN=firstname lastname)(proxyaddresses=smtp:*))<=s/^\s*smtp:\s*(.+)\s*$/$1/i}{proxyaddresses},{}{}
 <br />
 <= is the required separator, s/^\s*smtp:\s*(.+)\s*$/$1/i is the callback code.<br />
 The callback code has to return a value of not zero or undef on success. The code gets the LDAP result in the variable $_ and has to modify this variable in place on success.<br />
 It is not allowed to use any of the following characters in the callback definition of an ldap line: {}| <br />
 <br />
 The 'LDAP_entry_query_filter' and 'LDAP_entry_query_attribut_to_return' are used to query each member from the first query, for it's email address. The literal '%USERID%' in the 'LDAP_entry_query_filter' will be replaced by each LDAP-attribute result of the first query. The definition of these two parameters could look as follows:<br />
 {(&(objecttype=person)(CN=%USERID%)(o=%USERID%))}{mailaddress}<br />
 or more simple<br />
 {(&(objecttype=person)(CN=%USERID%))}{mailaddress}<br />
 <br />
 A callback code could be used the same way like for 'LDAP_group_query_filter' - {(&(objecttype=person)(CN=%USERID%))<=callback-code}{mailaddress}.
 <br />
 To break long lines in to multiple, terminate a continued line with a slash "/"<br /><br />
 If you are able to get all results (eg. email addresses or domain names) with the 'LDAP_group_query' query, leave the definition of 'LDAP_entry_query_filter' and 'LDAP_entry_query_attribut_to_return' empty {}{}.<br />
 <br />
 The result of each group definition will be stored in a file in files/group_export/GROUPNAME.txt.<br />
 The groups are build at every start of assp and if the defined file or an include file is stored (changed file time). To force a reload of all groups, open the file and click 'Save changes' or change the file time with an external shell script. It is also possible to use GroupsReloadEvery, to reload the Groups definition in time intervals, if the exec: or ldap: option are used.

# variable - GroupsReloadEvery
msg007910=Reload the Groups definitions every this minutes <sup>s</sup>
msg007911=SPAMBOX will reload the Groups definition every this minutes, if the exec: or ldap: option is used in Groups. <br />
 A value of zero disables the scheduled reload. Defaults to 60 minutes.<br />
 <hr /><div class="menuLevel1">Notes On Group Definitions</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/groupsdef.txt',3);" />

# heading - SPAM Control <a href="http://sourceforge.net/p/assp/wiki/Getting_Started" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="Getting Started" /></a>

# variable - redRe
msg000200=Regular Expression to Identify Redlisted Mail*
msg000201=If an email matches this Perl regular expression it will be considered redlisted.<br />
 redRe detects tags to process a mail like the recipient were redlisted - nothing else (no redlist addition/removal).<br />
 The Redlist serves two purposes:<br />
1) the Redlist is a list of addresses that cannot contribute to the
whitelist and which are not considered local even if their mail is
from a local computer. For example, if someone goes on a vacation and
turns on their autoresponder, put them on the redlist until
they return. Then as they reply to every spam they receive they won't
corrupt your non-spam collection or whitelist: \[autoreply\]<br />
2) Redlisted addresses will not be added to the Whitelist when your
local user sends mail to that address, thereby preventing accidental
pollution of the Whitelist by, say, inadvertent replies by your
users to mails from the spammer.<br />
Redlisted messages will not be stored in the SPAM/NOTSPAM-collection. As all fields marked by * this field accepts
a list separated by | or a specified file 'file:files/redre.txt'. 

# variable - EmailWhiteRemovalToRed
msg000210=Add  Whitelist Removals To Redlist 
msg000211=If set addresses which are removed from Whitelist via email-interface will automatically be added to the Redlist. The address can only be added again to the Whitelist after it is removed from the Redlist.

# variable - SpamError
msg000220=Spam Error
msg000221=SMTP error message to reject spam. The literal LOCALDOMAIN will be replaced by the recipient domain. The literal LOCALUSER will be replaced by the recipient user part. For example:554 5.7.1 Mail appears to be unsolicited -- send error reports to postmaster@LOCALDOMAIN. 

# variable - NotSpamTag
msg010310=Ham Password SALT
msg010311=If an incoming email subject contains the TAG generated based on this value, it will be considered as defined in NotSpamTagProc . The literal 'NOTSPAMTAG' (will be replaced by a 10 digit not-spam-tag) can be used in any 5xx error reply (SpamError , RBLError , scriptError , URIBLerror ....) to ask for resending the mail with the TAG in the subject.<br />
 Randomly picked up bit sequences of the text defined here, are used as "SALT" to calculate a 10 digit not-spam-tag. This value must be at least 12 characters long. Leave this value empty to disable this feature.<br />
 Every generated TAG can be used by the sender exactly one time. Every additional usage of a TAG will be ignored, and the sender may get a new generated TAG.<br />
 To define your own static TAGs, use whiteRe and/or npRe and change the error reply definitions accordingly.<br />
 To generate a random 80 character string, run 'perl -e "print chr(int(rand(94))+33)for(0...79);"' from command line and copy and paste the result to here.

# variable - NotSpamTagProc
msg010320=Not-Spam-Tag will consider the mail as
msg010321=If a sender uses the Not-Spam-Tag , how should the mail be processed. Regardless of this setting, the IP address of the sender will not be penalized if a NotSpamTag is found.

# variable - noGriplistUpload
msg000230=Don't Upload Griplist Stats
msg000231=Check this to disable the Griplist upload when rebuildspamdb runs. The Griplist contains IPs and their value between 0 and 1, lower is less spammy, higher is more spammy. This value is called the grip value. 

# variable - noGriplistDownload
msg000240=Don't auto-download the Griplist file
msg000241=Set this checkbox, if you don't use the Griplist. You have to disable also noGriplistUpload to download the Griplist.

# variable - StoreSPAMBOXHeader
msg008770=Store Assp-Header into Spam Collection
msg008771=Add "X-Assp-" to the collected spam-mails.

# variable - AddIntendedForHeader
msg000250=Add Envelope-Recipient Header
msg000251=Adds two lines to the email header: "X-Assp-Intended-For: user@domain" and "X-Assp-Envelope-From: user@domain".

# variable - NoExternalSpamProb
msg000260=Block Outgoing Spam-Prob header
msg000261=Check this box if you don't want your X-Assp-Spam-Prob header on external mail<br />
 Note this means mail from local users to local users will also be missing the header.

# variable - AddSpamHeader
msg000270=Add Spam Header
msg000271=Adds a line to the email header "X-Assp-Spam: YES" if the message is spam, or "X-Assp-Spam: YES (Probably)" if it is possibly spam.

# variable - AddCustomHeader
msg000280=Add Custom Header
msg000281=Adds a line to the email header if the message is spam. For example: <a href="http://exchangepedia.com/blog/2008/01/assigning-scl-to-messages-scanned-by.html">X-Spam-Status:yes<img src="get?file=images/info.png" alt="Assigning SCL to messages scanned by 3rd-party antispam filters" /></a>

# variable - AddLevelHeader
msg000290=Add Graphical Level Header
msg000291=Adds a line to the email header "X-Assp-Spam-Level: **** " showing the total message score represented by stars (1 - 20), every star represents five scoring points.

# variable - AddSubjectHeader
msg000300=Add X-SPAMBOX-Original-Subject Header
msg000301=Adds a line to the email header "X-SPAMBOX-Original-Subject: the subject".

# variable - AddSpamReasonHeader
msg000310=Add Spam Reason Header
msg000311=Adds a line to the email header "X-Assp-Spam-Reason: " explaining why the message is spam.<br /><hr /><div class="menuLevel1">Notes On Spam Control</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/spamcontrol.txt',3);" />

# heading - Copy Spam &amp; Ham

# variable - sendAllSpam
msg000320=Copy Spam and Send to this Address
msg000321=If this is set, SPAMBOX will deliver a copy of spam mails to this address. For example: spammaster@mydomain.com. The literal USERNAME is replaced by the user part of the recipient, the literal DOMAIN is replaced by the domain part of the recipient.
 For example: USERNAME@Spam.DOMAIN, USERNAME+Spam@DOMAIN, catchallspamthis@DOMAIN. Separate multiple entries by comma or space. To deliver copy of spams based on the domain name (only some special hosted domains), use ccSpamInDomain .

# variable - ccSpamInDomain
msg008880=Copy Spam and Send to this Address per Domain*
msg008881=If the domain of the recipient-address is matches one in this list, SPAMBOX will deliver an additional copy of spam emails of a domain to this address (even if sendAllSpam is not set). For example: monitorspam@example1.com|monitor@example2.com.

# variable - sendAllDestination
msg000330=Copy Spam SMTP Destination
msg000331=IP address and port to connect to when Spam messages are copied. If blank they go to the main SMTP Destination. eg "10.0.1.3:1025", "SSL:10.0.1.3:465", "1025", etc.

# variable - ccSpamFilter
msg000340=Copy Spam to these Recipients Only*
msg000341=Restricts Copy Spam to these recipients. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). Wildcards are supported (fribo*@domain.com).

# variable - ccSpamAlways
msg000350=Copy Spam to these Recipients always*
msg000351=Copy Spam to these recipients regardless of collection mode. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).

# variable - ccSpamNeverRe
msg000360=Do Not Copy Spam Regex*
msg000361=Never Copy Spam regardless of collection mode. Put anything here to identify messages which should not be copied.

# variable - ccMaxScore
msg000370=Do Not Copy Messages Above This MessageTotal score
msg000371=Messages whose score exceeds this threshold will not be copied.  For example: 75

# variable - ccMaxBytes
msg000380=Restrict Copy Spam to MaxBytes
msg000381=CCMail will cut off Spam mails, thereby reducing the load considerably (recommended).

# variable - spamSubjectCC
msg000390=Prepend Spam Subject to Copied Spam
msg000391=If set, spamSubject gets prepended to the subject of the copied message.

# variable - spamTagCC
msg000400=Prepend Spam Tag to Copied Spam
msg000401=The check which caused the spam detection will be prepended to the subject of the message. For example: [DNSBL]

# variable - sendAllHamDestination
msg000410=Copy Not-Spam SMTP Destination
msg000411=IP address and port to connect to when  Ham messages are copied. If blank they go to the Spam SMTP Destination. eg "10.0.1.3:1025", "SSL:10.0.1.3:465",, "1025", etc.

# variable - sendHamInbound
msg000420=Copy Incoming Not-Spam and Send to this Address
msg000421=If you put an address in this box  SPAMBOX will forward a copy of notspam messages from outside to this address. The literal USERNAME is replaced by the user part of the recipient, the literal DOMAIN is replaced by the domain part of the recipient. For example: archiv@mydomain.com, USERNAME@mybackup.domain, catchallforthis@DOMAIN

# variable - sendHamOutbound
msg000430=Copy Outgoing Not-Spam and Send to this Address
msg000431=If you put an address in this box SPAMBOX will forward a copy of outgoing notspam messages to this address.

# variable - ccHamFilter
msg000440=Copy Ham Filter*
msg000441=Copy Not-Spam to these addresses only. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). Wildcards are supported (fribo*@domain.com).

# variable - ccnHamFilter
msg000450=Do Not Copy Ham Filter*
msg000451=Do Not Copy Ham to these addresses. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). Wildcards are supported (fribo*@domain.com).

# variable - ccMailReplaceRecpt
msg000460=ccMail Recipient Replacement
msg000461=The recipient replacement (ReplaceRecpt) rules from the "Recipients/Local Domains" section, will be used to replace ccMail recipients. For example: sendHamInbound = USERNAME@yourspamdomain.lan - in this case you are able to detect the target domain "yourspamdomain.lan" in a rule and you can replace the recipient/domain depending on its values and/or on the senders address.<br />
<hr /><div class="menuLevel1">Notes On CC Messages</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/copymail.txt',3);" />

# heading - SPAM Lover/Hater

# variable - spamSubjectSL
msg000470=Suppress SpamSubject to Spam-Lover-Messages
msg000471=If set, spamSubject and spamTag does NOT get prepended to the subject of the Spam-Lover-Message.

# variable - spamTagSL
msg000480=Suppress SpamTags to Spam-Lover-Messages
msg000481=If set, spamTags (the method used to catch spam) does NOT get prepended to the subject of the Spam-Lover-Message.

# variable - groupSpamLovers
msg008800=Group SpamLovers and Not SpamLovers per mail
msg008801=If set, the first envelope recipient consider a mail to be for spamlovers or not. If the first envelope recipient is any SpamLover, all other (following) envelope recipients must be also any SpamLover (or reverse) - if not, their address will be not accepted by SPAMBOX for this single mail and '452 too many recipients' will be sent.

# variable - spamLovers
msg000490=All Spam-Lover*
msg000491=Messages to Spam-Lovers are processed and filtered by SPAMBOX, but (optionally) get tagged with spamSubject and are not blocked. When a
 Spam-Lover is not the sole recipient of a message, the message is processed
 normally, and if it is found to be spam, it will not be delivered to the Spam-Lover.
 delaySpamLovers are not included here and must be set additionally.
 Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). Wildcards are supported (fribo*@domain.com). Default: postmaster|abuse.<br />For example: fribo*@thisdomain.com|jhanna|@sillyguys.org
 <hr>
 This option and all SpamLover-Options (...SpamLovers) below accepting a second score parameter like "user@your-domain.com=>70"<br />
 If such a parameter is defined in any option for an entry and the recipient address matches this entry and the message score exceeds the parameter value, the message will be considered spam.<br />
 If there are multiple possible matches for a recipient address found, the generic longest match (and assigned value) will be used.<br />
 SPAMBOX will use the highest found value for all envelope recipients of an email.<br />
 The according low limit is calculated as:<br />
 for outgoing mails: value - ( PenaltyMessageLimit - PenaltyMessageLow )<br />
 or<br />
 for incoming and local mails: value - ( LocalPenaltyMessageLimit - LocalPenaltyMessageLow )

# variable - SpamLoversRe
msg000500=Regular Expression to Identify Spam-Lover*
msg000501=If a message matches this regular expression it will be considered a Spam-Lover message.

# variable - baysSpamLovers
msg000510=Bayesian Spam-Lover*
msg000511=

# variable - baysSpamLoversRe
msg000520=Regular Expression to Identify Bayesian Spam-Lover*
msg000521=If a message matches this regular expression it will be considered a Bayesian Spam-Lover message. For example: password|news

# variable - baysSpamLoversRed
msg000530=Do not store Bayesian Spam-Lover in SpamDB
msg000531=If set (recommended), mail to Bayesian Spam-Lover will be stored in the discarded folder (not in the Spam/Notspam folder).

# variable - blSpamLovers
msg000540=Blacklisted Domains Spam-Lover*
msg000541=

# variable - bombSpamLovers
msg000550=Bomb Spam-Lover*
msg000551=

# variable - hlSpamLovers
msg000560=HELO Blacklisted Spam-Lover*
msg000561=

# variable - hiSpamLovers
msg000570=Valid/Invalid Helo*
msg000571=

# variable - atSpamLovers
msg000580=Bad Attachment Spam-Lover*
msg000581=

# variable - spfSpamLovers
msg000590=SPF Failures Spam-Lover*
msg000591=

# variable - rblSpamLovers
msg000600=DNSBL Failures Spam-Lover*
msg000601=

# variable - uriblSpamLovers
msg000610=URIBL Failures Spam-Lover*
msg000611=

# variable - srsSpamLovers
msg000620=Unsigned SRS Bounces Spam-Lover*
msg000621=

# variable - delaySpamLovers
msg000630=No Delaying Spam-Lover*
msg000631=

# variable - isSpamLovers
msg000640=Invalid Sender Spam-Lover*
msg000641=

# variable - mxaSpamLovers
msg000650=Missing MX Spam-Lover*
msg000651=

# variable - ptrSpamLovers
msg000660=Invalid/Missing PTR Spam-Lover*
msg000661=

# variable - pbSpamLovers
msg000670=Penalty Box Blocking Spam-Lover *
msg000671=

# variable - sbSpamLovers
msg000680=Country Blocking Spam-Lover *
msg000681=

# variable - spamHaters
msg000690=All Spam-Haters*
msg000691=Spam-Haters are used to override Spam-Lovers.
 Example: If you have set your entire domain as a Spam-Lover(s), but there are still some addresses you still wish to block spam for. If you add those addresses to the Spam-Haters field allows messages to only those addresses to be blocked while still allowing the messages to the other Spam-Lovers pass through. The message will only be blocked if all recipients are Spam-Haters. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).<br />For example: *fribo@thisdomain.com|jhanna|@sillyguys.org 

# variable - baysSpamHaters
msg000700=Bayesian Spam-Hater*
msg000701=

# variable - rblSpamHaters
msg000710=DNSBL Failures Spam-Hater*
msg000711=

# variable - hlSpamHaters
msg000720=HELO Blacklisted Spam-Hater*
msg000721=

# variable - switchSpamLoverToScoring
msg000730=Switch Spam-Lover to Message Scoring
msg000731=Put the filter automatically in "Message Scoring Mode" when DoPenaltyMessage is set (instead of stopping spam processing altogether).<br /><hr /> <div class="menuLevel1">Notes On Spam-Lover</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/spamlover.txt',3);" />

# heading - No Processing

# variable - noProcessingIPs
msg000740=No Processing IPs*
msg000741=Mail from any of these IP's will pass through without processing. (some attachments may be processed)<br />
 For example: 145.145.145.145|146.145.<br />
  To define IP's only for specific email addresses or domains (recipients) you must use the file:... option<br />
  An entry (line) may look as follows:<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br /><br />
  It is possible to define a predefined group on any or both sides of the '=>' separator, like:<br />
  [ipgroup]=>[usergroup]|user@mydomain<br /><br />
  NOTICE: the following combination of two entries, will lead in to a user/domain based matching - the global entry will be ignored!<br />
  145.146.0.0/16 # comment<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br />
  If multiple user/domain based entries are defined for the same IP, only the last one will be used!<br /><br />
 <span class="positive"> All fields marked by '*' accept  a filepath/filename : 'file:files/ipnp.txt'.</span>

# variable - noProcessing
msg000750=No Processing Addresses*
msg000751=Mail solely to or from any of these addresses are proxied without processing. The envelope sender and recipients are checked. Like a more efficient version of Spam-Lovers &amp; redlist combined. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com). If you register TO addresses here, all recipients for a single mail must be marked as noprocessing to flag the mail as "noprocessing".

# variable - noProcessingFrom
msg000760=No Processing Addresses From*
msg000761=Mail solely from any of these addresses are proxied without processing. Accepts specific addresses (user@example.com), user parts (user) or entire domains (@example.com).  Wildcards are supported (fribo*@example.com).

# variable - noProcessingDomains
msg000770=No Processing Domains*
msg000771=Domains from which you want to receive all mail and  proxy without processing. Your ISP, domain registration, mail list servers, stock broker, or other key business partners might be good candidates. Note this matches the end of the address, so if you don't want to match subdomains then include the @. Note that buy.com would also match spambuy.com but .buy.com won't match buy.com. For example: sourceforge.net|@google.com|.buy.com

# variable - npRe
msg000780=Regular Expression to Identify No Processing Mail*
msg000781=If a message matches this Perl regular expression SPAMBOX will treat the message as a 'No Processing' mail. For example: 169\.254\.122\.|172\.16\.|\[autoreply\].

# variable - npSize
msg000790=Message Size Limit
msg000791=SPAMBOX will treat incoming messages larger than this SIZE (in bytes) as 'No Processing' mail, after the header part of the mail is received without any error. Empty or 0 disables the feature.

# variable - npSizeOut
msg000800=Message Size Limit Outgoing
msg000801=SPAMBOX will treat outgoing messages larger than this SIZE (in bytes) as 'No Processing' mail. Empty or 0 disables the feature. 

# variable - processOnlyAddresses
msg000810=Process Only These Addresses*
msg000811=If the Enable Process Only Addresses check box is checked, mail solely to or from any of the addresses in this list  (envelope only) will be processed by SPAMBOX. All others will be proxied without processing. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).<br /> Note that if an address matches both the NoProcessing and the OnlyTheseProcessing lists, the NoProcessing rules take precedence.

# variable - poTestMode
msg000820=Enable Process Only Addresses
msg000821=<br /><hr /><div class="menuLevel1">Notes On No Processing</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/noprocessing.txt',3);" />

# heading - Whitelisting

# variable - whiteListedIPs
msg000830=Whitelisted IPs*
msg000831=They contribute to the Whitelist and to Notspam. For example: 145.145.145.145|146.145.|146.145.0.0/16. It is recommended to use the CIDR notation.<br />
  To define IP's only for specific email addresses or domains (recipients) you must use the file:... option<br />
  An entry (line) may look as follows:<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br /><br />
  It is possible to define a predefined group on any or both sides of the '=>' separator, like:<br />
  [ipgroup]=>[usergroup]|user@mydomain<br /><br />
  NOTICE: the following combination of two entries, will lead in to a user/domain based matching - the global entry will be ignored!<br />
  145.146.0.0/16 # comment<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br />
  If multiple user/domain based entries are defined for the same IP, only the last one will be used!<br /><br />
  <span class="positive"> All fields marked by '*' accept  a filepath/filename : 'file:files/ipwl.txt'.</span>

# variable - whiteRe
msg000840=Regular Expression to Identify Non-Spam*
msg000841=If an incoming email matches this Perl regular expression, it will be considered whitelisted.<br />For example: Secret Ham Password|307\D{0,3}730\D{0,3}4[12]\d\d<br />For help writing regular expressions click <a href="http://www.perlmonks.org/index.pl?node=perlre" rel="external">here</a>.<br />IMPORTANT: The body is scanned in a later stage  AFTER all sender related checks are performed. So a white regular expression here might not prevent the message to be blocked by eg. invalid PTR. Set the sender related checks to score only if you want to make sure that the white regular expression will be seen. Some things you might include here are your office phone number or street address, spam rarely includes these details.  .

# variable - whiteListedDomains
msg000850=Whitelisted Domains and Addresses*
msg000851=Domains and addresses from which you want to receive all mail. Your ISP, domain registration, mail list servers, stock broker, or other key business partners might be good candidates. Be careful not to put widely used or local domains here like google.com or hotmail.com or mydomain.com. Note this matches the end of the address, so if you don't want to match subdomains then include the @. Note that example.com would also match spamexample.com but .example.com won't match example.com. Wildcards are supported. For example: sourceforge.net|group*@google.com|.example.com<br /><br />
  It is possible to make email addresses whitelisted only for a set of local domains and/or local users. Use wildcards (* and ?) to define domains.<br />
  Use the following syntax to do this:<br />
  *@anydomain=>*@any_local_domain - for domain to domain<br />
  *@*.anydomain=>*@any_local_domain - for any sub-domain to domain<br />
  user@anydomain=>*@*.any_local_domain - for user to any sub-domain<br /><br />
  It is possible to define more than one entry at the left and the right side of the definition (=&gt;), like:<br />
  *@anydomain|*@other_domain=>*@any_local_domain|*@other_local_domain - always separate multiple entries by pipes<br />
  It is also possible to use a GroupDefinition in any or both sides, like:<br />
  [sendergroup]=>[recipientgroup]<br />
  [sendergroup1]|[sendergroup2]|*@domain=>[recipientgroup1]|[recipientgroup2]|user@local_domain<br /><br />
  NOTICE - that the local email addresses and domains are not checked to be local once

# variable - wildcardUser
msg000860=Wildcard User for White Domain 
msg000861=If you add this user via email-interface(eg: *@domain.com), the whole domain will be whitelisted. For example: '*'

# variable - ValidateRWL
msg000870=Enable Realtime Whitelist Validation
msg000871=RWL: Real-time white list. These are lists of IP addresses that have
 somehow been verified to be from a known good host. Senders that pass RWL validation will pass IP-based filters. This requires an installed <a href="http://search.cpan.org/search?query=Net::DNS" rel="external">Net::DNS</a> module in PERL. 

# variable - RWLwhitelisting
msg000880=Whitelist all RWL Validated Addresses
msg000881=If set, the message will also pass Bayesian Filter and URIBL.

# variable - RWLServiceProvider
msg000890=RWL Service Providers*
msg000891=Host Names of RWLs to use separated by "|".<br />
 Examples are:<br />
 <p>list.dnswl.org|query.bondedsender.org|cml.anti-spam.org.cn|iadb.isipp.com|hul.habeas.com </p>

# variable - RWLmaxreplies
msg000900=Maximum Replies
msg000901=A reply is affirmative or negative reply from a RWL. The RWL module will wait for this number of replies (negative or positive) from the RWLs listed under Service Provider for up to the Maximum Time below. This number should be equal to or less than the number of RWL Service Providers listed to allow for randomly unavailable RWLs. 

# variable - RWLminhits
msg000910=Minimum Hits
msg000911=A hit is an affirmative response from a RWL. The RWL module will check all of the RWLs listed under Service Provider, and flag the email with a RWL pass flag if equal to or more than this number of RWLs return a positive whitelisted response. This number should be less than or equal to Maximum Replies above and greater than 0

# variable - RWLmaxtime
msg000920=Maximum Time
msg000921=This sets the maximum time to spend on each message performing RWL checks

# variable - noRWL
msg000930=Don't Validate RWL for these IPs*
msg000931=Enter IP addresses that you don't want to be RWL validated, separated by pipes (|). For example: 145.145.145.145|146.145.

# variable - AddRWLHeader
msg000940=Add X-Assp-Received-RWL Header
msg000941=Add X-Assp-Received-RWL header to header of all mails processed by RWL.

# variable - RWLCacheInterval
msg000950=RWL Cache Refresh Interval
msg000951=IP's in cache will be removed after this interval in days. 0 will disable the cache. <input type="button" value=" Show RWL Cache" onclick="javascript:popFileEditor('pb/pbdb.rwl.db',5);" />

# variable - WhitelistPrivacyLevel
msg009740=PrivacyLevel of the Whitelist
msg009741=Sets the privacy level of the whitelistdb . If a (local) user adds an email address to the whitelist:<br /><br />
  (0) global &amp; private - this email address is automatically whitelisted for all other local users<br />
  (1) domain &amp; private - this email address is automatically whitelisted for all other local users in the same local domain<br />
  (2) private only - this email address is only whitelisted for this single local user<br /><br />
  (0-1) unless another user has removed this email address from his whitelist. Default is zero, which is the legacy setting.<br />
  NOTICE: independent from this setting, the whitelistdb is filled with all three entries (global,domain,private), to make it possible to change this value.

# variable - MaxWhitelistDays
msg000960=Max Whitelist/Personal Black Days
msg000961=This is the number of days an address will be kept on the whitelist and personal blacklist without any email to/from this address. Set it to 0 to keep the entries infinity.

# variable - WhitelistOnly
msg000970=Reject All But Whitelisted Mail
msg000971=Check this if you don't want Bayesian filtering and want to reject all mail from anyone not whitelisted. To do this related to local user addresses, use InternalAndWhiteAddresses and switch this option off.

# variable - NoAutoWhite
msg000980=Only Email-Interface Addition to Whitelist.
msg000981=Check this box to  allow additions to the whitelist by email interface only.

# variable - NoAutoWhiteAdresses
msg009970=No AutoWhite Addresses*
msg009971=Mail solely to or from any of these addresses are excluded from automatic whitelist additions. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).

# variable - NotGreedyWhitelist
msg000990=Only the envelope-sender is added/compared to the whitelist
msg000991=Normal operation includes addresses in the FROM, SENDER, REPLY-TO, ERRORS-TO, or LIST-* header fields.<br />
  This allows nearly all list email to be whitelisted.<br />
  If set to 'envelope-sender only', only this address is compared/added.<br />
  If set to 'check all addresses - one match for white - add all', one match in any of this fields is enough to get white and all addresses will be added to whitelist.<br />
  If set to 'check all addresses - all matches for white - update all', all defined addresses in all defined fields must be already whitelisted for a message to get a whitelisted state and all addresses will updated in whitelist. Notice: this setting will overwrite a match in whiteListedDomains , if a not whitelisted sender is found.<br />
  If any address is found in redlist, no whitelist addition will be done and the message gets not white. <br />
  If the penalty score of a message has reached PenaltyMessageLow, no whitelist addition will be done.<br />
  This setting is ignored, for mails to add/remove whitelist entries via email-interface.

# variable - GreedyWhitelistAdditions
msg008780=How add Greedy Senders to Whitelist
msg008781=Defines what sender addresses are added to the whitelist if a message is considered to be from a whitelisted sender. NotGreedyWhitelist is considered in determining if a message is from a whitelisted sender.

# variable - WhitelistLocalOnly
msg001000=Only local or authenticated users contribute to the whitelist.
msg001001=Normal operation allows all local, authenticated, or whitelisted users to contribute to the whitelist.<br />
  Check this box to not allow whitelisted users to add to the whitelist.

# variable - WhitelistLocalFromOnly
msg001010=Only users with a local domain in mailfrom contribute to the whitelist.
msg001011=Check this box to prevent sender with non-local domains from contributing to the whitelist. (for example: redirected messages).

# variable - WhitelistAuth
msg001020=Whitelist mails from authenticated users.
msg001021=Mails from authenticated users will be processed as whitelisted.

# variable - UpdateWhitelist
msg001030=Save Whitelist <sup>s</sup>
msg001031=Save a copy of the white list every this many seconds. Empty or Zero will prevent any saving and the cleanup of old records.<br />
  <hr /><div class="menuLevel1">Notes On Whitelist</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/whitelist.txt',3);" />

# heading - Relaying <a href="http://sourceforge.net/p/assp/wiki/Relaying" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="relaying not allowed" /></a>

# variable - acceptAllMail
msg001040=Accept All Mail*
msg001041=Relaying is allowed for these IPs. They contribute also to the whitelist. Before setting this option, please read the complete section - it is recommended to configure relayPort to send mails from your LAN to the Internet. This can take either a directly entered list of IP's separated by pipes or a file 'file:files/acceptall.txt'.<br />For example: 145.145.145.145|146.145.

# variable - DoLocalSenderDomain
msg001050=Do Local Domain Check for Local Sender
msg001051=If activated, each local sender address must have a valid Local Domain. acceptAllMail and redlisted mails breaks this rule.

# variable - DoLocalSenderAddress
msg001060=Do Local Address Check for Local Sender
msg001061=If activated, each local sender address must have a valid Local Address. acceptAllMail and redlisted mails breaks this rule.

# variable - nolocalDomains
msg001070=Skip Local Domain Check
msg001071=Do not check relaying based on localDomains. Let the mailserver do it. <b>NOT RECOMMENDED</b>.

# variable - ldLDAP
msg001080=Do LDAP lookup for local domains
msg001081=Check local domains against an LDAP database.<br />Note: Checking this requires filling in LDAP DomainFilter ( ldLDAPFilter ) in the LDAP section.<br />This requires an installed <a href="http://search.cpan.org/~gbarr/perl-ldap-0.31/lib/Net/LDAP.pod" rel="external">NET::LDAP</a> module in Perl.

# variable - ispip
msg001090=ISP/Secondary MX Servers*
msg001091=Enter any addresses that are your ISP or backup MX servers, separated by pipes (|). <br />These addresses will (necessarily) bypass Griplist, IP Limiting, Delaying, Penalty Box, SPF, DNSBL &amp; SRS checks unless the IP can be determined by (ispHostnames) ISP/Secondary Hostnames. For example: 127.0.0.1|172.16..

# variable - contentOnlyRe
msg001100=Regular Expression to Identify Forwarded Messages*
msg001101=Put anything here to identify messages which should bypass PB, Sender Validation, Griplist, IP Limiting, Delaying, SPF, DNSBL &amp; SRS checks. For example:  email addresses of people who are forwarding from other accounts to their mailbox on your server.

# variable - ispHostnames
msg001110=Regular Expression to Identify ISP/Secondary Hostnames*
msg001111=Hostnames (regular expression) to lookup the IP that connected to the ISP/Secondary server.<br />If found, this address is used to perform IP-based checks on forwarded messages. <br />For example: mx1\.yourisp\.com or mx1\.yourisp\.net|mx2\.yoursecondary\.com . <i>This hostnames are found in the 'Received:' header, like  'Received: from ...123.123.123.123... by <b>mx1.yourisp.com</b>'</i>. Leave this blank to disable the feature. 

# variable - send250OKISP
msg001120=Send 250 OK To ISP/Secondary MX Servers
msg001121=Set this checkbox if you want SPAMBOX to reply to IP's in ISPIP with '250 OK' instead of SMTP error code '554 5.7.1'.

# variable - ispgripvalue
msg001130=ISP/Secondary MX Grip Value
msg001131=It is recommended  to set it to 0.5 (Completely GReyIP) for ISP and Secondary MX servers. If left blank the Griplist X value is used (percentage of spam messages in relation to total). <br />Note: value has to be greater than 0 and less than 1, where 0 = never spam and 1 = always spam

# variable - BounceSenders
msg001140=Bounce Senders*
msg001141=Envelope sender addresses treated as bounce origins. Null sender (&lt;&gt;) is always included.<br />
 Accepts specific addresses (postmaster@domain.com), usernames (mailer-daemon), or entire domains (@bounces.domain.com)<br />Separate entries with pipes: |. For example: postmaster|mailer-daemon

# variable - PopB4SMTPFile
msg001150=Pop Before SMTP DB File
msg001151=Enter the DB database filename of your POP before SMTP implementation with records stored for dotted-quad IP addresses.<br />For example: /etc/mail/popip.db

# variable - PopB4SMTPMerak
msg001160=Pop Before SMTP Merak Style
msg001161=If set Merak 7.5.2 is supported.

# variable - relayHost
msg001170=Relay Host
msg001171=Your isp's mail relayhost (smarthost). For example: mail.isp.com:25<br />If you run Exchange/Notes and you want assp to update the nonspam database and the whitelist, then enter your isp's smtp relay host here. Blank means no relayhost. Only required if clients don't deliver through SMTP. Separate multiple entries by "|".<br />
  If you need to connect to the relay host using native SSL, write 'SSL:' in front of the IP/host definition. In this case the Perl module <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a> must be installed and enabled ( useIOSocketSSL ).<br />
  Examples: your_ISP_Server:25, 149.1.1.1:25, SSL:149.1.1.2:465|any_other_host:25 !

# variable - relayAuthUser
msg009040=User to Authenticate to Relay Host
msg009041=The username used for SMTP AUTH authentication to the relayhost  - for example, if your ISP need authentication on the SMTP port! Supported authentication methods are PLAIN, LOGIN, CRAM-MD5 and DIGEST-MD5 . If the relayhost offers multiple methods, the one with highest security option will be used. The Perl module <a href="http://search.cpan.org/search?query=Authen::SASL" rel="external">Authen::SASL</a> must be installed to use this feature! The usage of this feature will be skipped, if the sending MTA uses the AUTH command. Leave this blank, if you do not want use this feature.

# variable - relayAuthPass
msg009050=Password to Authenticate to Relay Host
msg009051=The password used for SMTP AUTH authentication to the relayhost ! Leave this blank, if you do not want use this feature.

# variable - relayPort
msg001180=Relay Port
msg001181=Tell your mail server to connect to this IP/port as its smarthost / relayhost. For example: 225<br /> Note that you'll want to keep the relayPort protected from external access by your firewall.<br />You can supply an interface:port to limit connections. Separate multiple entries by "|".<p><small><i>Examples:</i> 225, 127.0.0.1:225, 192.168.1.1:225|192.168.2.1:225 </small></p>!

# variable - allowRelayCon
msg008830=Allow Relay Connection from these IP's*
msg008831=Enter any addresses that are allowed to use the relayPort , separated by pipes (|). If empty, any ip address is allowed to connect to the relayPort. If this option is defined, keep in mind : Addresses defined in acceptAllMail are <b>NOT</b> automatically included and have to be also defined here, if them should allow to use the relayPort. For example: 127.0.0.1|172.16..<br />
 If you use MS Office 365, you should define the <a href="http://technet.microsoft.com/en-us/library/dn163583(v=exchg.150).aspx" target="_blank">EOP IP addresses</a> here and you should configure your firewall to redirect connection from the hosted Exchange server to the relayPort .

# variable - RelayOnlyLocalSender
msg010380=Allow Relaying Only for Local Sender
msg010381=If set, the envelope sender (MAIL FROM:) is immediately checked after the DATA command is received (to be valid). If the sender address could not be validated, the connection is dropped.<br />
  This setting is ignored for BounceSenders, which can relay at any time . <br />
  The connection will be dropped regardless any other assp setting ( except EmailSenderOK ).<br />
  It is recommended to switch this to ON, if you use for example MS Office 365. At least, it is wise, to switch this ( or RelayOnlyLocalDomains ) to ON in every case

# variable - RelayOnlyLocalDomains
msg010390=Allow Relaying Only for Local Domains
msg010391=If set, the envelope sender domain (MAIL FROM:) is immediately checked after the DATA command is received (to be a local domain). If the sender domain could not be validated, the connection is dropped.<br />
  This setting is ignored for BounceSenders, which can relay at any time . <br />
  The connection will be dropped regardless any other assp setting ( except EmailSenderOK ).<br />
  It is recommended to switch this to ON, if you use for example MS Office 365. At least, it is wise, to switch this ( or RelayOnlyLocalSender ) to ON in every case

# variable - NoRelaying
msg001190=No Relaying Error <a href="http://sourceforge.net/p/assp/wiki/Relaying" target="SPAMBOXHELP"><img src="get?file=images/info.png" alt="wiki" /></a>
msg001191=SMTP error message to deny relaying.

# variable - defaultLocalHost
msg001200=Default Local Host
msg001201=If you want to be able to send mail to local users without a domain name then put the default local domain here.<br /> Blank disables this feature. For example: mydomain.com .

# variable - LocalFrequencyInt
msg008720=Local Frequency Interval
msg008721=The time interval in seconds in which the number of envelope recipients per sending address has not to exceed a specific number ( LocalFrequencyNumRcpt ).<br />
  Use this in combination with LocalFrequencyNumRcpt to limit the number of recipients in a given interval, to prevent local abuse - for example from hijacked local accounts. A value of 0 (default) will disable this feature and clean the cache within five minutes. It is recommended to enable DoLocalSenderAddress and/or DoLocalSenderDomain, if you want to use this feature. To give users the chance to inform an admin about such blocked mails, local mails to EmailAdmins are never blocked because of that feature.<br />
  <input type="button" value="edit local Frequency Cache" onclick="javascript:popFileEditor('DB-localFrequencyCache','1h');" />

# variable - LocalFrequencyNumRcpt
msg008730=Local Frequency Recipient Number
msg008731=The number of envelope recipients per sending address that has not to exceed in a specific time interval ( LocalFrequencyInt ).<br />
  Use this in combination with LocalFrequencyInt to limit the number of recipients in a given interval, to prevent local abuse - for example from hijacked local accounts. A value of 0 (default) will disable this feature and clean the cache within five minutes. It is recommended to enable DoLocalSenderAddress and/or DoLocalSenderDomain, if you want to use this feature. To give users the chance to inform an admin about such blocked mails, local mails to EmailAdmins are never blocked because of that feature. <br />
  <input type="button" value="edit local Frequency Cache" onclick="javascript:popFileEditor('DB-localFrequencyCache','1h');" />

# variable - LocalFrequencyOnly
msg008740=Check local Frequency for this Users only*
msg008741=A list of local addresses, for which the 'local frequency check' should be done. Leave this field blank (default), to do the check for every address.<br />
  Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).<br />
  For example: fribo*@thisdomain.com|jhanna|@sillyguys.org 

# variable - NoLocalFrequency
msg008750=Check local Frequency NOT for this Users*
msg008751=A list of local addresses, for which the 'local frequency check' should not be done. Noprocessing messages will skip this check.<br />
  Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).<br />
  For example: fribo*@thisdomain.com|jhanna|@sillyguys.org 

# variable - NoLocalFrequencyIP
msg010110=Check local Frequency NOT for this IP's*
msg010111=A list of local IP-addresses, for which the 'local frequency check' should not be done.<br />
  For example: 145.145.145.145|145.146. 

# variable - genDKIM
msg001210=Generate and Add DKIM <a href="http://en.wikipedia.org/wiki/DomainKeys_Identified_Mail" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="Network Flow" /></a> signatures to relayed messages
msg001211=If selected, SPAMBOX will add DKIM signatures to relayed messages if it finds a valid DKIM configuration in DKIMgenConfig for the sending domain. This will also be done for noprocessing mails. This requires an installed <a href="http://search.cpan.org/search?query=Mail::DKIM" rel="external">Mail::DKIM</a> module in PERL.

# variable - DKIMgenConfig
msg001220=The File with the DKIM configurations*
msg001221=The file that contains the DKIM configuration. A description how to configure DKIM could be found in the default file dkim/dkimconfig.txt.<br />
<hr /><div class="menuLevel1">Notes On Relaying</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/relaying.txt',3);" />

# heading - Recipients/Local Domains

# variable - removeForeignBCC
msg009780=remove Foreign BCC
msg009781=Remove foreign BCC: header lines from the mail header. The remove is done before the DoHeaderAddrCheck is done!

# variable - DoHeaderAddrCheck
msg010010=Check TO,CC and BCC headers
msg010011=If enabled TO: , CC: and BCC: header lines are checked the following way:<br /><br />
 1. a possible recipient replacement is done<br />
 2. local email address validation is done -  if OK, the next address or headerline is processed<br />
 3. spamtrapaddresses will be detected - scored with stValencePB - <b>mail is blocked</b> (noPenaltyMakeTraps is honored)<br />
 4. a local but not valid TO/CC/BCC: address will be detected - scored with irValencePB <br />
 5. a RelayAttempt will be detected if a BCC address is not local - scored with rlValencePB - <b>mail is blocked</b><br />
 The check 3 and 4 honors whitelisting , noprocessing and noBlockingIPs<br />
 Enable this check only, if assp is configured to validate local domains and email addresses!<br />
 NOTICE: that removeForeignBCC take place before this check is done - step 5 will be never reached if removeForeignBCC is enabled!

# variable - sendAllPostmaster
msg001250=Catchall Address for Messages to Postmaster
msg001251=SPAMBOX will deliver messages addressed to all postmasters of your local domains to this address. For example: postmaster@mydomain.com

# variable - sendAllPostmasterNP
msg001260=Skip Spam Checks for Postmaster Catchall
msg001261=

# variable - sendAllAbuse
msg001270=Catchall Address for Messages to Abuse
msg001271=SPAMBOX will deliver messages to all abuse addresses of your local domains to this address. For example: abuse@mydomain.com

# variable - sendAllAbuseNP
msg001280=Skip Spam Checks for Abuse Catchall
msg001281=

# variable - DoRFC822
msg001290=Validate addresses to conform with RFC 822
msg001291=If activated, the envelope sender and/or each envelope recipient is checked to conform with the email format defined in RFC 822. For an invalid sender address 'nofromValencePB' is used for scoring - for invalid recipient addresses, each is scored with irValencePB .<br />
  For the sender address in addition a top level domain existence and DNS name server registration check is done.<br />
  The default setting is 'sender' - recommended settings are 'sender' or 'both'!

# variable - LocalAddresses_Flat
msg001300=Lookup valid Local Addresses from here*
msg001301=These email addresses are the list of your local addresses. You can list specific addresses (user@mydomain.com), addresses at any local domain (user), or entire domains (@mydomain.com).  Wildcards are supported (fribo*@domain.com). (|).<br />For example: fribo@thisdomain.com|jhanna|@sillyguys.org or place them in a plain ASCII file one address per line:file:files/localuser.txt. You can use entries like @mydomain.com=>vrfyhost:port to VRFY users on your MTA, for more information read localDomains. You can use an entry like ALL=>vrfyhost:port to define a VRFY host for all domain entries ( better use Groups ).

# variable - LocalAddresses_Flat_Domains
msg001310=Use Addresses without '@' as Domains
msg001311=Will handle entries without '@' as full domains

# variable - RejectTheseLocalAddresses
msg001320=Reject These Local Addresses*
msg001321=If ANY recipient is on reject list, message will not be delivered. Used for disabled legitimate accounts, where a user may have left the company. This stops wildcard mailboxes from getting these messages.

# variable - localDomains
msg001330=Local Domains*
msg001331=Check local domains against these addresses. Add a fake domain like 'assp-nospam.org' for the email interface if you run MS Exchange. When mailing to eg. 'spam@assp-nospam.org' MS Exchange forwards it outbound to SPAMBOX who handles the different options. As in every field marked by '*' separate addresses with | or use file 'file:files/localdomains.txt'. Wildcards are supported.<br /> For example: *mydomain.com|*.mydomain.com|here.org <br />
 Use the syntax: *mydomain.com=>smtp.mydomain.com|other.com=>mx.other.com:port|other2.com=>mx.other.com:port,mx2.other.com:port to verify the recipient addresses with the SMTP-VRFY (if VRFY is not supported 'MAIL FROM:' and 'RCPT TO:' will be used) command on other SMTP servers. The entry behind => must be the hostname:port or ip-address:port of the MTA which is used to verify 'RCPT TO' addresses with a VRFY command! If :port is not defined, port :25 will be used. You can use an entry like ALL=>vrfyhost:port to define a VRFY host for all local domain entries that don't have a MTA defined ( better use Groups ). Separate multiple VRFY hosts for failover by comma ",". You have to enable the SMTP 'VRFY' command on your MTA - the 'EXPN' command should be enabled! This requires an installed <a href="http://search.cpan.org/search?query=Net::SMTP" rel="external">Net::SMTP</a> module in PERL. <br />
 If you have configured LDAP and enabled DoLDAP and SPAMBOX finds a VRFY entry for a domain, LDAP search will be done first and if this fails, the VRFY will be used. So VRFY could be used for LDAP backup/fallback/failover!<br />
 It is recommended to configure 'ldaplistdb' in the 'File Paths and Database' section when using this verify extension - so SPAMBOX will store all verified recipients addresses there to minimize the queries on MTA's. There is no need to configure LDAP, but both VRFY and LDAP are using ldaplistdb. Please go to the 'LDAP setup' section to configure MaxLDAPlistDays and LDAPcrossCheckInterval or start a crosscheck now with forceLDAPcrossCheck. This three parameters belong also to VRFY.

# variable - DoVRFY
msg008850=Verify Recipients with SMTP-VRFY
msg008851=If activated and the format 'Domain=>MTA' is encountered in
 localDomains recipient addresses will be verified with SMTP-VRFY (if VRFY is not supported 'MAIL FROM:' and 'RCPT TO:' will be used).
 If you know that VRFY is not supported with a MTA, you may put the MTA into VRFYforceRCPTTO. Don't forget to configure LDAPFail (belongs also to VRFY) to your needs!

# variable - VRFYQueryTimeOut
msg001340=SMTP VRFY-Query Timeout
msg001341=The number of seconds SPAMBOX will wait for an answer of the MTA that is queried with the VRFY command to verify a recipient address.

# variable - VRFYforceRCPTTO
msg001350=Force the usage of RCPT TO*
msg001351=Define MTA's here for which you want SPAMBOX to force the usage of MAIL FROM:,RCPT TO: instead of the VRFY command. The definition of each MTA has to be the same as defined in LocalAddresses_Flat and/or localDomains (after the '=>') for example: smtp.mydomain.com|mx.other.com:port|10.1.1.1|10.1.1.2:125 .

# variable - DisableVRFY
msg008600=Disable VRFY and EXPN for External Clients
msg008601=If you have enabled VRFY and/or EXPN on your MTA to make assp able to verify addresses and you do not want external clients to use VRFY and EXPN - select this option.

# variable - DoLDAP
msg001360=Do LDAP lookup for valid local addresses
msg001361=Check local addresses against an LDAP database before accepting the message.<br />Note: Checking this requires filling in the other LDAP parameters below.<br />This requires an installed <a href="http://search.cpan.org/~gbarr/perl-ldap-0.31/lib/Net/LDAP.pod" rel="external">Net::LDAP</a> module in PERL.

# variable - LocalAddressesNP
msg001370=Do Not  Validate Local Addresses if in NoProcessing List
msg001371=If a recipient is found in NoProcessing, the user validation is skipped. 

# variable - CatchAll
msg001390=Catchall per Domain*
msg001391=SPAMBOX will send to this addresses/domain if no valid user is found in LocalAddresses_Flat/LDAP. <br />For example: catchall@domain1.com|catchall@domain2.com

# variable - CatchAllAll
msg001400=Catchall for All Domains
msg001401=SPAMBOX will send to this address if no valid user is found  in LocalAddresses_Flat/LDAP and no match is found in Catchall per Domain. <br />For example: catchall@domain.com

# variable - CatchallallISP2NULL
msg001410=Move ISP Connection with wrong Recipient Address to NULL
msg001411=If set, SPAMBOX will move all ISP connections with wrong recipient addresses to a NULL-connection. The ISP will receive "250 OK" until the mail has passed, but the mail will not be sent to your MTA. This is done after CatchAll but before CatchAllAll is checked.

# variable - NullAddresses
msg001420=NULL Connection Addresses*
msg001421=SPAMBOX will dump a message silently when encountering such an address in "MAIL FROM:" or "RCPT TO:". Accepts specific addresses (null@example.com), user parts (nobody) or entire domains (@example.com).

# variable - InternalAddresses
msg001430=Accept Mail from Local Domains only*
msg001431=These local addresses accept mail only from local domains. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). Wildcards are supported (fribo*@domain.com).

# variable - InternalAndWhiteAddresses
msg009890=Accept Mail from Local Domains and Whitelisted Senders only*
msg009891=These local addresses accept mail only from local domains and whitelisted external senders. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). Wildcards are supported (fribo*@domain.com).

# variable - SepChar
msg001440=Separation Character for Subaddressing
msg001441=RFC 3598 describes subaddressing with a Separation Character. A star ('*') is not allowed as Separation Character. Everything between Separation Character and @ is ignored (including Separation Character). For Example = '+' will allow user+subaddress@domain.com.

# variable - EnableBangPath
msg001450=Support Bang Path
msg001451=If set, SPAMBOX will support addresses like domainx!user and will convert them to user@domainx .

# variable - MaxVRFYErrors
msg001460=Maximum recipient verification Errors
msg001461=The maximum number of failed 'RCPT TO' or 'VRFY' commands encountered before the connection is dropped. You can leave this field at 0, if you are using 'DoLDAP', 'LocalAddresses_Flat'! If configured, SPAMBOX will drop the connection, if the count of '550 unknown user' errors, received from your 'smtpDestination'(MTA), reached this value!

# variable - DoMaxDupRcpt
msg008950=Block Max Duplicate Recipients
msg008951=Block remote servers that uses the same recipient address more times, than the number defined in MaxDupRcpt in the RCPT TO: command. Scoring is done with mdrValencePB . This check is skipped for outgoing, noprocessing, whitelisted and spamlovers mails. If a message has to be delayed, this check will score before the delay if set to block or score - and score and/or block on the next server request.

# variable - MaxDupRcpt
msg008960=Maximum Allowed Duplicate Recipient Addresses
msg008961=The maximum number of duplicate recipient addresses that are allowed in the sequence of the RCPT TO: commands!<br />
  The number per mail is calculated by 'number of RCPT TO: commands  -  number of unique recipient addresses'.<br />
  For example: if one address is used three times or two addresses are used each two times, will result in the same count - 2. Or if both is the case in one mail, the count will be 4.

# variable - ReplaceRecpt
msg001470=Enable recipient replacement*
msg001471=recommented if used: file:files/rcptreplrules.txt - default empty ! This enables recipient replacement. If you do not use file:, separate the rules with |. The replacement will be done before any SPAMBOX check. Use this option carefully - for example: if you have enabled DKIM check, the DKIM check will fail, if the recipient of the mail was modified. For a more detailed description of the rules and options, read the file: files/rcptreplrules.txt!

# variable - NoValidRecipient
msg001480=No-Valid-Local-User Reply
msg001481=SMTP reply for invalid Users. Default: '550 5.1.1 User unknown: EMAILADDRESS' <br /> The literal EMAILADDRESS (case sensitive) is replaced by the fully qualified SMTP recipient (e.g., thisuser@yourcompany.com).<br /><hr /><div class="menuLevel1">Notes On Local Addresses</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/localaddresses.txt',3);" />

# heading - Validate Helo

# variable - useHeloBlacklist
msg001490=Use the Helo Blacklist
msg001491=Use the list of blacklisted-helo hosts built by rebuildspamdb.

# variable - useHeloGoodlist
msg009920=Use the Helo Goodlist
msg009921=Use the list of known good helo hosts built by rebuildspamdb.<br />
  bonus - the message/IP get a bonus of the weighted negative value of hlValencePB <br />
  whitelisted - the message is processed as whitelisted<br /><br />
  The good helos and weights are stored together with the helo blacklist.

# variable - DoIPinHelo
msg001500=Do Score Suspicious Helos
msg001501=Score servers with IP number in Helo and check for mismatch with sending IP.

# variable - ForceFakedLocalHelo
msg001510=Enforce Check of Forged Helos Before Delaying
msg001511=If set, SPAMBOX will  check Forged Helos before DELAYING. Collecting, Testmode, CopySpam, Spam-Lover and private/domain whitelist ( WhitelistPrivacyLevel ) is ignored.

# variable - DoFakedLocalHelo
msg001520=Block Forged Helos
msg001521=Block remote servers that claim to come from our Local Domains/Local IP's/Local Host.

# variable - DoFakedUseLocalDomain
msg001530=Use Local Domain List for Blocking Forged Helos
msg001531=If set, DoFakedLocalHelo will  use <b>localDomains</b>.

# variable - DoFakedWL
msg001540=Do Not Block Whitelisted
msg001541=Disable "Block Forged Helo's" for whitelisted addresses (not recommended).

# variable - DoFakedNP
msg001550=Do Not Block Noprocessing
msg001551=Disable "Block Forged Helo's" for addresses identified as noprocessing (not recommended).

# variable - myServerRe
msg001560=Local Domains,IP's and Hostnames*
msg001561=Local Domains, IP's and Hostnames are often use to fake (forge) the Helo. Include all IP addresses and hostnames for your server here, localhost is already included. Include Local Domains of your choice here, if you deactivated the automatic use of the local domain list.  For example: 11.22.33.44|mx.YourDomains.com|here.org

# variable - noHelo
msg001570=Don't Validate HELO for these IP's*
msg001571=Enter IP addresses that will be excluded from all HELO checks.<br />
   For example: 127.0.0.1|192.168.

# variable - heloBlacklistIgnore
msg001580=Don't process these HELO's*
msg001581=HELO / EHLO greetings on this list will be excluded from all HELO checks. For example: host123.isp.com|host456.*.com

# variable - ForceValidateHelo
msg001590=Enforce Early Helo Checks
msg001591=If set, SPAMBOX will  Validate/Invalidate the format of HELO before DELAYING. Collecting, Testmode, CopySpam, Spam-Lover and private whitelist ( WhitelistPrivacyLevel ) is ignored.

# variable - DoValidFormatHelo
msg001600=Validate Format of HELO
msg001601=If activated, the HELO is checked against the expression below. If the Regular Expression matches, the HELO is validated as being ok. 

# variable - validFormatHeloRe
msg001610=Regular Expression to Validate Format of HELO*
msg001611=Validate Format HELO will check incoming HELOs according to rfc1123. <br />For example: ^(?:\w[\w\.\-]*\.\w{2,6})$ or ^(?:(?:[a-z\d][a-z\d\-]*)?[a-z\d]\.)+[a-z]{2,6}$

# variable - DoInvalidFormatHelo
msg001620=Invalidate Format of HELO
msg001621=If activated, the HELO is checked against the expression below. If the Regular Expression matches, the HELO is invalidated as being not ok.

# variable - invalidFormatHeloRe
msg001630=Regular Expression to Invalidate Format of HELO**
msg001631=Invalidate Format HELO will check incoming HELOs for this. <br />
 For example:  ^\d+\.\d+\.\d+\.\d+$|^[^\.]+\.?$,

# variable - DoHeloWL
msg001640=Do Valid/Invalid/Black Helo for Whitelisted
msg001641=Do valid/invalid Helo for whitelisted addresses.

# variable - DoHeloNP
msg001650=Do Valid/Invalid/Black Helo for Noprocessing
msg001651=Do valid/invalid Helo for noprocessing addresses.<br /><hr />
  <div class="menuLevel1">Notes On Validate Helo</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/validatehelo.txt',3);" />

# heading - Validate Sender

# variable - DoBlackDomain
msg001660=Do Blacklisted Addresses and Domains
msg001661=

# variable - DoBlackDomainWL
msg001670=Do Blacklisting Addresses and Domains for White
msg001671=Do blacklisting addresses &amp; domains in messages which are marked whitelisted by whiteRe, whiteListedDomains, whiteListedIPs, whitelistdb, DoOrgWhiting or ValidateRWL .

# variable - DoBlackDomainNP
msg001680=Do Blacklisting Addresses and Domains for NoProcessing
msg001681=Do blacklisting addresses &amp; domains in messages which are marked noprocessing by npRe, noProcessingDomains, noProcessingIPs or noProcessing.

# variable - blackListedDomains
msg001690=Blacklisted Addresses and Domains*
msg001691=Addresses  &amp; Domains from which you always want to reject mail, they only send you spam. Note this matches the end of the address, so if you don't want to match subdomains then include the @. Note that buy.com would also match spambuy.com but .buy.com won't match buy.com. abc@def.com will match abc@def.com but won't match bbc@def.com. Wildcards are supported. For example: cc|info|biz|seller@bayer.com|sell*@basf.com<br /><br />
  It is possible to make email addresses blacklisted only for a set of local domains and/or local users. Use wildcards (* and ?) to define domains.<br />
  Use the following syntax to do this:<br />
  *@anydomain=>*@any_local_domain - for domain to domain<br />
  *@*.anydomain=>*@any_local_domain - for any sub-domain to domain<br />
  user@anydomain=>*@*.any_local_domain - for user to any sub-domain<br /><br />
  It is possible to define more than one entry at the left and the right side of the definition (=&gt;), like:<br />
  *@anydomain|*@other_domain=>*@any_local_domain|*@other_local_domain - always separate multiple entries by pipes<br />
  It is also possible to use a GroupDefinition in any or both sides, like:<br />
  [sendergroup]=>[recipientgroup]<br />
  [sendergroup1]|[sendergroup2]|*@domain=>[recipientgroup1]|[recipientgroup2]|user@local_domain<br /><br />
  NOTICE - that the local email addresses and domains are not checked to be local once

# variable - DoMsgID
msg001700=Check Message IDs
msg001701=Score messages with missing/suspicious/invalid Message-ID. Scoring is done by midmValencePB / midsValencePB / midiValencePB .

# variable - noMsgID
msg001710=Don't Validate Message-IDs for these IPs*
msg001711=Enter IP addresses that you don't want to be Message-ID validated, separated by pipes (|). For example: 127.0.0.1|192.168.

# variable - validMsgIDRe
msg001720=Regular Expression to Validate Format of Message-ID*
msg001721=Check Message IDs will check incoming messages for valid Message-IDs. <br />For example: ^.+\@.+\..+$  

# variable - invalidMsgIDRe
msg001730=Regular Expression to Invalidate Format of Message-ID**
msg001731=Check Message IDs will check incoming messages for invalid Message-IDs.

# variable - DoNoValidLocalSender
msg001740=Validate Remote Sender with Local Domain Address
msg001741=If activated, each remote sender  with a local domain is checked against the <i>Local Addresses File</i> and/or LDAP. 

# variable - ForceNoValidLocalSender
msg001750=Early "Remote Sender with Local Domain Address" Check
msg001751=If set, SPAMBOX will check Remote Sender with Local Domain Address before Delaying a message.<br /> Collecting, Testmode, CopySpam, and Spam-Lover settings are ignored.

# variable - DoNoSpoofing
msg001760=Block Local Address from External Sender 
msg001761=If activated, each external sender address built with a domain in localDomains is regarded a spoofed address. An external sender is a sender from an IP not in acceptAllMail and not authenticated. Scoring is done with slValencePB.

# variable - onlySpoofingCheckIP
msg009900=Do Spoofing Check ONLY for these IP's*
msg009901=Enter IP's that you want to be checked for spoofing. If this is set, ONLY these IP's will be checked. For example:145.145.145.145|145.146.

# variable - onlySpoofingCheckDomain
msg009910=Do Spoofing Check ONLY for these Addresses/Domains*
msg009911=Accepts specific addresses (user@example.com), user parts (user) or entire domains (@example.com). Wildcards are supported (fribo*@example.com). If set, ONLY these addresses/domains will be checked for spoofing.

# variable - noSpoofingCheckIP
msg001770=Don't do Spoofing Check for these IP's*
msg001771=Enter IP's that you don't want to be checked for spoofing. For example:145.145.145.145|145.146.

# variable - noSpoofingCheckDomain
msg001780=Don't do Spoofing Check for these Addresses/Domains*
msg001781=Accepts specific addresses (user@example.com), user parts (user) or entire domains (@example.com). Wildcards are supported (fribo*@example.com).

# variable - DoNoSpoofing4From
msg009850=Do NoSpoofing for from:
msg009851=Do the NoSpoofing check also for header 'from:' addresses.

# variable - DoReversed
msg001800=Reversed Lookup
msg001801=If activated, each sender IP is checked for a PTR record. This requires an installed <a href="http://search.cpan.org/search?query=Net::DNS" rel="external">Net::DNS</a> module in PERL.

# variable - DoReversedWL
msg001810=Do Reversed Lookup for Whitelisted
msg001811=Do reversed lookup for whitelisted addresses.

# variable - DoReversedNP
msg001820=Do Reversed Lookup for Noprocessing
msg001821=Do reversed lookup for noprocessing addresses.

# variable - DoInvalidPTR
msg001830=Reversed Lookup FQDN
msg001831=If activated - and Reversed Lookup is activated -, the PTR-FQDN record is checked against the Regex. This requires an installed <a href="http://search.cpan.org/search?query=Net::DNS" rel="external">Net::DNS</a> module in PERL.

# variable - invalidPTRRe
msg001840=Regular Expression to Invalidate Format of PTR**
msg001841=Validate Format PTR will check PTR records for this. <br />
  For example:  ^\d+\.\d+\.\d+\.\d+$|^[^\.]+\.?$ or file:files/invalidptr.txt

# variable - validPTRRe
msg001850=Regular Expression to Validate Format of PTR*
msg001851=Validate Format PTR will check PTR records for this. <br />
  For example:  static or file:files/validptr.txt

# variable - PTRCacheInterval
msg001860=Reversed Lookup Cache Refresh Interval
msg001861=IP's in cache will be removed after this interval in days. 0 will disable the cache. <input type="button" value=" Show PTR Cache" onclick="javascript:popFileEditor('pb/pbdb.ptr.db',5);" />

# variable - DoDomainCheck
msg001870=Validate MX or A Record
msg001871=If activated, the sender address and each address found in the following header lines (ReturnReceipt:, Return-Receipt-To:, Disposition-Notification-To:, Return-Path:, Reply-To:, Sender:, Errors-To:, List-...:) is checked for a valid MX or A record. Scoring is done for non existing MX record and non existing A record - a messages fails (block), if both records are not found.

# variable - MXACacheInterval
msg001880=Validate Domain MX Cache Refresh Interval
msg001881=IP's in cache will be removed after this interval in days. 0 will disable the cache.<input type="button" value=" Show MX Cache" onclick="javascript:popFileEditor('pb/pbdb.mxa.db',5);" />

# variable - DoNoFrom
msg001890=Check For Existing From Header 
msg001891=Scoring is set with fromValencePB.

# variable - DoNoFromWL
msg001900=Do DoNoFrom for Whitelisted
msg001901=Check for existing From Header for whitelisted addresses.

# variable - DoNoFromNP
msg001910=Do DoNoFrom for NoProcessing
msg001911=Check for existing From Header for noprocessing addresses.

# variable - removeDispositionNotification
msg008970=Remove Disposition Notification Headers
msg008971=If set, all headers : "ReturnReceipt: , Return-Receipt-To: and Disposition-Notification-To:" will be removed from not whitelisted and not noprocessing incoming mails. Select this to prevent unwanted whitelisting of spammers that request a Disposition Notification. Another way to prevent autowhitelisting because of an autoresponder is to use redRe .

# variable - DoDKIM
msg001920=Validate DomainKeys Identified Mail <a href="http://en.wikipedia.org/wiki/DomainKeys" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="DKIM" /></a>
msg001921=If activated, DomainKeys Identified Mails are checked for the right signature and contents. All DKIM parameters belongs also to the old DomainKey specification. This requires an installed <a href="http://search.cpan.org/search?query=Mail::DKIM::Verifier" rel="external">Mail::DKIM::Verifier</a> module in PERL. In addition DKIM is used to process Domain-based Message Authentication, Reporting &amp; Conformance - described in <a href="http://www.dmarc.org/" rel="external">DMARC</a> (DMARC requires also ValidateSPF to be enabled).

# variable - DoStrictDKIM
msg001930=Validate DomainKeys Identified Mail strictly
msg001931=The DKIM test will fail, if the mail was modified by a mailhop. In this case the from address, the from domain, the to domain, the DKIM-signature by itself and the prefix of the digest-verification are valid, only the lower digest value differs! This may happen, if a mailhop has modified any other headerfield like X-...! If unchecked a mail will only pass, if the author policy and sender policy are accept or neutral!

# variable - noDKIMAddresses
msg001940=Do not any DKIM Check for this Addresses *
msg001941=Mail from any of these addresses will not be tagged and checked for DKIM. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).

# variable - noDKIMIP
msg001950=Exclude these IP's from any DKIM Check*
msg001951=Enter IP's that you want to exclude from DKIM check, separated by pipes (|).

# variable - DKIMCacheInterval
msg001960=Validate DKIM-Pre-Check-Cache Refresh Interval
msg001961=Domains's in cache will be removed after this interval in days. 0 will disable the cache.<br />
  If activated a DKIM-pre-check will be done. If SPAMBOX finds a DKIM-Signature in the mail header, it checks the DNS records of the sending domain for valid DKIM configurations and writes a record in to the DKIM-pre-check-cache, if it finds such configuration.<br />
  If SPAMBOX does not find a DKIM-Signature in the mail header, it also checks the DNS records of the sending domain for valid DKIM configurations. If it find such a configuration, the mail is considered spam, because it should have a DKIM-Signature.<br />
  The next mail from a domain that is found in this cache, must have a DKIM-Signature to pass the DKIM-pre-check. How ever, some DNS records are wrong or inaccurate and will cause SPAMBOX to block mails because of this - register such domains and/or IP's in noDKIMAddresses and/or noDKIMIP .<br />
  <input type="button" value=" Show DKIM Cache" onclick="javascript:popFileEditor('pb/pbdb.dkim.db',5);" />

# variable - AddDKIMHeader
msg001970=Add X-Assp-DKIM Header
msg001971=Add X-Assp-DKIM header.

# variable - SenderInvalidError
msg001980=Sender Validation Error
msg001981=SMTP error message to reject invalid senders. The literal REASON is replaced by (missing MX, missing PTR, invalid Helo, invalid user) depending on the check.<br /><hr />
  <div class="menuLevel1">Notes On Validate Sender</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/validatesender.txt',3);" />

# heading - IP Blocking 

# variable - DelayIP
msg009320=Simple IP Greylisting
msg009321=Enable simple delaying for IP's in black penaltybox with totalscore above this value. A value of zero or empty disables this feature.

# variable - DelayIPTime
msg009330=Simple IP Greylisting Embargo Time
msg009331=Enter the number of minutes for which delivery, related with IP address of the sending host, is refused with a temporary failure. Default is 5 minutes.

# variable - DoDenySMTP
msg001990=Do Deny Connections from these IP's
msg001991=If activated, the IP is checked against (denySMTPConnectionsFrom) Deny Connections from these IP's.<br />

# variable - denySMTPConnectionsFrom
msg002000=Deny Connections from these IP's*
msg002001=Manually maintained list of IP's which should be blocked. IP's in noPB, noDelay, acceptAllMail, ispip, whiteListedIPs, noProcessingIPs, whitebox (PBWhite) will pass. For example: file:files/blockip.txt.<br />
  To define IP's only for specific email addresses or domains (recipients) you must use the file:... option<br />
  An entry (line) may look as follows:<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br /><br />
  It is possible to define a predefined group on any or both sides of the '=>' separator, like:<br />
  [ipgroup]=>[usergroup]|user@mydomain<br /><br />
  NOTICE: the following combination of two entries, will lead in to a user/domain based matching - the global entry will be ignored!<br />
  145.146.0.0/16 # comment<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br />
  If multiple user/domain based entries are defined for the same IP, only the last one will be used!

# variable - noBlockingIPs
msg002010=Do not block Connections from these IP's*
msg002011=Manually maintained list of IP's which should not be blocked.  For example: 145.145.145.145|145.146.<br />
  To define IP's only for specific email addresses or domains (recipients) you must use the file:... option<br />
  An entry (line) may look as follows:<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br /><br />
  It is possible to define a predefined group on any or both sides of the '=>' separator, like:<br />
  [ipgroup]=>[usergroup]|user@mydomain<br /><br />
  NOTICE: the following combination of two entries, will lead in to a user/domain based matching - the global entry will be ignored!<br />
  145.146.0.0/16 # comment<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br />
  If multiple user/domain based entries are defined for the same IP, only the last one will be used!

# variable - DoDenySMTPstrict
msg002020=Do Deny Connections from these IP's Strictly
msg002021=If activated, the IP is checked against ('denySMTPConnectionsFromAlways') Deny Connections from these IP's Strictly.

# variable - denySMTPConnectionsFromAlways
msg002030=Deny Connections from these IP's Strictly*
msg002031=Manually maintained list of IP's which should <b>strictly</b> be blocked after address verification and before body and header is downloaded. Contrary to <i>denySMTPConnectionsFrom</i> IP's in noDelay, acceptAllMail, ispip, whiteListedIPs, noProcessingIPs, whitebox (PBWhite) will <b>not</b> pass if listed here.

# variable - DoDropList
msg002040=Do also Deny Connections from these IP's
msg002041=If activated, the IP is checked against the Droplist in addition to 'denySMTPConnectionsFromAlways' and/or 'denySMTPConnectionsFrom'. The droplist is downloaded if a new one is available and contains the Spamhaus DROP List. See "http://www.spamhaus.org/drop/drop.lasso".

# variable - denySMTPstrictEarly
msg002050=Do Strictly Deny Connections Early
msg002051=IP's in <b>denySMTPConnectionsFromAlways</b> will be denied right away.

# variable - enhancedOriginIPDetect
msg009590=Do an Enhanced Origin IP Address Detection in the Mail Header
msg009591=If selected, SPAMBOX will analyze the mail headers "RECEIVED:" lines for IP's on the mail routing way to detect spam bots, that uses open relay or hijacked mail servers for mail delivery.<br />
  Local and private IP's, and IP's listed in ispip, acceptAllMail, whiteListedIPs, noProcessingIPs, noDelay and noPB will be ignored.<br />
  The detected IP's will be additionally checked for IP-Blocking, DNSBL and IP-Frequency - the same way like the connected IP. These IP's are also additionally used for the maximum mail size calculation in MaxRealSizeAdr and MaxRealSizeExternalAdr.

# variable - DoFrequencyIP
msg002060=Check Frequency - Maximum Connections Per IP
msg002061=

# variable - maxSMTPipConnects
msg002070=Maximum Frequency of Connections Per IP 
msg002071=The maximum number of SMTP connections an IP Address can make during the <a href="./#maxSMTPipDuration">IP Address Frequency Duration</a>. If a server makes more than this many connections to SPAMBOX within the (maxSMTPipDuration) IP Address Frequency Duration it will be banned from future connections until the (maxSMTPipExpiration) IP Address Frequency Expiration is reached. This can be used to prevent server overloading and DoS attacks. 10 connections are typically enough. If left blank or 0, there is no limit imposed by SPAMBOX. IP's in noPB, noDelay, acceptAllMail, ispip, whiteListedIPs, noProcessingIPs, whitebox (PBWhite) are excluded from SMTP session limiting, whitelisted and noprocessing addresses are honored

# variable - maxSMTPipDuration
msg002080=Maximum Frequency of Connections Per IP Duration
msg002081=The window (in seconds) during which the (maxSMTPipConnects) IP Frequency (see above for more details) will be scrutinized for each IP. The default is 90 seconds.

# variable - maxSMTPipExpiration
msg002090=Expiration of Maximum Frequency
msg002091=The number of seconds that must pass before an IP address blocked by the (maxSMTPipConnects) IP Address Frequency setting is allowed to connect again. The default is 7200 (seconds) .

# variable - DoDomainIP
msg002100=Check Number of IP's Per Domain
msg002101=This check is skipped if the IP and domain have passed the SPF-check. If ValidateSPF is enabled and an IP/Domain reaches the maxSMTPdomainIP limit, the MaintThread starts a background SPF check to prevent blocking good mails in future.

# variable - maxSMTPdomainIP
msg002110=Limit Number of IP's  Per Domain
msg002111=The number of IP(subnet) switches a domain may have during the (maxSMTPdomainIPExpiration) Limit Different IP's Per Domain Expiration. If a domain switches more often than this it will be banned from future connections until the Expiration is reached. This can be used to prevent server overloading and DoS attacks. 10 connections are typically enough. If left blank or 0, there is no limit imposed by SPAMBOX. IP's in noPB, noDelay, acceptAllMail, ispip, whiteListedIPs, noProcessingIPs, whitebox (PBWhite) are excluded, whitelisted and noprocessing addresses are honored.

# variable - maxSMTPdomainIPExpiration
msg002120=Expiration of Limit Number
msg002121=The number of seconds that must pass before a domain blocked by the (maxSMTPdomainIP) Limit Subnet IP's Per Domain setting (see above for more details) is allowed to connect again. The default is 7200 (seconds).

# variable - maxSMTPdomainIPWL
msg002130=Do Not Limit Different IP's For These Domains*
msg002131=This prevents specific domains from limiting. For example: yahoo.com|hotmail.*.com|gmail.com<br /><hr />
  <div class="menuLevel1">Notes On IP Blocking</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/ipblocking.txt',3);" />

# heading - SenderBase / Whois <a href="http://www.senderbase.org/" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="SenderBase" /></a>

# variable - sbTestMode
msg002140=SenderBase Testmode
msg002141=

# variable - enableWhois
msg010270=Use Whois Queries instead or after or before of SenderBase Queries
msg010271=
  If enabled, WHOIS queries to IP-Whois-Servers<br /><br />
	"ARIN" => "whois.arin.net" - (which will possible redirect to)<br /><br />
	"RIPE" => "whois.ripe.net"<br />
	"APNIC" => "whois.apnic.net"<br />
	"KRNIC" => "whois.krnic.net"<br />
	"LACNIC" => "whois.lacnic.net"<br />
	"AFRINIC" => "whois.afrinic.net"<br /><br />
  will be done instead/after/before (WHOIS only/SenderBase first/WHOIS first) the Senderbase queries to CISCO's Ironport servers to get informations about an IP address. ARIN will be the first queried WHOIS server.<br />
  For the two '...first' options, the alternative second check is done, if the first check fails or assp has got no result for the county code.<br />
  This is useful, if your DNS-servers don't get answers for senderbase queries or senderbase queries are too slow.<br />
  In most cases WHOIS queries are much more faster than senderbase queries!<br />
  NOTICE: you must open the WHOIS-port (43) for TCP on your firewall for outgoing traffic from assp (if not already done)!

# variable - DoOrgWhiting
msg002150=Do Organization Whiting
msg002151=If activated, each sending IP address has its assigned organization looked up. Scoring is set with sworgValencePB.

# variable - whiteSenderBase
msg002160=Whitelisted Organizations, Domains and Hosts in SenderBase**
msg002161=If the organization, domain or hostname in the <a href="http://www.senderbase.org/" rel="external">SenderBase</a> IP description matches this Perl regular expression, the message will be considered non-spam. For example file:files/whiteorg.txt<br />
  NOTICE: If only the hostname matches an entry and DoOrgWhiting is set to "whiting", the domain+organization pair will not be added to the white organizations!<br />
  <input type="button" value=" edit White-Org-List" onclick="javascript:popFileEditor('DB-WhiteOrgList','1h');" />

# variable - DoOrgBlocking
msg002170=Do Organization Blocking
msg002171=If activated, each sending IP address has its assigned organization looked up. Scoring is set with sborgValencePB, Testmode is set with sbTestMode.

# variable - blackSenderBase
msg002180=Blacklisted Organizations, Domains and Hosts in SenderBase**
msg002181=If the organization, domain or hostname in the <a href="http://www.senderbase.org/" rel="external">SenderBase</a> IP description matches this Perl regular expression, the message will be considered spam.

# variable - DoCountryBlocking
msg002190=Do Country Blocking
msg002191=If activated, each sending IP address has its assigned country looked up.

# variable - CountryCodeBlockedRe
msg002200=Blocked Country Codes**
msg002201=Messages from IP's based in these countries will be blocked. For example: CN|KR|RU|JP|TR|TH|PL|LT|CL|RO|UA|GR|HU|SA|IN|IE|PT|MD|PE|CZ|TW|BR|CL. "all" will block all foreign countrycodes which are not in 'Suspicious Country Codes' or 'Ignore Country Codes'. See: <a href="http://www.iso.org/iso/country_codes/iso_3166_code_lists/english_country_names_and_code_elements.htm" rel="external">English country names and code elements</a>. 

# variable - DoSenderBase
msg002210=Do Country Code Scoring
msg002211=If activated, each sending IP address has its assigned country looked up.

# variable - NoCountryCodeRe
msg002220=Ignore Countries*
msg002221=Messages from IP's based in these countries will be ignored. For example: US|CA|DE

# variable - CountryCodeRe
msg002230=Suspicious Country Codes**
msg002231=Messages from IP's based in these countries will increase the MessageScore. For example: CN|KR|RU|JP|TR|TH|PL|LT|CL|RO|UA|GR|HU|SA|IN|IE|PT|MD|PE|CZ|TW|BR|CL|ID|PH

# variable - MyCountryCodeRe
msg002240=Home Country Codes**
msg002241=Put here your own country code(s) (for example: US). Messages from IP's based in these countries will decrease, messages from other countries will increase the MessageScore.

# variable - ScoreForeignCountries
msg002250=Score Foreign Countries
msg002251=Messages from foreign countries will increase the total messageScore using sbfccValencePB.

# variable - SBCacheExp
msg002260=Country Cache Refresh Interval
msg002261=IP's in cache will be removed after this interval in days. 0 will disable the cache.  <input type="button" value=" show cache" onclick="javascript:popFileEditor('pb/pbdb.sb.db',5);" />

# heading - PenaltyBox / Message and IP Scoring <a href="http://sourceforge.net/p/assp/wiki/Penalty_Box" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="PenaltyBox" /></a>

# variable - DoPenalty
msg002270=Do PenaltyBox - IP History<a href="http://sourceforge.net/p/assp/wiki/Penalty_Box" target="SPAMBOXHELP"><img src="get?file=images/info.png" alt="wiki" /></a>
msg002271=The PenaltyBox is a  temporary position of low esteem awarded for a perceived misdeed. It scores IP's based on some events ( baValencePB see  penalty scores )and writes them into a BlackBox (PBBlack). If the score per specified time interval surpasses the threshold the message is rejected (and the IP is marked for blocking). They continue to get scored  up to the Extreme Threshold.<br />
 These top performers can get a special treatment PenaltyExtreme when DoPenaltyExtreme is enabled. The WhiteBox (PBWhite) stores IP's which should not be put into the BlackBox (PBBlack). The WhiteBox is always enabled. If an address is in the whitelist or whitedomain, the IP goes into the WhiteBox. The WhiteBox is one of the sources  Delaying/Greylisting uses to determine when delaying should not be done. <br />Entries in <i>Don't do penalties for these IP's</i> or <i>ISP/Secondary MX Servers</i> will prevent from penalties. Select 'monitor/messageScoring' to fill WhiteBox (PBWhite) and BlackBox (PBBlack). 'monitor/messageScoring' is also the right choice if you do not want to block IP's but rather score a message in 'Message Scoring Mode'. 

# variable - DoPenaltyMessage
msg002280=Message Scoring Mode 
msg002281=If this feature is selected, the total score for all checks during a message is used to determine if the email is Spam. If the combined score is greater than the <b>Low MessageLimit</b> (PenaltyMessageLow) and less than or equal the <b>High MessageLimit</b> (PenaltyMessageLimit) the message will not be blocked but tagged. If the combined score is greater than the <b>High MessageLimit</b> (PenaltyMessageLimit), the message will be blocked.

# variable - DoLocalPenaltyMessage
msg010330=Message Scoring Mode for Local and Outgoing Mails
msg010331=If this feature is selected, the total score for all checks during a local or outgoing message is used to determine if the email is Spam. If the combined score is greater than the <b>Local Low MessageLimit</b> (LocalPenaltyMessageLow) and less than or equal the <b>Local High MessageLimit</b> (LocalPenaltyMessageLimit) the message will not be blocked but tagged. If the combined score is greater than the <b>Local High MessageLimit</b> (LocalPenaltyMessageLimit), the message will be blocked.

# variable - MsgScoreOnEnd
msg002290=Message Scoring on End
msg002291=SPAMBOX will wait using the 'DoPenaltyMessage' action, until all configured possible checks are finished. Use this, to force calculating a complete message score over all values, including all bonus values.

# variable - PenaltyMessageLow
msg002300=Low MessageLimit
msg002301=MessageMode will not block messages whose score exceeds this threshold during the message but will tag them.  For example: 40

# variable - LocalPenaltyMessageLow
msg010340=Low MessageLimit for Local and Outgoing Mails
msg010341=MessageMode will not block local and outgoing messages whose score exceeds this threshold during the message but will tag them.  For example: 40

# variable - PenaltyMessageLimit
msg002310=High MessageLimit
msg002311=MessageMode will block messages whose score exceeds this threshold during the message.  For example: 50

# variable - LocalPenaltyMessageLimit
msg010350=High MessageLimit for Local and Outgoing Mails
msg010351=MessageMode will block local and outgoing messages whose score exceeds this threshold during the message.  For example: 50

# variable - AddScoringHeader
msg002320=Add IP/Message Scoring Header
msg002321=Adds a line to the email header "X-Assp-XXX-Score: ", where XXX may be IP, Message or both.

# variable - pbdb
msg002330=PenaltyBox Database
msg002331=The directory/file with the penaltybox database files. For removal of entries from BlackBox (PBBlack) use noPB .
 For removal of entries from WhiteBox (PBWhite) use noPBwhite. For whitelisting IP's use whiteListedIPs or noProcessingIPs . For blacklisting use denySMTPConnectionsFrom and denySMTPConnectionsFromAlways .<br />Write only "DB:" to use a database table instead of a local file. <br />
 <input type="button" value=" Show BlackBox" onclick="javascript:popFileEditor('pb/pbdb.black.db',4);" /><input type="button" value="Show White Box" onclick="javascript:popFileEditor('pb/pbdb.white.db',4);" />

# variable - noPB
msg002340=Don't do Profiling for these IP's*
msg002341=Enter IP's that you don't want to be penalized. These IP's will also be automatically removed from BlackBox (PBBlack). For example: 127.0.0.1|172.16.

# variable - noPBwhite
msg002350=Don't do WhiteBox for these IP's*
msg002351=Enter IP's that you want to be penalized. These IP's will also be automatically removed from WhiteBox (PBWhite).

# variable - WhiteExpiration
msg002360=Expiration Time for WhiteBox Entries
msg002361=The WhiteBox (PBWhite) is always activated. The WhiteBox (PBWhite) is similar to the  Whitelist  - but it is not a whitelist: content-related checks like Bayesian, URIBL, Bomb  will be done, IP-related checks will be skipped. WhiteBox (PBWhite) entries will expire after this specified number of days. For example: 30

# variable - DoDamping
msg002370=Do Damping on Messagescore [0...99]
msg002371=If DoPenalty and DoPenaltyMessage are set not to disabled and DoDamping is not set to 0, SPAMBOX will slowdown the spammers traffic speed proportional to the current message score - because slowing down their speed will reduce spam everywhere.<br />
  The delay in seconds per receive/read cycle is calculated by the division [messagescore / DoDamping] . A recommended value is 5 default is 0. In this case the delay for a message score of 50 would be 10 seconds.<br />
  Do not use this option, if you have a highly frequented system, because the spammers connections will stay possibly a long time on your system, and you system could possibly reach the sessions limit ( maxSMTPSessions ).<br />
  Damping is never done for: noprocessing, whitelisted, nodelay, ISP, redlisted, noPB, outgoing/releayed and contentonly addresses, IP's, messages.<br />
  Damping may not be done for forced checks, relay attemps, messages reaching maxerrors, spamtrapaddresses and if any block condition is found - because SPAMBOX will no more read from those connections and closes such connections immediately - but SPAMBOX will try to keep the connection open for the calculated time, before it closes the connection.<br />
  Using this option or using a too low value (long delay) could possibly prevent SPAMBOX from receiving spam messages, for example for spamlovers or sendAllSpam . Some Servers could give up sending data, because of too long delays.

# variable - maxDampingTime
msg002380=Max time Used for Damping
msg002381=The maximum time in second, that is used for one damping cycle if DoDamping is not set to 0, even if the calculated value caused by DoDamping is higher. For example: 30

# variable - spamtrapaddresses
msg002390=PenaltyBox Trap Addresses *
msg002391=Mail to any of these addresses will be blocked and the scoring value is added. Whitelist and noPenaltyMakeTraps will be ignored. Nothing will be stored in the Spam Collection, if these addresses are not checked for validity. TO: and CC: addresses will be also checked - BCC: addresses only, if 'removeForeignBCC' is not set. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).

# variable - PenaltyTrapPolite
msg002400=PenaltyTrap Reply
msg002401=SMTP reply for invalid Users. Default: '550 5.1.1 User unknown: EMAILADDRESS' <br /> The literal EMAILADDRESS (case sensitive) is replaced by the fully qualified SMTP recipient (e.g., thisuser@example.com).

# variable - DoPenaltyMakeTraps
msg002410=Do Heavy Used Invalid Addresses as PenaltyBox Trap Addresses
msg002411=If set to 'make traps, only collect them', the frequency of Invalid Addresses is stored, no other action taken. If set to 'do not make them but block' or 'make traps and block them', addresses in heavy use will act like spamtrapaddresses (PenaltyBox Trap Addresses). If UseTrapToCollect is also set they will work like spamaddresses and collect the mails.

# variable - PenaltyMakeTraps
msg002420=Invalid Addresses Limit
msg002421=Minimum number of times an address must appear before it will be used as Trap. For example 10.

# variable - noPenaltyMakeTraps
msg002430=Exceptionlist for Traps*
msg002431=Addresses which should not be used for traps. This list is also opponent to spamtrapaddresses . Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).

# variable - PBTrapInterval
msg002440=Invalid Addresses Refresh Interval
msg002441=Addresses will be removed after this interval in days. For example 3. <input type="button" value=" Show Invalid Addresses" onclick="javascript:popFileEditor('pb/pbdb.trap.db',5);" />

# variable - PenaltyUseNetblocks
msg002450=Use IP Netblocks
msg002451=Perform the IP address checks of the sending host based on the /24 subnet  rather than on the specific IP.

# variable - PenaltyError
msg002460=Penalty Reply
msg002461=If set SMTP reply for Penalty Deny. eg: '554 5.7.1 Error, send your mail to postmaster@LOCALDOMAIN to ensure delivery'. The literal LOCALDOMAIN will be replaced by the recipient domain. The literal LOCALUSER will be replaced by the recipient user part. For example:554 5.7.1 Mail appears to be unsolicited -- send error reports to postmaster@LOCALDOMAIN.

# variable - PenaltyDuration
msg002470=Penalty Interval
msg002471=IP's will be kept in the BlackBox (PBBlack) if their score exceeds the Penalty Limit during this interval (minutes).

# variable - PenaltyLimit
msg002480=Penalty Limit
msg002481=PB will block IP's whose score exceeds this threshold during the Penalty Interval. <br />Successful SPAMBOX checks will increase the internal score per IP. For example: 50

# variable - PenaltyExpiration
msg002490=Expiration Time
msg002491=Penalties will expire after this number of minutes. If set to Zero the Penalty BlackBox (PBBlack) will be deleted and started from scratch.

# variable - CleanPBInterval
msg002500=Clean Up PB Databases <sup>s</sup>
msg002501=Delete outdated entries from blackbox (PBBlack) and whitebox (PBWhite) databases every this many hours.<br />
  Defaults to 3 hours.

# variable - DoPenaltyExtreme
msg002510=PenaltyBox Extreme IP Profiling
msg002511=If set PBextreme will block IP's whose score meet or exceed Extreme Scoring Threshold. DoPenaltyExtreme blocks after the header is done, based on the IP's score from previous and current SMTP session

# variable - DoPenaltyExtremeSMTP
msg002520=Enforce Early PenaltyBox Extreme IP Profiling
msg002521=If set PBextreme will block IP's whose score meet or exceed Extreme Scoring Threshold before DELAYING, based on the IP's score from previous SMTP sessions. This can be set independently from DoPenaltyExtreme above. Whitelist, Collecting, Testmode, CopySpam, Spam-Lover is ignored.

# variable - noExtremePB
msg009280=Don't do Extreme Profiling for these IP's*
msg009281=Enter IP's that you don't want to be extreme penalized. IP's in noPB are already included. For example: 127.0.0.1|172.16.

# variable - noExtremePBAddresses
msg009290=Don't do Extreme Profiling for Mails from any of these Addresses*
msg009291=Mails from any of these addresses will not be extreme profiled if DoPenaltyExtremeSMTP is not set. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).  Wildcards are supported (fribo*@domain.com).

# variable - PenaltyExtreme
msg002530=Extreme Scoring Threshold
msg002531=PBextreme will use this to determine candidates for special treatment. For example: 150.

# variable - ExtremeWL
msg002540=Penalize Whitelisted
msg002541=Enable extreme penalties for whitelisted addresses.

# variable - ExtremeNP
msg002550=Penalize NonProcessing
msg002551=Enable extreme penalties for addresses on the noProcessing list.

# variable - ExtremeExpiration
msg002560=Expiration Time for Extreme Penalties
msg002561=Extreme penalties will expire after this number of days. For example: 7

# variable - DoExtremeExport
msg002570=Do Export Penalty BlackBox Extreme
msg002571=

# variable - DoExtremeExportAppend
msg002580=Append Export File
msg002581=Do not overwrite the export file but append to it.

# variable - exportInterval
msg002590=Export BlackBox Extreme File Interval <sup>s</sup>
msg002591= Exported Penalty Black Box Extreme File every this hours.<br />
  Defaults to 6 hours.

# variable - exportExtremeBlack
msg002600=Exported BlackBox Extreme File 
msg002601=IP's in Penalty BlackBox (PBBlack) which surpassed the extreme level will be regularly stored into this file. May be used for setting the firewall or similar applications.

# variable - DoNotPenalizeRed
msg002610=Do Not Score IP's in Redlisted Messages
msg002611=IP's matching Red Regex or Redlist will not collect scoring values from PenaltyBox.

# variable - DoNotPenalizeNull
msg002620=Do Not Score IP's From Bounce/Null-Senders
msg002621=IP's matching BounceSenders will not be IP-penalized.<hr>

# variable - autValencePB
msg009300=Bad SMTP Authentication, default=60 +
msg009301=Message/IP scoring<br />
 <hr>This option and all other *ValencePB options with a "+" at the end of the description, accepts a second comma or pipe separated value like: "20,10" .<br />
  In this case the first value is used for message scoring and the second value is used for IP scoring.<br />
  If only the first value is defined, this value is used for both scoring mechanism.<br />
  If a *ValencePB option is related to any feature which allowes the usage of weighted penalties, the message scoring value is used to calculate the weighted penalty and the result is used calculating (result * ipscorevalence / messagescorevalence ) for IP scoring.

# variable - baValencePB
msg002630=Bad Attachment, default=20 +
msg002631=Message/IP scoring

# variable - backsctrValencePB
msg002640=Backscatter detection, default=10 +
msg002641=Message scoring

# variable - baysValencePB
msg002650=Bayesian, default=49 +
msg002651=Message/IP scoring

# variable - bayslocalValencePB
msg009550=Bayesian for Local Messages, default=55 +
msg009551=Message/IP scoring

# variable - bayshamValencePB
msg010290=Bayesian HAM Bonus, default=0 +
msg010291=<span class="positive">Message/IP scoring bonus (zero or negative value only)</span>

# variable - HMMValencePB
msg009640=Hidden-Makov-Model, default=49 +
msg009641=Message/IP scoring

# variable - HMMlocalValencePB
msg009650=Hidden-Makov-Model for Local Messages, default=55 +
msg009651=Message/IP scoring

# variable - HMMhamValencePB
msg010300=Hidden-Makov-Model HAM Bonus, default=0 +
msg010301=<span class="positive">Message/IP scoring bonus (zero or negative value only)</span>

# variable - blValencePB
msg002660=Blacklisted Domain, default=20 +
msg002661=Message/IP scoring

# variable - bombSuspiciousValencePB
msg002670=Bomb Suspicious - scoring only, default=10 +
msg002671=Message scoring

# variable - bombValencePB
msg002680=Bomb Expression, default=20 +
msg002681=Message/IP scoring

# variable - blackValencePB
msg002690=Bomb Black Expression, default=20 +
msg002691=Message/IP scoring

# variable - dkimValencePB
msg002700=Domain Key Verification failed, default=15 +
msg002701=Message/IP scoring

# variable - dkimOkValencePB
msg002710=Domain Key Verification OK, default=0
msg002711=<span class="positive">Message Scoring Bonus</span>

# variable - erValencePB
msg002720=Empty Recipients, default=5 +
msg002721=Message/IP scoring

# variable - etValencePB
msg002730=Early Talker Scoring, default=25 +
msg002731=Message/IP scoring for clients who talk before server's greeting is sent. A value of zero will disable this check - otherwise assp scores the IP and droppes the connection.

# variable - fhValencePB
msg002740=Forged HELO, default=150 +
msg002741=Message/IP scoring

# variable - fiphValencePB
msg002750=Suspicious HELO: IP in HELO, default=39 +
msg002751=Message/IP scoring

# variable - fiphmValencePB
msg002760=Suspicious HELO: IP in HELO mismatch, default=60 +
msg002761=Message/IP scoring

# variable - flValencePB
msg002770=Invalid Local Sender, default=20 +
msg002771=Message/IP scoring

# variable - slValencePB
msg010500=Spoofed Local Sender, default=20 +
msg010501=Message/IP scoring

# variable - hlValencePB
msg002780=Blacklisted/Good HELO, default=20 +
msg002781=Message/IP scoring

# variable - iaValencePB
msg002790=Internal Only Address, default=25 +
msg002791=Message/IP scoring

# variable - idValencePB
msg002800=Domain Changing IP Frequency, default=150 +
msg002801=Message/IP scoring

# variable - ifValencePB
msg002810=IP Frequency, default=150 +
msg002811=Message/IP scoring

# variable - idleValencePB
msg008870=Timeout Score
msg008871=For IP scoring with smtpIdleTimeout.

# variable - iplValencePB
msg002820=IP Parallel Sessions, default=5 +
msg002821=Message/IP scoring

# variable - ihValencePB
msg002830=Invalid HELO, default=10 +
msg002831=Message/IP scoring

# variable - irValencePB
msg008940=Invalid Recipient, default=10 +
msg008941=Message/IP scoring

# variable - isValencePB
msg010030=Subject Frequency, default=150 +
msg010031=Message/IP scoring

# variable - mdrValencePB
msg002840=Duplicate Recipient, default=10 +
msg002841=Message/IP scoring

# variable - midmValencePB
msg002850=Missing Message-ID, default=10 +
msg002851=Message/IP scoring

# variable - midsValencePB
msg002860=Suspicious Message-ID, default=10 +
msg002861=Message/IP scoring

# variable - midiValencePB
msg002870=Invalid Message-ID, default=10 +
msg002871=Message/IP scoring

# variable - fbmtvValencePB
msg002880=Invalid FBMTV check, default=25 +
msg002881=Message/IP scoring

# variable - batvValencePB
msg002890=Invalid BATV check, default=25 +
msg002891=Message/IP scoring

# variable - meValencePB
msg002900=Max Errors Exceeded, default=10 +
msg002901=Message/IP scoring

# variable - msValencePB
msg002910=Message Scoring Limit Exceeded, default=10 +
msg002911=IP scoring

# variable - mxValencePB
msg002920=Missing MX, default=10 +
msg002921=Message/IP scoring

# variable - mxaValencePB
msg002930=Missing MX &amp; A Record, default=15 +
msg002931=Message/IP scoring

# variable - nofromValencePB
msg002940=No From Score, default=50 +
msg002941=For Message/IP scoring in DoNoFrom.

# variable - pbeValencePB
msg002950=Extreme Bad IP History, TotalScore larger than PenaltyExtreme, default=25
msg002951=Message Scoring

# variable - pbValencePB
msg002960=Bad IP History, TotalScore larger than PenaltyLimit, default=15
msg002961=Message Scoring

# variable - pbwValencePB
msg002970=Good IP History (IP in PB WhiteBox), default=-15
msg002971=<span class="positive">Message Scoring Bonus</span>

# variable - gripValencePB
msg002980=GRIP value (+ if &gt; 0.9,- if &lt; 0.1), default=5
msg002981=Message scoring

# variable - okValencePB
msg002990=Message OK, default=-25
msg002991=<span class="positive">IP Bonus</span>

# variable - ptmValencePB
msg003000=Missing PTR Record, default=10 +
msg003001=Message/IP scoring

# variable - ptiValencePB
msg003010=Invalid PTR Record, default=15 +
msg003011=Message/IP scoring

# variable - rblnValencePB
msg003020=DNSBL Neutral, default=35 +
msg003021=Message/IP scoring

# variable - rblValencePB
msg003030=DNSBL Failed, default=100 +
msg003031=Message/IP scoring

# variable - rlValencePB
msg003040=Failed Relay Attempt, default=10 +
msg003041=Message/IP scoring

# variable - saValencePB
msg003050=Spam Collect Address, default=25
msg003051=IP scoring

# variable - scriptValencePB
msg003060=Script Expression, default=25 +
msg003061=Message/IP scoring

# variable - sbnValencePB
msg003070=No Organization and No CountryCode, default=10 +
msg003071=For Message/IP scoring in DoOrgBlocking/DoCountryBlocking

# variable - sworgValencePB
msg003080=White Organizations Score, default=-25
msg003081=<span class="positive"> Bonus for Message/IP scoring in DoOrgWhiting</span>

# variable - sbsccValencePB
msg003090=Suspicious Country Code, default=10
msg003091=Message scoring

# variable - bccValencePB
msg003100=Blocked Country Code Score, default=25 +
msg003101=For Message/IP scoring  in PenaltyBox ( DoPenalty )

# variable - sbfccValencePB
msg003110=Foreign Country Code Score, default=10 +
msg003111=message scoring  in PenaltyBox ( DoPenaltyMessage )

# variable - sbhccValencePB
msg003120=<span class="positive">Home Country Code Score, default=-10</span> +
msg003121=<span class="positive"> Bonus for Message/IP Scoring  in PenaltyBox ( DoPenalty )</span>

# variable - sborgValencePB
msg003130=Blocked Organizations Score, default=25 +
msg003131=For Message/IP scoring  in PenaltyBox ( DoPenalty )

# variable - spfpValencePB
msg003140=SPF Pass Score, default=-10
msg003141=<span class="positive"> Bonus for Message/IP scoring with SPF

# variable - spfnValencePB
msg003150=SPF Neutral, default=5 +
msg003151=Message/IP scoring

# variable - spfsValencePB
msg003160=SPF Softfailed, default=5 +
msg003161=Message/IP scoring

# variable - spfnonValencePB
msg003170=SPF None, default=0 +
msg003171=Message/IP scoring

# variable - spfuValencePB
msg003180=SPF Unknown, default=0 +
msg003181=Message/IP scoring

# variable - spfeValencePB
msg003190=SPF Error, default=5 +
msg003191=Message/IP scoring

# variable - spfValencePB
msg003200=SPF Failed, default=10 +
msg003201=Message/IP scoring

# variable - srsValencePB
msg003210=SRS Validate Bounce Failed Score, default=10 +
msg003211=For Message/IP scoring in SRSValidateBounce

# variable - stValencePB
msg003220=Penalty Trap Address, default=50 +
msg003221=For Message/IP scoring

# variable - tlsValencePB
msg003230=OK, Is a SSL/TLS connection, default=-10 +
msg003231=<span class="positive">Message Scoring/IP scoring Bonus for SSL/TLS connections</span>

# variable - uriblnValencePB
msg003240=URIBL Neutral, default=20 +
msg003241=Message/IP scoring

# variable - uriblValencePB
msg003250=URIBL Failed, default=25 +
msg003251=Message/IP scoring

# variable - vsValencePB
msg003260=Virus suspicious, default=25
msg003261=Message scoring

# variable - vdValencePB
msg003270=Virus detected, default=50 +
msg003271=Message/IP scoring

# variable - teValencePB
msg008710=TestRe Valence, default=20 +
msg008711=Valence for testing testRe<br /><hr />
  <div class="menuLevel1">Notes On Penalty Box</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/penaltybox.txt',3);" />

# heading - Delaying/Greylisting <a href="http://sourceforge.net/p/assp/wiki/Delaying/Greylisting" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="Delaying" /></a>

# variable - EnableDelaying
msg003280=Enable Delaying/Greylisting
msg003281=Enable Greylisting as described at <a href="http://projects.puremagic.com/greylisting/whitepaper.html?view=markup" rel="external">Greylisting-whitepaper</a>.<br />
  It's a new method of blocking significant amounts of spam at the mailserver level, but without resorting to heavyweight statistical analysis or other heuristical approaches.

# variable - DelayWL
msg003290=Whitelisted Greylisting
msg003291=Enable Greylisting for whitelisted mails. This also enables Geylisting for SPF-Cache-OK listed IP's and mails from white organizations, which are normally not greylisted.

# variable - DelayNP
msg003300=NoProcessing Greylisting
msg003301=Enable Greylisting for noprocessing mails.

# variable - DelaySL
msg003310=Spam-Lovers Greylisting
msg003311=Enable Greylisting for Spam-Lovers.

# variable - DelayAddHeader
msg003320=Add X-Assp-Delayed Header
msg003321=Add X-Assp-Delayed header to header of all delayed or whitelisted mails.

# variable - DelayEmbargoTime
msg003330=Embargo Time
msg003331=Enter the number of minutes for which delivery, related with new 'triplet' (IP address of the sending<br />
  host + mail from + rcpt to), is refused with a temporary failure. Default is 5 minutes.

# variable - DelayWaitTime
msg003340=Wait Time
msg003341=Enter the number of hours to wait for delivery attempts related with recognized 'triplet'; delivery is accepted <br />
  immediately and the 'tuplet' (IP address of the sending host + sender's domain) is safelisted. Default is 28 hours.

# variable - DelayExpiryTime
msg003350=Expiry Time
msg003351=Enter the number of days for which whitelisted 'tuplet' is considered valid. Default is 36 days.

# variable - DelayUseNetblocks
msg003360=Use IP Netblocks
msg003361=Perform the IP address checks of the sending host based on the /24 subnet it is at rather than the specific IP. <br />
  This feature may be useful for legitimate mail systems that shuffle messages among SMTP clients between retransmissions.

# variable - DelayNormalizeVERPs
msg003370=Normalize VERP Addresses
msg003371=Some mailing lists (such as Ezmlm) try to track bounces to individual mails, rather than just individual recipients, which creates a variation on the VERP method where each email has its own unique envelope sender. Since the automatic whitelisting (called savelisting to make a difference to the standard whitelisting) that is built into Greylisting depends on the envelope addresses for subsequent mails being the same, the greylisting filter will attempt to normalize the unique sender addresses, when this option is checked.

# variable - DelayWithMyName
msg003380=Add myName to Triplets
msg003381=If set, myName is added to every delay triplet (not to tuplets). This is useful and recommended, if you are using more than one SPAMBOX host with shared databases for delaydb. This option makes the triplets unique to every SPAMBOX host, because it is allowed for SMTP-hosts, to request a backup MX immediately after the primary MX, without waiting 5 minutes (DelayEmbargoTime) between the two requests.

# variable - DelayMD5
msg003390=Use MD5 for DelayDB
msg003391=Message-Digest algorithm 5 is a cryptographic hash function and adds some level of security to the delay database. Must be set to off if you want to list the database with DelayShowDB/DelayShowDBwhite. This requires an installed <a href="http://search.cpan.org/search?query=Digest::MD5" rel="external">Digest::MD5</a> module in PERL.

# variable - DelayShowDB
msg003400=Show Delay/Greylisting Database
msg003401=The directory/file with the delay database file. If you change the filename in section Filepath ( delaydb ) you must change it here too.

# variable - DelayShowDBwhite
msg003410=Show Delay/Greylisting Save Database
msg003411=The directory/file with the save delay database file. If you change the filename in section Filepath ( delaydb )  you must change it here too.

# variable - DelayExpireOnSpam
msg003420=Expire Spamming Safelisted Tuplets
msg003421=If a safelisted 'tuplet' is ever associated with spam, viruses, failed rbl, spf etc, it is deleted from the safelist. <br />
  This renews the temporary embargo for subsequent mail involving the tuplet.

# variable - CleanDelayDBInterval
msg003430=Clean Up Delaying Database <sup>s</sup>
msg003431=Delete outdated entries from triplets and safelisted tuplets databases every this many seconds.<br />
  Defaults to 3 hour.

# variable - noDelay
msg003440=Don't Delay these IPs*
msg003441=Enter IP addresses that you don't want to be delayed, separated by pipes (|). There are misbehaving MTAs that will not be able to get a legitimate email through a Greylisting server because they do not try again later. An INCOMPLETE list of such mailers is available at <a href="http://cvs.puremagic.com/viewcvs/greylisting/schema/whitelist_ip.txt" rel="external">cvs.puremagic.com/viewcvs/Greylisting/schema/whitelist_ip.txt</a>. <br />
  When using mentioned list remember to add trailing dots in IP addresses which specify subnets (eg. 192.168 -> 192.168. ).<br />
  For example:  127.0.0.1|172.16..<br />
  To define IP's only for specific email addresses or domains (recipients) you must use the file:... option<br />
  An entry (line) may look as follows:<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br /><br />
  It is possible to define a predefined group on any or both sides of the '=>' separator, like:<br />
  [ipgroup]=>[usergroup]|user@mydomain<br /><br />
  NOTICE: the following combination of two entries, will lead in to a user/domain based matching - the global entry will be ignored!<br />
  145.146.0.0/16 # comment<br />
  145.146.0.0/16=>*@local.domain|user@mydomain|user2@*.mydomain # comment<br />
  If multiple user/domain based entries are defined for the same IP, only the last one will be used!

# variable - noDelayAddresses
msg008610=Do not Delay these Addresses*
msg008611=Enter senders email addresses that you don't want to be delayed, separated by pipes (|). You can list specific addresses (user@anydomain.com), addresses at any domain (user), or entire domains (@anydomain.com).  Wildcards are supported (fribo*@domain.com). (|).<br />For example: fribo@anydomain.com|jhanna|@sillyguys.org or place them in a plain ASCII file one address per line:file:files/nodelayuser.txt.

# variable - DelayError
msg003450=Reply Code to Refuse Delayed Messages
msg003451=SMTP reply code to refuse delayed messages. Default: 451 4.7.1 Please try again later
  <br /><hr />
  <div class="menuLevel1">Notes On Delaying</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/delaying.txt',3);" />

# heading - SPF/DMARC/SRS <a href="http://sourceforge.net/p/assp/wiki/SPF" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="SPF" /></a>

# variable - ValidateSPF
msg003460=Enable SPF Validation
msg003461=Enable Sender Policy Framework Validation as described at <a href="http://www.openspf.org/" rel="external">openspf</a> and Domain-based Message Authentication, Reporting &amp; Conformance - described in <a href="http://www.dmarc.org/" rel="external">DMARC</a> (DMARC requires also DoDKIM to be enabled).<br />
  This requires an installed <a href="http://www.openspf.org/Implementations" rel="external">Mail::SPF</a> module in PERL. Testmode is set with spfTestMode, scoring is set with spfValencePB. If you need more information about the syntax of SPF records, visit <a href="http://www.openspf.org/SPF_Record_Syntax" rel="external">SPF_Record_Syntax</a>.

# variable - SPF2
msg003470=Do SPF Version 2 Validation
msg003471=Enable Sender Policy Framework Validation Version 2.<br />
  This requires an installed <a href="http://search.cpan.org/dist/Mail-SPF/" rel="external">Mail::SPF</a> object-oriented Perl module that supersedes the old Mail::SPF::Query module. 

# variable - SPFWL
msg003480=Whitelisted SPF Validation
msg003481=Enable Sender Policy Framework Validation for whitelisted users also.

# variable - SPFNP
msg009560=noProcessing SPF Validation
msg009561=Enable Sender Policy Framework Validation for nonprocessed messages also.

# variable - SPFLocal
msg003490=Local and outgoing mail SPF Validation
msg003491=Enable Sender Policy Framework Validation for local and outgoing messages also. Don't forget to configure your DNS-server for SPF and/or to configure SPFoverride / SPFfallback / SPFlocalRecord, if you enable this option.

# variable - enableSPFbackground
msg003500=Enable SPF Background Check
msg003501=SPF background checks are initiated by some features (for example DoDomainIP) to fillup the SPFCache. The collected results are later used to prevent blocking good mails.

# variable - AddSPFHeader
msg003510=Add Received-SPF Header
msg003511=Add Received-SPF header to header of all mails processed by SPF.

# variable - SPFError
msg003520=SPF Failed Reply
msg003521=SMTP reply for SPF failed messages. Default: '554 5.7.1 failed SPF: SPFRESULT'<br />
  The literal SPFRESULT (case sensitive) is replaced by the actual result.

# variable - noSPFRe
msg003530=Skip SPF Processing*
msg003531=Put anything here to identify these messages in mailfrom or header

# variable - SPFoverride
msg003540=Override Domains*
msg003541=Set override to define SPF records for domains that do publish (or not) but which you want to override anyway. If you specify only domains the Local SPF Record ( SPFlocalRecord ) below will be used as default. Wildcards are supported. For example: abc.com=>v=spf1 a/24 mx/24 ptr -all|cello.ch=>v=spf1 ip4:213.46.243.0/26  ~all|abc.com|*.def.com . <br />
 To generate a SPF record for a domain:<br />
 - go to <a href="http://www.senderbase.org/" target="_blank">http://www.senderbase.org</a><br />
 - lookup the domain information in "Look up your network"<br />
 - right beside "Addresses in domain used to send email" click on export, and export the list in to plain text<br />
 - copy and past the list in to an editor and generate a comma separated IP list<br />
 - go to an online SPF record generator - for example: <a href="http://www.royhochstenbach.com/projects/spfgenerator/" target="_blank">http://www.royhochstenbach.com/projects/spfgenerator</a> and generate the SPF record<br />
 - put "domain=>SPF-record" in any of SPFoverride or SPFfallback<br />
 - define the policy as strict as possible

# variable - SPFfallback
msg003550=Fallback Domains*
msg003551=Set fallback to define "pretend" SPF records for domains that don't publish them yet. If you specify only domains the Local SPF Record ( SPFlocalRecord ) below will be used as default. Wildcards are supported. For example: abc.com=>v=spf1 a/24 mx/24 ptr -all|cello.ch=>v=spf1 ip4:213.46.243.0/26  ~all|abc.com|*.def.com

# variable - LocalPolicySPF
msg003560=Local SPF Policy
msg003561=If the sending domain does not publish its own SPF Records this will be used.<br />The default is v=spf1 a/24 mx/24 ptr ~all<br />
 <span class="negative">This option applies to Mail::SPF::Query module only.</span>

# variable - SPFlocalRecord
msg003570=Fallback/Override SPF Record
msg003571=Used in Fallback/Override Domains<br />The default is v=spf1 a/24 mx/24 ptr -all

# variable - strictSPFRe
msg003580=Strict SPF Processing Regex*
msg003581=Softfail/Neutral will be failed for these sending addresses. Put anything here to identify the addresses

# variable - blockstrictSPFRe
msg003590=Block SPF Processing Regex*
msg003591=All failed messages will be blocked for these sending addresses. Put anything here to identify the addresses.

# variable - DoSPFinHeader
msg009820=Additional SPF Check on the Header from
msg009821=Do an additional SPF check on the header from: address if it is in blockstrictSPFRe *** this check breakes RFC rules ***.

# variable - SPFsoftfail
msg003600=Fail SPF Softfail Validations
msg003601=Intentionally fail SPF softfail status responses. The possible results of a query are:
<br />pass:The client IP address is an authorized mailer for the sender. The mail should be accepted subject to local policy regarding the sender.
<br />fail:The client IP address is not an authorized mailer, and the sender wants you to reject the transaction for fear of forgery.
<br />softfail:The client IP address is not an authorized mailer, but the sender prefers that you accept the transaction because it isn't absolutely sure all its users are mailing through approved servers. The softfail status is often used during initial deployment of SPF records by a domain.
<br />neutral:The sender makes no assertion about the status of the client IP.
<br />none:There is no SPF record for this domain.
<br />permerror &amp; temperror:The DNS lookup encountered an error during processing.
<br />unknown:The domain has a configuration error in the published data or defines a mechanism that this library does not understand.

# variable - SPFneutral
msg003610=Fail SPF Neutral Validations
msg003611=Intentionally fail SPF neutral status responses

# variable - SPFqueryerror
msg003620=Fail SPF Error Responses
msg003621=Intentionally fail SPF 'error' status responses

# variable - SPFnone
msg003630=Fail SPF None and Unknown Responses
msg003631=Intentionally fail SPF 'none' and 'unknown' status responses

# variable - SPFunknown
msg003640=Fail SPF Unknown  Responses
msg003641=Intentionally fail SPF 'unknown'  status responses

# variable - SPFCacheInterval
msg003650=SPF Cache Refresh Interval
msg003651=SPF records in cache will be removed after this interval in days. 0 will disable the cache.<input type="button" value=" Show SPF Cache" onclick="javascript:popFileEditor('pb/pbdb.spf.db',6);" />

# variable - DebugSPF
msg003660=Enable SPF/DNS/Whois/Senderbase Debug output to SPAMBOX Logfile
msg003661=Enables verbose debugging of SPF/DNS/Whois/Senderbase queries within the related modules.
 <br /><hr />
 <div class="menuLevel1">Notes On SPF</div>
 <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/spf.txt',3);" /> 

# variable - DoDMARC
msg010410=Enable DMARC Check
msg010411=If enabled and ValidateSPF and DoDKIM are enabled and the sending domain has published a DMARC-record/policy, assp will act on the mail according to the senders DMARC-policy using the results of the SPF and DKIM check. It is save to leave this feature ON, it will not produce false positives!<br />
  If you have published a DMARC-record and you want to collect statisical data, look at <a href="https://dmarcian.com" rel="external">dmarcian.com</a>

# variable - DMARCReportFrom
msg009730=From Address for DMARC Reports
msg009731=The email address to be used as FROM: address to send <a href="http://www.dmarc.org/" rel="external">DMARC</a> reports. If blank, no DMARC reports will be sent! If only the user name is defined, assp will add the domain name that belongs to the report.

# variable - noDMARCReportDomain
msg010240=Don't send DMARC reports to these Addresses/Domains*
msg010241=Put any DMARC report recipient domain or address (ruf/rua) in to this list - for example if DMARC reports could be never delivered for any reason.<br />
 Accepts specific addresses (user@example.com), user parts (user) or entire domains (@example.com). Wildcards are supported (fribo*@example.com).

# variable - EnableSRS
msg003670=Enable Sender Rewriting Scheme
msg003671=Enable Sender Rewriting Scheme as described at <a href="http://www.openspf.org/SRS" rel="external">www.openspf.org/SRS</a>.<br />
  This requires an installed <a href="http://www.openspf.org/Implementations" rel="external">Mail::SRS</a> module in PERL.<br />
  You should use SRS if your message handling system forwards email for domains with published spf records and there SPF record not includes your MX.<br />
  NOTICE: In case your local users are forwarding mails (e.g. from external domains) to external domains (external mail accounts) and these foreign domains bounces back (e.g. out_of_office / vacation), your MTA (smtpDestination) will possibly get mails from external domains to be delivered to external domains!<br />
  Note that you have to setup the outgoing path (Relay Host and Port) to let SPAMBOX see and rewrite your outgoing traffic.<br /> Testmode is set with srsTestMode.

# variable - SRSAliasDomain
msg003680=Alias Domain
msg003681=SPF requires the SMTP client IP to match the envelope sender (return-path). When a message is forwarded through<br />
  an intermediate server, that intermediate server may need to rewrite the return-path to remain SPF compliant.<br />
  For example: thisdomain.com

# variable - SRSSecretKey
msg003690=Secret Key
msg003691=A key for the cryptographic algorithms -- Must be at least 5 characters long.

# variable - SRSTimestampMaxAge
msg003700=Maximum Timestamp Age
msg003701=Enter the maximum number of days for which a timestamp is considered valid. Default is 2 days. After this number of days a SRS bounce is no longer valid!

# variable - SRSHashLength
msg003710=Hash Length
msg003711=The number of bytes of base64 encoded data to use for the cryptographic hash.<br />
  More is better, but makes for longer addresses which might exceed the 64 character length suggested by RFC2821.<br />
  This defaults to 6, which gives 6 x 6 = 36 bits of cryptographic information, which means that a spammer will have <br />
  to make 2^36 attempts to guarantee forging a SRS address.

# variable - SRSValidateBounce
msg003720=Enable Bounce Recipient Validation
msg003721=Bounce messages that fail reverse SRS validation (but not a valid SMTP probe)<br />
  will receive a 554 5.7.5 [Bounce address not SRS signed] SMTP error code.<br /> Testmode is set with srsTestMode, scoring is set with srsValencePB.

# variable - SRSno
msg003730=Don't Rewrite These Addresses*
msg003731=Don't rewrite addresses when messages come from these addresses. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). <br />For example: fribo@thisdomain.com|jhanna|@sillyguys.org

# variable - noSRS
msg003740=Don't Validate Bounces From these IPs*
msg003741=Enter IP addresses that you don't want to validate bounces from, separated by pipes (|).
  For example:  127.0.0.1|172.16..<br /><hr />
  <div class="menuLevel1">Notes On SRS</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/srs.txt',3);" />

# heading - DNSBL <a href="http://sourceforge.net/p/assp/wiki/DNSBL" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="DNSBL" /></a>

# variable - ValidateRBL
msg003750=Enable DNS Blacklist Validation 
msg003751=This requires an installed <a href="http://search.cpan.org/search?query=Net::DNS" rel="external">Net::DNS</a> module in PERL.

# variable - ForceRBLCache
msg003760=Early DNSBL Cache Blocking
msg003761=If set, SPAMBOX will use cached DNSBL hits to block messages before other tests. <b>testmode</b> will override this. <b>spamlover settings</b> will be ignored.

# variable - noRBL
msg003770=Don't do DNSBL for these IPs*
msg003771=Enter IP addresses that you don't want to be DNSBL validated, separated by pipes (|). For example:  127.0.0.1|172.16..

# variable - RBLWL
msg003780=Whitelisted DNSBL Validation
msg003781=Enable DNSBL for whitelisted users also

# variable - AddRBLHeader
msg003790=Add X-Assp-DNSBL Header
msg003791=Add X-Assp-DNSBL header to messages with positive reply from DNSBL.

# variable - RBLError
msg003800=DNSBL Failed Reply
msg003801=SMTP reply for DNSBL failed messages. Default: '554 5.7.1 DNS Blacklisted by RBLLISTED'<br />
  The literal RBLLISTED (case sensitive) is replaced by the actual service providers(s).

# variable - RBLServiceProvider
msg003810=RBL Service Providers*
msg003811=Names of DNSBLs to use separated by "|". You may set for every provider a weight like zen.spamhaus.org=>50|bl.spamcop.net=>25.<br />
 Defaults are:<br />
 zen.spamhaus.org=>1|bl.spamcop.net=>1|psbl.surriel.com=>2|ix.dnsbl.manitu.net=>2|<br />
 l2.apews.org=>3|combined.njabl.org=>1|safe.dnsbl.sorbs.net=>1|dnsbl-1.uceprotect.net=>2|<br />
 dnsbl-2.uceprotect.net=>2|dnsbl-3.uceprotect.net=>2|blackholes.five-ten-sg.com=>3".<br />
 DNSBL providers can get a "weight" like bl.spamcop.net=>1.<br />
 The value of the weight can be set directly like=>45 or as a divisor of RBLmaxweight. Low numbers &lt; 6 are divisors . So if RBLmaxweight = 50 (default) bl.spamcop.net=>50  would be the same as bl.spamcop.net=>1, bl.spamcop.net=>2 would be the same as bl.spamcop.net=>25.<br />
 If the sum of weights surpasses RBLmaxweight, the DNSBL check fails.  If not, the DNSBL check is scored as "neutral" even with RBLmaxhits reached. Setting Showmaxreplies will allow ALL replies to contribute to the total weight regardless of RBLmaxhits.<br />
 Some RBL Service Providers, like blackholes.five-ten-sg.com, provides different return codes in a single DNS-zone: like 127.a.b.c - where a,b,c are used to identify a weight or type (or what ever) of the returned entry. If you want to care about special return codes, or if you want to use different weights for different return codes, you should use the following enhanced entry syntax:<br /><br />
 RBL-Service-Provider=>result-to-watch=>weight (like:)<br />
 blackholes.five-ten-sg.com=>127.0.0.2=>3<br />
 blackholes.five-ten-sg.com=>127.0.0.5=>4<br />
 blackholes.five-ten-sg.com=>127.0.?.*=>5<br /><br />
 You can see, the wildcards * (multiple character) and ? (single character) are possible to use in the second parameter. Never mix the three possible syntax types for the same RBL Service Provider. A search for a match inside such a definition is done in reverse ASCII order, so the wildcards are used as last.<br />
 Some RBL Service Providers, provides different return codes using a bitmask in any part of the reply. To define weights for bitmasks, place a single 'M' in front of the mask number, like<br /><br />
 sp.com=>127.0.0.M2=>25<br />
 sp.com=>127.0.0.M4=>41<br />
 sp.com=>127.0.M1.5=>56<br />
 sp.com=>127.0.M64.*=>11<br />
 sp.com=>127.0.0.2=>22<br />
 sp.com=>127.0.*.*=>1<br /><br />
 Valid bitmasks are 1,2,4,8,16,32,64 and 128. The resulting weight will be the weight sum of all matching bitmasks (if no full qualified definition is found). For example: a return code of 127.0.0.6 for sp.com will result in a weight of 66 (25+41), a reply of 127.0.0.2 will result in 22<br />
 Because each single bitmask indicates a set of 128 numbers you should prevent the usage of something like 127.0.M16.M1 - this will lead in to a set of (128*128) 16384 addresses, which is really too much!<br />
 For the same service provider, first define all bitmask definitions, after that all full qualified definitions and than all definitions with wildcards, like in the example above! If your definition order is wrong, the resulting weights will be unexpected!
  

# variable - RBLmaxreplies
msg003820=Maximum Replies
msg003821=A reply is affirmative or negative reply from a DNSBL.<br />
  The DNSBL module will wait for this number of replies (negative or positive) from the DNSBLs listed under Service Provider for up to the Maximum Time( RBLmaxtime ).<br />
  This number should be equal to or less than the number of DNSBL Service Providers listed to allow for randomly unavailable DNSBLs.

# variable - RBLmaxhits
msg003830=Maximum Hits
msg003831=A hit is an affirmative response from a DNSBL.<br />
  The DNSBL module will check all of the DNSBLs listed under Service Provider. If the number of hits is greater or equal Maximum Hits, the email is flagged <b>Failed</b>.<br /> If the number of hits is greater 0 and less Maximum Hits, the email is flagged <b>Neutral</b>

# variable - RBLmaxweight
msg003840=RBL Maximum Weight
msg003841=A weight is a number representing the trust we put into a DNSBL.<br />
  The DNSBL module will check all of the DNSBLs listed under Service Provider. If the total of weights is greater or equal Maximum Weight, the email is flagged <b>Failed</b>.<br /> If the total of weights is greater 0 and less Maximum Weight, the email is flagged <b>Neutral</b>

# variable - RBLmaxtime
msg003850=Maximum Time
msg003851=This sets the maximum time in seconds to spend on each message performing DNSBL checks. Default is 15.

# variable - RBLsocktime
msg003860=Socket Timeout
msg003861=This sets the DNSBL socket read timeout in seconds.

# variable - RBLCacheExp
msg003870=DNSBL Expiration Time
msg003871=IP's in cache will be removed after this interval in hours. 0 will disable the cache. <input type="button" value=" Show DNSBL Cache" onclick="javascript:popFileEditor('pb/pbdb.rbl.db',5);" />
  <hr /><div class="menuLevel1">Notes On DNSBL</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/rbl.txt',3);" />

# heading - URIBL

# variable - ValidateURIBL
msg003880=Enable URI Blocklist Validation <a href="http://www.uribl.com/about.shtml" target="SPAMBOXHELP"><img src="get?file=images/info.png" alt="about" /></a>
msg003881=Enable URI Blocklist. Messages that fail URIBL validation will receive URIBLError SMTP error code. This requires an installed <a href="http://search.cpan.org/search?query=Net::DNS" rel="external">Net::DNS</a> module and an installed <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> module in PERL. <a href="http://sourceforge.net/p/assp/wiki/" target="SPAMBOXHELP"><img src="get?file=images/info.png" alt="wiki" /></a><br />
  <span class="negative"> 0 = disabled, 1 = block, 2 = monitor, 3 =  messagescore .</span>

# variable - URIBLWL
msg003890=Do URI Blocklist Validation for Whitelisted
msg003891=URIBL check is done ignoring all spamlovers and testmodes!

# variable - URIBLNP
msg003900=Do URI Blocklist Validation for NoProcessing
msg003901=URIBL check is done ignoring all spamlovers and testmodes!

# variable - URIBLLocal
msg003910=Do URI Blocklist Validation for Local Mails
msg003911=

# variable - URIBLISP
msg003920=Do URI Blocklist Validation for ISP/Secondary
msg003921=

# variable - URIBLServiceProvider
msg003930=URIBL Service Providers*
msg003931=Domain Names of URIBLs to use separated by "|". You may set for every provider a weight like multi.surbl.org=>50|black.uribl.com=>25.<br />
 The value of the weight can be set directly like=>45 or as a divisor of URIBLmaxweight . Low numbers &lt; 6 are divisors . So if URIBLmaxweight = 50 (default) multi.surbl.org=>50  would be the same as multi.surbl.org=>1, multi.surbl.org=>2 would be the same as multi.surbl.org=>25.<br />
 If the sum of weights surpasses URIBLmaxweight, the URIBL check fails.  If not, the URIBL check is scored as "neutral"  even with URIBLmaxhits reached. Setting Showmaxreplies will allow ALL replies to contribute to the total weight regardless of URIBLmaxhits.<br />
 Some URIBL Service Providers, like multi.surbl.org and black.uribl.com , provides different return codes in a single DNS-zone: like 127.a.b.c - where a,b,c are used to identify a weight or type (or what ever) of the returned entry. If you want to care about special return codes, or if you want to use different weights for different return codes, you should use the following enhanced entry syntax:<br /><br />
 URIBL-Service-Provider=>result-to-watch=>weight (like:)<br />
 multi.surbl.org=>127.0.0.2=>2<br />
 multi.surbl.org=>127.0.0.4=>3<br />
 multi.surbl.org=>127.0.0.?=>4<br />
 multi.surbl.org=>127.0.0.*=>5<br /><br />
 You can see, the wildcards * (multiple character) and ? (single character) are possible to use in the second parameter. Never mix the three possible syntax types for the same URIBL Service Provider. A search for a match inside such a definition is done in reverse ASCII order, so the wildcards are used as last.<br />
 Some URIBL Service Providers, provides different return codes using a bitmask in any part of the reply. To define weights for bitmasks, place a single 'M' in front of the mask number, like<br /><br />
 sp.com=>127.0.0.M2=>25<br />
 sp.com=>127.0.0.M4=>41<br />
 sp.com=>127.0.M1.5=>56<br />
 sp.com=>127.0.M64.*=>11<br />
 sp.com=>127.0.0.2=>22<br />
 sp.com=>127.0.*.*=>1<br /><br />
 Valid bitmasks are 1,2,4,8,16,32,64 and 128. The resulting weight will be the weight sum of all matching bitmasks (if no full qualified definition is found). For example: a return code of 127.0.0.6 for sp.com will result in a weight of 66 (25+41), a reply of 127.0.0.2 will result in 22<br />
 Because each single bitmask indicates a set of 128 numbers you should prevent the usage of something like 127.0.M16.M1 - this will lead in to a set of (128*128) 16384 addresses, which is really too much!<br />
 For the same service provider, first define all bitmask definitions, after that all full qualified definitions and than all definitions with wildcards, like in the example above! If your definition order is wrong, the resulting weights will be unexpected!
 Default is: multi.surbl.org|black.uribl.com

# variable - URIBLCCTLDS
msg003940=URIBL Country Code TLDs*
msg003941=List of <a href="http://www.surbl.org/tld/two-level-tlds" rel="external">two level country code TLDs</a> and <a href="http://www.surbl.org/tld/three-level-tlds" rel="external">three level country code TLDs</a> used to determine the base domain of the uri. Two level TLDs will be checked on third level, third level TLDs will be checked on fourth level. Any not listed domain will be checked in level two.

# variable - URIBLmaxuris
msg003950=Maximum URIs
msg003951=More than this number of URIs in the body will increase spam probability. Enter 0 to disable feature.

# variable - URIBLmaxdomains
msg003960=Maximum Unique Domain URIs
msg003961=More than this number of unique domain URIs in the body will increase spam probability. Enter 0 to disable feature.

# variable - URIBLNoObfuscated
msg003970=Disallow Obfuscated URIs <a href="http://www.pc-help.org/obscure.htm" target="SPAMBOXHELP"><img src="get?file=images/info.png" alt="obscure" /></a>
msg003971=When enabled, messages with obfuscated URIs of types [integer/octal/hex IP, other things!] in the body will get increased spam probability and if weights are used, the double weight will be used.

# variable - URIBLcheckDOTinURI
msg008820=Check for 'DOT' in URI
msg008821=When enabled, assp will also check for the used word 'DOT' instead of a '.' in URI's like 'example<b>dot</b>com or example<b>!d o-t_</b>com' .<br />
   Enable this feature only, if you don't expect any problems in your national language (using 'dot' + a toplevel domain in any words).

# variable - URIBLmaxreplies
msg003980=Maximum Replies
msg003981=A reply is affirmative or negative reply from a URIBL.<br />
   The URIBL module will wait for this number of replies (negative or positive) from the URIBLs listed under Service Provider<br />
   for up to the Maximum Time below. This number should be equal to or less than the number of URIBL Service Providers<br />
   listed to allow for randomly unavailable URIBLs.

# variable - URIBLmaxhits
msg003990=Maximum Hits
msg003991=A hit is an affirmative response from a URIBL.<br />
   The URIBL module will check all of the URIBLs listed under Service Provider,<br />
   and flag the email with a URIBL failure flag if more than this number of URIBLs return a positive blacklisted response.<br />
   This number should be less than or equal to Maximum Replies above and greater than 0.
   If the number of hits is greater or equal Maximum Hits, the email is flagged <b>failed</b> in every case!
   If the number of hits is greater 0 and less Maximum Hits, the email is flagged <b>neutral</b>.<br />
   This behavior could be changed to your needs by using weighted values for the URIBLServiceProvider .

# variable - URIBLmaxweight
msg009150=URIBL Maximum Weight
msg009151=A weight is a number representing the trust we put into a URIBL.<br />
  The URIBL module will check all of the URIBLs listed under URIBLServiceProvider for every URI found in an email. If the total of weights for a URI is greater or equal this Maximum Weight, the email is flagged <b>Failed</b>.<br /> If the total of weights is greater 0 and less Maximum Weight, the email is flagged <b>Neutral</b> . If not defined or set to zero only the hit count will used to detect a fail or neutral state.

# variable - URIBLmaxtime
msg004000=Maximum Time
msg004001=This sets the maximum time in seconds to spend on each message performing URIBL checks.

# variable - URIBLsocktime
msg004010=Socket Timeout
msg004011=This sets the URIBL socket read timeout in seconds.

# variable - URIBLwhitelist
msg004020=Whitelisted URIBL Domains*
msg004021=This prevents specific domains from being checked by URIBL module. For example: doubleclick.net or file:files/URIBLwhitelist.txt. Domains already listed in noProcessingDomains and whiteListedDomains will be honored.

# variable - noURIBL
msg004030=Don't Check Messages from these Addresses*
msg004031=Don't validate URIBL when messages come from these addresses. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). <br />For example: fribo@thisdomain.com|jhanna|@sillyguys.org

# variable - URIBLIPRe
msg009600=Bad URI IP's*
msg009601=Every IP in a URI and every IP resolved for a hostname in a URI is checked against this list of IP's or networks. For example:145.145.145.145|145.146.|1.2.0.0/16<br />
  This high security feature will follow the rules in URIBLWL, URIBLNP, URIBLLocal and URIBLISP - but if a match is found, it will block the email ( ignores scoring, monitoring, testmodes and spamlover ).

# variable - AddURIBLHeader
msg004040=Add X-Assp-Received-URIBL Header
msg004041=Add X-Assp-Received-URIBL header to messages with positive reply from URIBL.

# variable - AddURIS2MyHeader
msg009750=Add X-Assp-Detected-URI Header
msg009751=URI's detected with URIBLOK are added to our header lines (X-Assp-Detected-URI:).

# variable - URIBLCacheInterval
msg004050=URIBL Cache Refresh Interval for Hits
msg004051=Domains in cache will be removed after this interval in days. Empty or 0 will disable the cache. <input type="button" value=" Show URIBL Cache" onclick="javascript:popFileEditor('pb/pbdb.uribl.db',5);" />

# variable - URIBLCacheIntervalMiss
msg004060=URIBL Cache Refresh Interval for Misses
msg004061=Domains in cache with status=2 (miss) will be removed after this interval in days. Empty or 0 will prevent caching of non-hits. 

# variable - URIBLError
msg004070=Reply Code to Refuse Failed URIBL Message
msg004071=SMTP reply code to refuse failed URIBL message. The literal URIBLNAME (case sensitive) is replaced by the names of URIBLs with negative response. If this field is empty, client connection is simply dropped.<br /><hr /><div class="menuLevel1">Notes On URIBL</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/uribl.txt',3);" />

# heading - Attachment Blocking

# variable - DoBlockExes
msg004080=External Attachment Blocking 
msg004081=This requires an installed <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> module in PERL.

# variable - BlockExes
msg004090=External Attachment Blocking Level
msg004091=Set the level of Attachment Blocking to 1-3 for attachments that should be blocked, set level to 4  for attachments that should be allowed. Choose 0 for no attachment blocking.

# variable - BlockWLExes
msg004100=Whitelisted &amp; Local Attachment Blocking
msg004101=Set the level of Attachment Blocking to 0-4 for whitelisted &amp; local senders. Choose 0 for no attachment blocking.

# variable - BlockNPExes
msg004110=NoProcessing Attachment Blocking
msg004111=Set the level of Attachment Blocking to 0-4 for no processing senders. Choose 0 for no attachment blocking. 

# variable - BadAttachL1
msg004120=Level 1 rejected File Extensions
msg004121=This regular expression is used to identify Level 1 attachments that should be blocked.<br />
  Separate entries with a pipe |. The dot . is assumed to precede these, so don't include it.<br />
  For example:<br />
  ad[ep]|asx|ba[st]|chm|cmd|com|cpl|crt|dbx|exe|exe\-bin|hlp|ht[ab]|in[fs]|isp|js|jse|lnk|md[abez]|mht|ms[cipt]|nch|pcd|pif|prf|ps1?|reg|sc[frt]|sh[bs]|vb|vb[es]|wms|ws[cfh]<br />
  If you've installed the SPAMBOX_AFC Plugin (at least version 2.10) and 'exe-bin' is defined (on any level), the Plugin will detect executable files based on there binary content. Detected will be all executables, libraries and scripts for DOS and Windows (except .com files), MAC-OS and linux ELF (for all processor architectures).

# variable - BadAttachL2
msg004130=Level 2 rejected File Extensions
msg004131=This regular expression is used to identify Level 2 attachments that should be blocked.<br />
  Level 2 already includes all rejected extensions from Level 1. <br /> For example:<br /> (ad[ep]|asx|ba[st]|chm|cmd|com|cpl|crt|dbx|exe|hlp|ht[ab]|in[fs]|isp|js|jse|lnk|md[abez]|mht|ms[cipt]|nch|pcd|pif|prf|reg|sc[frt]|sh[bs]|vb|vb[es]|wms|ws[cfh]).zip

# variable - BadAttachL3
msg004140=Level 3 rejected File Extensions
msg004141=This regular expression is used to identify Level 3 attachments that should be blocked.<br />
  Level 3 includes Level 2 and Level 1.<br /> For example:<br /> zip|url

# variable - GoodAttach
msg004150=Level 4 Allowed File Extensions
msg004151=This regular expression is used to identify attachments that should be allowed. All others are blocked. Separate entries with a pipe |. The dot . is assumed to precede these, so don't include it.<br /> For example:<br /> ai|asc|bhx|dat|docx?|eps|gif|htm|html|ics|jpg|jpeg|hqx|od[tsp]|pdf|p7[mscz]|ppt|rar|rpt|rtf|snp|txt|xls|zip|7z

# variable - UserAttach
msg009690=User based Good and Bad Attachments*
msg009691=This set of regular expression is used to identify attachments that should be allowed or blocked for specified users and/or domains. Separate entries with a any of '=&gt; , ; space'. Separate multiple regex entries with pipe '|'. The dot . is assumed to precede the regex, so don't include it anywhere (except the user name).<br />
  To define entries you have to use the 'file:...' option. Define one entry per line - comments are not allowed in a definition line.<br />
  The syntax of an entry is as follows:<br />
  username => good => goodAttachRegex , good-out => goodoutRegex , good-in => goodinRegex , block => blockAttachRegex , block-out => blockoutRegex , block-in => blockinRegex<br />
  username - Mail solely to or from any of these addresses. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com) or a Group definition [GROUP]. Wildcards are supported (fribo*@domain.com).<br /><br />
  good => goodAttachRegex - good attachment for incoming and outgoing mails<br />
  good-out => goodoutRegex - good attachment for outgoing mails<br />
  good-in => goodinRegex - good attachment for incoming mails<br />
  block => blockAttachRegex - bad attachment for incoming and outgoing mails<br />
  block-out => blockoutRegex - bad attachment for outgoing mails<br />
  block-in => blockinRegex - bad attachment for incoming mails<br /><br />
  For example:<br />
  user@domain.tld => good => ai|asc|bhx|dat|doc|eps|gif|htm|html|ics|jpg|jpeg|hqx|od[tsp]|pdf|ppt|rar|rpt|rtf|snp|txt|xls|zip<br />
  *@domain.tld => good => ai|asc|bhx , good-out => eps|gif , good-in => htm|html , block => pdf|ppt , block-out => rar|rpt , block-in => xls|exe\-bin<br /><br />
  At least one of the above option must be defined in a line - a maximum of all (six) could be defined, if this makes sense.<br />
  If the user name matches for a sender or recipient and a (in/out) regex definition is found in this file, all level definition are overwritten for this mail.<br />
  good, good-out and good-in - and also - block, block-out and block-in - will be logical OR combined according to the mail flow.<br />
  Notice: if a bad attachment is found on a user based attachment check, the penalty box IP address scoring is skipped.

# variable - AttachmentError
msg004160=Reply Code to Refuse Rejected Attachments
msg004161=The literal 'FILENAME' will be replaced with the name of the blocked attachment!

# variable - BlockUuencoded
msg004170=Refuse Uuencoded Mails
msg004171=

# variable - UuencodedError
msg004180=Reply to Refuse Uuencoded Mails
msg004181=For example: 554 5.7.1 This mail is uuencoded and will be blocked<br />
 <hr /><div class="menuLevel1">Notes On Attachment Blocking</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/Attachments.txt',3);" />

# heading - ClamAV and FileScan

# variable - noScan
msg004190=Do Not Scan Messages from/to these Addresses*
msg004191=Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).

# variable - noScanIP
msg004200=Do Not Scan Messages from these IP's*
msg004201=Enter IP addresses that you don't want to be scanned for virus , separated by pipes (|). For example: 145.145.145.145|145.146.

# variable - NoScanRe
msg004210=Skip Virus RegEx*
msg004211=Put anything here to identify messages which should not be checked for viruses.

# variable - SuspiciousVirus
msg004220=No-Blocking Virus Scan Scoring Regex**
msg004221=If a ClamAV or FileScan result matches this expression it will be scored with the suspicious virus score ( vsValencePB ) and the message will not be blocked.<br />
 It is possible to weight such results. Every weighted regex that contains at least one '|' has to begin and end with a '~' - inside such regexes it is not allowed to use a '~', even it is escaped - for example:  ~abc\~|def~=>23 or ~abc~|def~=>23 - instead use the octal (\126) or hex (\x7E) notation , for example ~abc\126|def~=>23 or ~abc\x7E|def~=>23 . Every weighted regex has to be followed by '=>' and the weight value. For example: <br />Phishing\.=>1.45|~Heuristics|Email~=>50  <br />or <br />~(Email|HTML|Sanesecurity)\.(Phishing|Spear|(Spam|Scam)[a-z0-9]?)\.~=>4.6|Spam=>1.1|~Spear|Scam~=>2.1 . <br />The multiplication result of the weight and the penaltybox valence value will be used for scoring, if the absolute value of weight is less or equal 6. Otherwise the value of weight is used for scoring.

# variable - ScanWL
msg004230=Scan Whitelisted Senders
msg004231=

# variable - ScanNP
msg004240=Scan No Processing Senders
msg004241=

# variable - ScanLocal
msg004250=Scan Local Senders
msg004251=

# variable - ScanCC
msg004260=Scan Copied Spam and Forwarded Ham Mails
msg004261=

# variable - AvError
msg004270=Reply Code to Refuse Infected Messages
msg004271=Reply code to refuse infected messages. The string $infection is replaced with the name of the detected virus.<br />
 For example: 554 5.7.1 Mail appears infected with \[$infection\] -- disinfect and resend.

# variable - EmailVirusReportsTo
msg004280=Send Virus Report To This Address
msg004281=If set an email containing the Message ID, Remote IP, Message Subject, Sender email address, Recipient email address, and the virus detected will be sent to this address. For example: admin@domain.com

# variable - EmailVirusReportsHeader
msg004290=Add Full Header To Virus Report To Mail Address Above
msg004291=If set the full message headers will also be added to Virus Reports.

# variable - EmailVirusReportsToRCPT
msg004300=Send Virus Report To Recipient
msg004301=If set the intended recipient of the message will be sent a copy of the Virus Report. If "for HAM only" is selected, the report will only be sent, in case the mail is not detected as SPAM before the virus check is done.
  <hr />

# variable - DoFileScan
msg004310=Use File System Virus Scanner
msg004311=If activated, the message is written to a file inside the 'FileScanDir' with an extension of 'maillogExt'. After that SPAMBOX will call 'FileScanCMD' to detect if the temporary file is infected or not. The temporary created file(s) will be removed.<br />
 The infected file will be stored in a special folder, if the SpamVirusLog is set to 'quarantine' and the filepath to the viruslog is set.<br />
 Please check the setting of FileLogScan before you enable this option!

# variable - FileScanDir
msg004320=File Scan Directory
msg004321=Define the full path to the directory where the messages are temporary stored for the file system virus scanner. This could be any directory inside your file system. The running SPAMBOX process must have full permission to this directory and the files inside!

# variable - FileScanCMD
msg004330=File Scan Command
msg004331=SPAMBOX will call this system command and expects a returned string from this command. This returned string is checked against 'FileScanBad' and/or 'FileScanGood' to detect if the message is OK or not! If the file does not exists after the command call, the message is consider infected. SPAMBOX expects, that the file scan is finished when the command returns!<br />
  The literal 'FILENAME' will be replaced by the full qualified file name of the temporary file.<br />
  The literal 'NUMBER' will be replaced by the threadnumber and could be used to name logfiles and to redirect them to STDOUT.<br />
  The literal 'FILESCANDIR' will be replaced with the value of FileScanDir.<br />
  Any case sensitive literal starting and ending with an asterix (*) like '*rcpt*' or '*mailfrom*' will be replaced by the quoted runtime connection variable of Con{fh}->{literal} (this->{literal}). You need to know the assp internals!<br />
  If a code reference is defined for the internal variable &#36;main::FileScanCMDbuild_API in lib/CorrectSPAMBOXcfg.pm , assp will call '&#36;FileScanCMDbuild_API->(\&#36;cmd,&#36;this)' before running the command. The first parameter, the command (FileScanCMD), is submitted as a reference to a scalar, which must be modified in place. If you want assp not to scan the message, set this variable to undef. The second submitted parameter is the reference to the client connection parameter HASH - &#36;Con{fh} (eg. &#36;this)<br />
  All outputs of this command to STDERR are automatic redirected to STDOUT.<br />
  FileScan will not run, if FileScanCMD is not specified.<br />
  If you have your online/autoprotect file scanner configured to delete infected files inside the 'FileScanDir', define 'NORUN' in this field! In this case FileScanGood and FileScanBad are ignored. If there is a need to wait some time for the autoprotect scanner, write 'NORUN-dddd', where dddd are the milliseconds to wait!<br />
  Depending on your operating system it may possible, that you have to quote (' or ") the command, if it contains whitespaces. The replaced file name will be quoted by SPAMBOX if needed.

# variable - FileScanBad
msg004340=RegEx to Detect 'BAD' in Returned String*
msg004341=Put anything here to identify bad messages by the string returned from the FileScanCMD. If defined and this regular expression matches, the message is consider infected.

# variable - FileScanGood
msg004350=RegEx to Detect 'GOOD' in Returned String*
msg004351=Put anything here to identify good messages by the string returned from the FileScanCMD. If defined and this regular expression matches and 'FileScanBad' does not, the message is consider not infected.<br />
  If both FileScanBad and FileScanGood are defined, FileScanBad has not to match and FileScanGood has to match, to consider a mail not infected!

# variable - FileScanRespRe
msg004360=FileScan Responds Regex*
msg004361=A regular expression that will be used over the text returned from the FileScanCMD. The result of this regex is used as virus name ($infection) in AvError. For example: infected by .+? \.\&lt;hr \/\&gt;

# variable - FileLogScan
msg009760=Scan Resent and Stored Files for Virus with FileScan
msg009761=If virus check is enabled ( DoFileScan ), every file/mail (except reports - eg. n10000123456$maillogExt) in the 'resendmail' folder and if selected, every collected file is scanned for virus before it is sent or stored.<br />
 If a virus is found, the file/mail is not (re)sent (it will get the extension '.virus'). Infected collected files are moved in to the SpamVirusLog folder.<br />
 If 'scan resend folder and collected files' is selected, it could be possible, that the virus scanner ( FileScanCMD ) forces a very high system workload.<br />
 If you are not sure what to set here, leave the setting at the default 'scan resend folder only'!<br />
 Under normal conditions the scan will be done by the SMTP-worker, if assp is under a havy workload, the scan request will be transfered to the High-Workers (10000/10001).

# variable - UseAvClamd
msg004370=Use ClamAV
msg004371=If activated, the message is checked by ClamAV, this requires an installed File::Scan::ClamAV Perl module and a running Clamd . It is not recommended to use ClamAV on heavy-load systems, because of resulting system overload, stucking workers or timeouts.<br />
 The infected file will be stored in a special folder, if the SpamVirusLog is set to 'quarantine' and the filepath to the viruslog is set.<br />
 Please check the setting of ClamAVLogScan before you enable this option!

# variable - AvClamdPort
msg004380=Port or file socket for ClamAV
msg004381=A socket specified in the clamav.conf file - LocalSocket. For example /tmp/clamd. If the socket has been setup as a TCP/IP socket (see the TCPSocket option in the clamav.conf file), then specify the TCP socket. For example: 3310 

# variable - ClamAVBytes
msg004390=ClamAV Bytes
msg004391=The number of bytes per message or file that will be submited to ClamAV and FileScan for virus scanning. Values of 100000 or larger are not recommended, because while a thread is waiting for the scanner result, it could not get new connections.

# variable - ClamAVLogScan
msg010400=Scan Resent and Stored Files for Virus with ClamAV
msg010401=If virus check is enabled ( UseAvClamd ), every file/mail (except reports - eg. n10000123456$maillogExt) in the 'resendmail' folder and if selected, every collected file is scanned for virus before it is sent or stored.<br />
 If a virus is found, the file/mail is not (re)sent (it will get the extension '.virus'). Infected collected files are moved in to the SpamVirusLog folder.<br />
 If 'scan resend folder and collected files' is selected, it could be possible, that the virus scanner (clamd) forces a very high system workload.<br />
 If you are not sure what to set here, leave the setting at the default 'scan resend folder only'!<br />
 Under normal conditions the scan will be done by the SMTP-worker, if assp is under a havy workload, the scan request will be transfered to the High-Workers (10000/10001).

# variable - ClamAVtimeout
msg004400=ClamAV Timeout
msg004401=ClamAV will timeout after this many seconds.<br /> default: 10 seconds.
 <hr /><div class="menuLevel1">Notes On Virus Control</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/viruscontrol.txt',3);" />

# heading - Regex Filter / Spambomb <a href="http://sourceforge.net/p/assp/wiki/Regular_Expressions" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="bombRe" /></a>

# variable - AllowInternalsInRegex
msg009770=Allow Internal Variables in Regex
msg009771=Allow internal variables to be used in regular expressions - replaces something like ${$EmailDomainRe} with the value of $EmailDomainRe

# variable - preHeaderRe
msg008890=Regular Expression to early Identify Spam in Handshake and Header Part*
msg008891=Until the complete mail header is received, assp is processing the handshake and header content line per line, but the first mail content check is done after the complete mail header is received.<br />
 It is possible, that some content (malformed headers, forbidden characters or character combinations) could cause assp to die or to run in to a unrecoverable exception.<br />
 Use this regular expression to identify such incoming mails based on a line per line check, at the moment where a single line is received.<br />
 This setting does not affect any other and is not affected by any other configuration setting, except that this check is only done for incoming mails.<br />
 If a match is found, assp will immediately send a '421 <myName> closing transmission' reply to the client and will immediately terminate the connection.<br />
  Default setting is file:files/preheaderre.txt

# variable - bombReWL
msg004410=Do Bomb/Script Regular Expressions Checks for Whitelisted
msg004411=

# variable - bombReNP
msg004420=Do Bomb/Script Regular Expressions Checks for NoProcessing
msg004421=

# variable - bombReLocal
msg004430=Do Bomb/Script Regular Expressions Checks for Local Messages
msg004431=

# variable - bombReISPIP
msg004440=Do Bomb/Script Regular Expressions Checks for ISPIP
msg004441=

# variable - bombMaxPenaltyVal
msg004450=Maximum Penalty on Bombs per Mail per Check
msg004451=Depending on the configuration, it could be possible that a message gets a very high penalty value on a bomb-check. This value limits the maximum penalty per mail for every single bomb-check that is enabled.

# variable - maxBombSearchTime
msg004460=Maximum time spend on Bomb Search
msg004461=Maximum time in seconds that is spend on every configured bomb check. This time check is done, after every found bomb. So it is possible that the bomb search takes longer as the defined value, if no bomb is found or a single search takes more time. Default is 5.
  <hr><hr>
  <span class="negative">Even if any of the following bomb parameters is set to "block", but the sum of the resulting weighted penalty value is less than the corresponding "Penalty Box Valence Value" (because of lower weights) - only scoring will be done!<br />
  A description of how of weighting regular expressions is done and working, could be found at the bottom this web page.</span><hr>

# variable - DoTransliterate
msg00009990=Transliterate non-Roman characters in to Roman
msg009991=If enabled, SPAMBOX tries to transliterate non-Roman characters in an email it to Roman characters. These transliterations are than additionally used in the bomb checks.<br />
 For example - the (character) sequence '&#24180;&#20809;&#36890;&#20449;&#20135;&#19994;&#20250;&#22238;&#24402;&#39640;&#22686;&#38271;&#36712;&#36947;' will be transliterated to 'Nian Guang Tong Xin Chan Ye Hui Hui Gui Gao Zeng Chang Gui Dao' .<br />
 To transliterate something, use the 'Mail Analyzer'.<br />
 To make this feature working, the Perl module <a href="http://search.cpan.org/search?query=Text::Unidecode" rel="external">Text::Unidecode</a> must be installed.

# variable - DoBombHeaderRe
msg004470=Use BombHeader Regular Expressions on Header Part
msg004471=If activated, each message-header is checked  against bombSenderRe, bombHeaderRe, bombSubjectRe and bombCharSets Regular Expressions. If you use sendAllSpam, be aware that only the header will be shown in the spamcopy.<br />
  The scoring value is the sum of all valences(weights) of all found bombs - bombValencePB .

# variable - bombSenderRe
msg004480=Envelope Blocking Regular Expression **
msg004481=Part of DoBombHeaderRe: expression to identify sender (mailfrom,ip,helo).

# variable - bombHeaderRe
msg004490=Regular Expression to Identify Spam in Header Part**
msg004491=Part of DoBombHeaderRe: header will be checked against this Regex if DoBombHeaderRe is enabled. For example<br /> file:files/bombheaderre.txt

# variable - bombSubjectRe
msg004500=Regular Expression to Identify Spam in Subject**
msg004501=Part of DoBombHeaderRe : the mail header will be checked against this Regex if DoBombHeaderRe is enabled. If DoBombHeaderRe is enabled, the mail subject will be automatically checked against RFC2047 (for NON printable characters in the undecoded MIME content).

# variable - maxSubjectLength
msg009360=Maximum allowed Subject Length
msg009361=If set to a value greater than 0, assp will check the length of the Subject of the mail. If the Subject length exceeds this value, the message score will be increased by 'bombValencePB' and the string that is checked in 'bombSubjectRe' will be trunked to this length. It is possible to define a special weight using the syntax 'length=>value', in this case the defined absolute value will be used instead of 'bombValencePB' to increase the message score. If the subject is too long and this weight is equal or higher than 'bombMaxPenaltyVal' no further bomb checks will be done on the subject.

# variable - bombCharSets
msg004510=Regular Expression to Identify Foreign Charsets**
msg004511=Part of DoBombHeaderRe: header will be checked against this Regex if DoBombHeaderRe is enabled. The literal UNKNOWN will detect all wrong defined MIME character sets.<br />
  Part of DoBombRe : every MIME-part header will be checked against this Regex if DoBombRe is enabled.<br />
 For example:<br />
 charset=(?:BIG5|CHINESEBIG|GB2312|KS_C_5601|KOI8-R|EUC-KR|ISO-2022-JP|ISO-2022-KR|ISO-2022-CN|CP1251|UNKNOWN). 

# variable - bombHeaderReMaxHits
msg004520=Maximum Hits for Bombs in Header and Sender
msg004521=A hit is a found Bomb in header and sender - bombSenderRe , bombHeaderRe , bombSubjectRe , bombCharSets .<br />
  If the number of hits is greater or equal Maximum Hits, the email is flagged <b>Failed</b> (possibly blocked and/or scored).<br />
  If the number of hits is greater 0 and less Maximum Hits, the email is flagged <b>Neutral</b> (possibly scored)

# variable - DoBombRe
msg004530=Use Bomb Regular Expressions
msg004531=If activated, each message is checked  against bombRe and BombData Regular Expressions.<br />
  The scoring value is the sum of all valences(weights) of all found bombs - bombValencePB .

# variable - bombRe
msg004540=Regular Expression for Header and Data Part**
msg004541=Header and Data will be checked against this Regular Expression if DoBombRe is enabled.  For example:<br />IMG [^&gt;]*src=['&quot;]cid|&lt;BODY[^&gt;]*&gt;(&lt;[^&gt;]+&gt;|\n|\r)*&lt;IMG[^&gt;]+&gt;(&lt;[^&gt;]+&gt;|\n|\r)*&lt;/BODY&gt;<br />
 If you want to search for attachment names, define a line with 'attachment:the_attachment_name'.

# variable - bombSkipHeaderTagRe
msg009980=Regular Expression to Identify skipped Tags in Header Part*
msg009981=Regular Expression to define header tags, that will be skipped for bombSuspiciousRe, bombHeaderRe, bombRe and blackRe - like 'DKIM-Signature|Domainkey-Signature' - the always followed collon (:) is added by assp. For example<br /> file:files/bombskipheadertagre.txt

# variable - bombReMaxHits
msg004550=Maximum Hits for Bombs in Header and Data
msg004551=A hit is a found Bomb in header and data - bombRe .<br />
  If the number of hits is greater or equal Maximum Hits, the email is flagged <b>Failed</b> (possibly blocked and/or scored).<br />
  If the number of hits is greater 0 and less Maximum Hits, the email is flagged <b>Neutral</b> (possibly scored)

# variable - bombDataRe
msg004560=BombData Regular Expression for Data Part**
msg004561=Data part will be checked against the Regular Expression  if DoBombRe is enabled. For example:<br />IMG [^&gt;]*src=['&quot;]cid|&lt;BODY[^&gt;]*&gt;(&lt;[^&gt;]+&gt;|\n|\r)*&lt;IMG[^&gt;]+&gt;(&lt;[^&gt;]+&gt;|\n|\r)*&lt;/BODY&gt;<br />
  If you want to search for attachment names, define a line with 'attachment:the_attachment_name'.

# variable - bombDataReMaxHits
msg004570=Maximum Hits for Bombs in Data
msg004571=A hit is a found Bomb in data - bombDataRe .<br />
  If the number of hits is greater or equal Maximum Hits, the email is flagged <b>Failed</b> (possibly blocked and/or scored).<br />
  If the number of hits is greater 0 and less Maximum Hits, the email is flagged <b>Neutral</b> (possibly scored)

# variable - bombSuspiciousRe
msg004580=Suspicious Expression for Scoring Only**
msg004581=Sender, Header and Data will be checked for scoring only. Put here anything which might be suspicious. bombSuspiciousValencePB will be used to increase the score.<br />
  For example:<br />unsubscribe<br /><br />
  <b>NOTICE: BombSuspiciousRe is processed per default for all mails (incoming and outgoing) regardless of noprocessing and whitelisting! Only noBombScript is observed in every case.</b><br />
  To change this behavior, use the enhanced regular expression syntax (NWIL) described at the bottom of the GUI!

# variable - noBombScript
msg004590=Don't Check Messages from these Addresses*
msg004591=Don't detect spam bombs or scripts in messages from these addresses. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).

# variable - DoTestRe
msg004600=Do Test Regular Expression
msg004601=If activated, each message is checked  against the Test Regular Expression below. This provides a way to test regex strings on live mail.

# variable - testRe
msg004610=Test Regular Expression**
msg004611=Use this to test your regular expressions. Test valence is teValencePB .

# variable - bombError
msg004620=Spam Bomb Error
msg004621=SMTP error message to reject spam bombs. For example: 554 5.7.1 Delivery not authorized, message refused -- send report to mailto:postmaster@mydomain.tld or call +12.34.56.78.90

# variable - bombErrorReason
msg004630=Add Reason
msg004631=Add matching expression to Spam Bomb Error

# variable - DoBlackRe
msg004640=Use Black Regular Expression to Identify Spam Strictly
msg004641=Each incoming message is checked  against the BlackRe to Identify Spams. No Optout. <br />
  The scoring value is the sum of all valences(weights) of all found bombs - blackValencePB .

# variable - blackRe
msg004650=BlackRe - Regular Expression to Identify Spam Strictly**
msg004651=If an incoming email matches this Perl regular expression it will be strictly considered spam . For example: \breplica watches\b|\bMegaDik\b|\bcock\b|\bpenis\b|\bpills\b|\bOriginal Viagra\b|\bbetter sex life\b|\baverage penis\b|\benlargement\b|\borgasm\b|\berections\b|\bViagra\b|\bbig dick\b|\bsperma\b|\bSexual\b|\bErectionsk\b|\bStamina\b|\bsildenafil\b|\bcitrate\b|\bErectile\b

# variable - blackReMaxHits
msg004660=Maximum Hits for Identify Spam Strictly
msg004661=A hit is a found Bomb for Identify Spam Strictly. - blackRe <br />
  If the number of hits is greater or equal Maximum Hits, the email is flagged <b>Failed</b> (possibly blocked and/or scored).<br />
  If the number of hits is greater 0 and less Maximum Hits, the email is flagged <b>Neutral</b> (possibly scored)

# variable - DoScriptRe
msg004670=Use Regular Expression to Identify Mobile Scripts
msg004671=Each message is checked  against the Expression to Identify Mobile Scripts.<br />
  The scoring value is the sum of all valences(weights) of all found bombs - scriptValencePB .

# variable - scriptRe
msg004680=Regular Expression to Identify Mobile Scripts**
msg004681=Spam mails may contain mobile scripting code, eg activex and java or php. You can use this feature to block those messages.<br />
  Leave this blank to disable the feature. For example:<br /> \&lt;applet|\&lt;embed|\&lt;iframe|\&lt;object|\&lt;script|\&lt;?php|onmouseover|onload|onfocus|onblure|onclick|javascript:

# variable - scriptReMaxHits
msg004690=Maximum Hits for Identify Mobile Scripts
msg004691=A hit is a found mobile scripting code for Identify Mobile Scripts - scriptRe .<br />
  If the number of hits is greater or equal Maximum Hits, the email is flagged <b>Failed</b> (possibly blocked and/or scored).<br />
  If the number of hits is greater 0 and less Maximum Hits, the email is flagged <b>Neutral</b> (possibly scored)

# variable - scriptError
msg004700=Script Error
msg004701=SMTP error message to reject scripts. For example: 554 5.7.1 Your email appears to be spam -- send an error report to mailto:postmaster@mydomain.tld or call +12.34.56.78.90
  <br /><hr /><div class="menuLevel1">Notes On Bomb Regex</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/bombre.txt',3);" />

# heading - Bayesian and Hidden Markov Model (HMM) Options <a href="http://sourceforge.net/p/assp/wiki/SPAMBOX_Bayesian_Filter" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="Theory of Operation" /></a>

# variable - DoBayesian
msg004710=Bayesian Check <a href="http://sourceforge.net/p/assp/wiki/General_SPAMBOX_Questions" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="Theory of Operation" /></a>
msg004711=If activated, the message is checked based on Bayesian factors in spamdb for global and private entries. Private spamdb entries have a five times higher weight than global entries. This needs a fully functional spamdb built by rebuildspamdb. For starters it is best practice to put this inactive and build the spamdb collection with the help of DNSBL ,URIBL and spamaddresses. Scoring is done with baysValencePB for external mails, bayslocalValencePB is used for outgoing and internal mails - both values are multiplied with the detected baysProbability . It is possible to score (in and out) with a bonus for HAM with bayshamValencePB ( bayshamValencePB * ( 1 - baysProbability )).<br />
  Both, the Bayesian-check and the Hidden-Markov-Model-check (below), are using Perl version depending (Perl 5.12 and higher) <a href=\"http://unicode.org/charts/\" rel=\"external\">Unicode</a> features to recognize any possible character. How ever, some east asian languages (and some others) have graphemes, that contains multiple <a href=\"http://en.wikipedia.org/wiki/Unicode\" rel=\"external\">unicode code points</a>. If you need (or want) assp to process all text as a sequence of <a href=\"http://unicode.org/reports/tr29/\" rel=\"external\">UAX #29 Grapheme Clusters</a>, the Perl module <a href=\"http://search.cpan.org/dist/Unicode::LineBreak/\" rel=\"external\">Unicode::LineBreak</a> is required.

# variable - DoHMM
msg001230=Hidden Markov Model Check <a href="http://sourceforge.net/p/assp/wiki/General_SPAMBOX_Questions/#Theory_of_Operation" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="Theory of Operation" /></a>
msg001231=If activated, the message is checked based on a <a href="http://en.wikipedia.org/wiki/Hidden_Markov_model">Hidden Markov Model</a>  for global and private entries.  Private HMM entries have a five times higher weight than global entries. This needs a fully functional HMMdb database built by rebuildspamdb. For starters it is best practice to put this in monitoring mode and build the HMM collection with the help of DNSBL ,URIBL and spamaddresses. Scoring is done with HMMValencePB for external mails, HMMlocalValencePB is used for outgoing and internal mails - both values are multiplied with the detected hmmProbability. It is possible to score (in and out) with a bonus for HAM with HMMhamValencePB ( HMMhamValencePB * ( 1 - baysProbability )).<br />
  The perl module <a href="http://search.cpan.org/dist/BerkeleyDB/" rel="external">BerkeleyDB</a> version 0.34 or higher and BerkeleyDB version 4.5 or higher is required (to store temporary data) to use this feature and 'useBerkeleyDB' must be set to ON.<br />
  If this option is disabled, the rebuildspamdb task will <b>NOT</b> build a valid HMM database!<br />
  Compared to the Bayesian option, the Hidden Markov Model will produce results that are much more exact. How ever, it is possible, that HMM gets no result on very small messages, for this reason it is recommended to use both Bayesian and HMM. If you enable both checks, check your settings for baysValencePB, HMMValencePB, bayslocalValencePB and HMMlocalValencePB - eg. divide them by 2. or set the bayes values to 1/3 and the HMM values to 2/3.<br />
  NOTICE that using this option requires a <b>very fast database server</b> behind, if HMMusesBDB is set to OFF. The Bayesian- and HMM check together can produce <b>4000 and much more SQL queries per second</b>.<br />
  Keep in mind, that all backups and exports of the HMM database could require several 100MB of diskspace, if the file count in the corpus is very large.

# variable - BayesAfterHMM
msg010130=Do Bayesian depends on HMM results
msg010131=This value is ignored, if DoHMM is not enabled or set to monitor or DoBayesian is disabled.<br />
  The Bayesian check will only run, if the spam/ham probability of the HMM check is in a given value range or the HMM check has given too few results or the confidence ( baysConf ) of the detection is too low.<br />
  Leave this blank to run the Bayesian check every time, independent from any HMM result (default).<br />
  To set this value, define a probability value range like 0.4-0.6 or 0.3-0.7 - eg: best set it according to the setting of baysProbability ( [ 1 - baysProbability ]-baysProbability ).

# variable - ignoreDBVersionMissMatch
msg009940=Ignore a database version missmatch
msg009941=The status of assp is changed to "not healthy" if the current version of any of Spamdb or HMMdb is not equal to the required database version. Such a missmatch is automatically corrected with the next successful rebuildspamdb. How ever, if you are unable to solve this problem for any reason, you should set this value to keep the status of assp "healthy".

# variable - HMMusesBDB
msg001240=Use BerkeleyDB for the Hidden Markov Model database
msg001241=If enabled (default), the Hidden Markov Model database uses BerkeleyDB - notice: in this case no database import, backup or export are provided for the HMMdb. This value is completely ignored, if DBdriver is set to 'BerkeleyDB' and spamdb is set to 'DB:'. Switch this parameter to OFF, if you want to use the same database engine for the HMMdb like spamdb is configured. <br />
  <span class="negative">Changing this value requires a restart of assp. Possibly a forced rebuildspamdb is required after the restart.</span>

# variable - DoPrivatSpamdb
msg009630=Use also private entries for the Bayesian Spamdb and Hidden Markov Model databases
msg009631=If enabled, private entries (based on the local recipient and/or the report sender email address) will be added to the Bayesian and HMM databases. These private entries have a three times higher priority for users (full email address) and two times higher priority for domains (domain part of the email address) than global entries. To enable this option "spamdb" must be set to use a database "DB:" first!<br />
 <b>Setting this option to ON, will increase the record count for the spamdb and the HMM databases dramaticaly!</b>

# variable - BayesMaxProcessTime
msg004720=Bayesian and HMM Check Timeout 
msg004721=The Bayesian- and HMM Checks are the most memory and CPU consuming tasks that SPAMBOX is doing on a message. If such tasks running to long on one message, other messages could run in to SMTPIdleTimeout. Define here the maximum time in seconds that SPAMBOX should spend on Bayesian Checks for one message. Default is 60.

# variable - BayesWL
msg006120=Bayesian/HMM Check on Whitelisted NON Local Senders/Messages
msg006121=

# variable - BayesNP
msg007420=Bayesian/HMM Check on NoProcessing Messages
msg007421=

# variable - BayesLocal
msg010360=Bayesian/HMM Check on Local Senders
msg010361=

# variable - noBayesian
msg004730=Skip Bayesian and HMM Check*
msg004731=Mail from/to any of these addresses are ignored by Bayesian- and HMM check, mails will not be stored in spam/notspam collection. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com)

# variable - noBayesian_local
msg009570=Skip Bayesian and HMM Check for this local senders*
msg009571=Mail from any of these local addresses are ignored by Bayesian- and HMM checks, mails will not be stored in spam/notspam collection. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com)

# variable - Bayesian_localOnly
msg009010=Do Bayesian and HMM Check ONLY for this local senders*
msg009011=Only mail from any of these local addresses are processed by the Bayesian- and HMM checks, except they are also defined in noBayesian_local . BayesLocal must be switched on to make this option working. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com)

# variable - maxBayesValues
msg007890=Maximum most significant results used per mail to calculate Bayesian- and HMM-Probability
msg007891=Maximum count of most significant values used to calculate the Bayesian/HMM-Spam-Probability and the confidence of that probability.<br />
 The Bayesian/HMM Spam probability will be fine with 30 and will get more exact, than higher this value is - until a value of 60.<br />
 The confidence of the Bayesian/HMM Spam probability will get better, than higher this value is.<br />
 Values above 60 are possible, but could lead in to a performance penalty, without getting a better spam detection.
 Default is '60', minimum is '30'.

# variable - baysProbability
msg004740=Bayesian and HMM Probability Threshold 
msg004741= Messages with spam-probability below or equal this threshold are considered Ham. Recommended '0.6'. If you change this value, check your setting of BayesAfterHMM .<br />
 A resulting Spam-Probability above this value is multiplied with baysValencePB_local or baysValencePB to get the penaltybox scoring value for the IP- and message score. In other words, the penaltybox scoring value is weighted by the Spam-Probability in case Spam is detected.<br />
 A resulting Spam-Probability below this value but higher than ( 1 - baysProbability ) is stated as 'UNSURE' . In this case the half score will be added to the message score but not to the IP score and the message will not be blocked.<br /><br />
 The following default Bayesian math (prob = p1 / (p1 + p2)) is used to calculate the SpamProb value for 'n' found Bayesian-Word-Pairs or HMM-Sequences, each with a spam-weight 'p' - where 0&lt;p&lt;1 :<br /><br />
 'SpamProb' = (p<sub>1</sub> * p<sub>2</sub> * ... * p<sub>n</sub>) / ( p<sub>1</sub> * p<sub>2</sub> * ... * p<sub>n</sub>  + (1 - p<sub>1</sub>) * (1 - p<sub>2</sub> ) * ... * (1 - p<sub>n</sub>))<br />

# variable - baysConf
msg004750=Bayesian and HMM Confidence Threshold
msg004751= Spam-Mails having a confidence below this threshold are passed in TestMode .
 Spam-Mails having a confidence above this threshold are blocked. Set this only above 0 if you are familiar with the bayesian statistics used in SPAMBOX.<br />
 Messages that are processed by the bayesian and HMM check get a spam-probability score and a confidence score. The confidence score in assp is a quality indicator. A confidence near 0 would mean the probability score is like a wild guess. A confidence score near 1 would mean that it's pretty sure that the bayesian analysis result is correct. The confidence threshold is an allowance to process a Bayesian/HMM Spam as-if in Bayesian TestMode, if the message's *confidence* score is lower than the confidence threshold.
 Set this level to a specfic value, let's say .001 (which is a good one for starting), then:<br />
 - messages with spam-probability higher than 0.6 and a confidence of less than 0.001 would come through as in test mode<br />
 - messages with spam-probability higher than 0.6 and a confidence of more than 0.001 would be blocked<br />
 - messages with spam-probability less than 0.6 would pass<br />
 The 0.6 threshold can be set in baysProbability .<br />
 The confidence of the probability value is also used in BayesAfterHMM.<br />
 Carefully set this parameter above 0, if the bayesian corpus norm (shown by the rebuildspamdb log) is less than 0.6 or higher than 1.4 .<br /><br />
 The following math is used to calculate the SpamProbConfidence value for 'n' found Bayesian-Word-Pairs or HMM-Sequences, each with a spam-weight 'p' - where 0&lt;p&lt;1 :<br /><br />
 extreme_confidence_count = |(0 &lt; p<sub>1...n</sub> &lt; 0.01)| - |(0.99 &lt; p<sub>1...n</sub> &lt; 1)|<br />
 extreme_confidence_count = 0 - if ( extreme_confidence_count &lt; 0 and SpamProb &gt; 0.5) or ( extreme_confidence_count &gt; 0 and SpamProb &lt;= 0.5) == TRUE; <br />
 extreme_confidence_count = abs( extreme_confidence_count )<br />
 mail_confidence = abs((P<sub>1</sub> * P<sub>2</sub> * ... * P<sub>k</sub>) - ((1 - P<sub>1</sub>) * (1 - P<sub>2</sub> ) * ... * (1 - P<sub>k</sub>))) - for all elements P<sub>1...k</sub> in (0.01 &lt; p<sub>1...n</sub> &lt; 0.99)<br />
 corpus_confidence = 1 / ((abs(1 - corpus_norm) + 1)<sup>int(abs(1 - corpus_norm) * 10)</sup>) - the exponent is limited to a maximum of 4<br />
 SpamProbConfidence = 0.01<sup>extreme_confidence_count</sup> * mail_confidence * corpus_confidence * (n / maxBayesValues)<sup>2</sup><br /><br />
 The SpamProbConfidence is limited to a maximum of 1.0 . <br />
 All extreme values 'p' having a spam weight less than 0.01 or higher than 0.99 with a corresponding extreme value like (0.001 &lt;-&gt; 0.999) are ignored for the mail_confidence calculation.<br /><br />
 <span class="negative"> empty or zero = disabled</span>.<br /><br />
 <a href="./confgraph" target=_blank><img height=12 width=12 src="get?file=images/info.png" alt="confidence" /> Show the Bayesian and Hidden-Markov-Model confidence distribution!</a>

# variable - baysConfidenceHalfScore
msg004760=Reduce Scoring for Low Confidence
msg004761=Spam-Mails having a confidence below the threshold, will get half of the normal penalty score for Bayesian and HMM hits.

# variable - AddSpamProbHeader
msg004780=Add Bayes and HMM Probability Header
msg004781=Adds a line to the email header "X-Assp-Spam-Prob: 0.0123" and/or "X-Assp-HMM-Spam-Prob: 0.0123" Probability ranges from 0 to +1 where &gt; 0.6 = spam.

# variable - AddConfidenceHeader
msg004790=Add Bayes and HMM Confidence Header
msg004791=Adds a line to the email header "X-Assp-Bayes-Confidence: 0.0123" and/or "X-Assp-HMM-Confidence: 0.0123".<br /><hr />
  <div class="menuLevel1">Notes On Bayesian</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/bayesian.txt',3);" />

# heading - Backscatter Detection

# variable - DoMSGIDsig
msg004800=Do Message-ID tagging and validating (FBMTV)
msg004801=If activated, the message-ID of each outgoing message will be signed with a unique Tag and every incoming mail will be checked against this Tag. This tagging mode is called FBMTV "Forwarder(s) Bounce Message-ID Tag Validation" and it is worldwide unique to SPAMBOX. This Tag is build nearly the same way, as BATVTag is build for the sender address. This Tag will be removed from any incoming email, to recover the original references in the mail header! If anything is changed on this option inside the mail, no DKIM-check will be done! Before activating DoMSGIDsig, please configure MSGIDpreTag and MSGIDsec!<br />
   If activated and a bounced mail from null sender or postmaster contains no valid signature the configured action is taken.<br />
   If activated and any other mail contains a valid signature (eg. because it is an answer/reply to a tagged mail), this mail will be flagged as noprocessing and whitelisted !<br />
  This check requires an installed <a href="http://search.cpan.org/search?query=Digest::SHA1" rel="external">Digest::SHA1</a> module in Perl.

# variable - MSGIDpreTag
msg004810=Message-ID pre-Tag for MSGID-TAG-generation
msg004811=To use Message-ID signing and to create the MSGID-Tags, a pre-Tag is needed. This Tag must be 2-5 characters [a-z,A-Z,0-9] long. Default is 'sig'.

# variable - MSGIDSec
msg004820=Message-ID Secrets for MSGID-TAG-generation*
msg004821=To use Message-ID signing and to generate the MSGID-Tags, at leased one secret key is needed, up to ten keys are possible.<br />
  The notation is : generationnumber[0-9]=secretKey. For example<font color=red>(do not use!)</font>: 0=jk09Z|1=oPLmn4g|....   . Multiple pairs are separated by pipes (|). Default is  0=key0|1=key1|2=key2|3=key3|4=key4|5=key5|6=key6|7=key7|8=key8|9=key9 . Do not defines spaces, tabs and '=' as part of the keys(secrets)! <br />
  <font color=red>Values that contains any default are not valid, please change them, to prevent detecting strange SPAMBOX-signatures as valid local signatures!</font><br />For this reason, please define your secrets as unique as possible! The secrets are used randomly to build the Message-ID-Tags.

# variable - MSGIDsigAddresses
msg004830=Do FBMTV For These Addresses Only*
msg004831=Mail to any of these addresses will be tagged and checked by FBMTV. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). If empty, FBMTV is done for all addresses.

# variable - noMSGIDsigRe
msg008900=Skip Message-ID signing, mail content dependent*
msg008901=Use this to skip the Message-ID tagging depending on the content of the email. If the content of the email matches this regular expression (checking MaxBytes only), FBMTV will not be done. For example: 'I am out of office' .

# variable - noRedMSGIDsig
msg008910=Skip Message-ID signing for Redlisted mails
msg008911=If selected, FBMTV will not be done for redlisted emails!

# variable - DoBATV
msg004840=Do BATV tagging and validating
msg004841=If enabled any sender address of outgoing mails is mangled with a <a href="http://en.wikipedia.org/wiki/Bounce_Address_Tag_Validation" rel="external">BATV-Tag</a>. Any incoming bounced mail is checked for a valid BATV-Tag. All valid (local) BATV-Tags will be removed from incoming mails - so whitelisting, delaying and all other recipient and sender based checks will use the normal addresses. If the BATV-check is successful, no MSGID-signing-check and DNS-Backscatter-check will be done! If any BATVTag was removed, no DKIM-check will be done! BATV-address-replacement is done, before the recipient replacement rules are processed!<br />
  This check requires an installed <a href="http://search.cpan.org/search?query=Digest::SHA1" rel="external">Digest::SHA1</a> module in Perl.

# variable - BATVSec
msg004850=BATV Secrets for BATV-TAG-generation*
msg004851=To use <a href="http://en.wikipedia.org/wiki/Bounce_Address_Tag_Validation" rel="external">BATV</a> and to create the BATV-Tags, at leased one secret key is needed, up to ten keys are possible.<br />
  The notation is : generationnumber[0-9]=secretKey. For example: 0=key0|1=KEYX45rt|....   . Multiple pairs are separated by pipes (|). Default is  0=key0|1=key1|2=key2|3=key3|4=key4|5=key5|6=key6|7=key7|8=key8|9=key9 . Do not defines spaces, tabs and '=' as part of the keys(secrets)! The secrets are use randomly to build the BATV-Tags.

# variable - removeBATVTag
msg004860=remove strange BATV-Tags from incoming mails
msg004861=Any strange BATV-signature will be removed from the sender address and the real sender address will be used! Using this together with remindBATVTag keeps your clients addressbooks (also whitelist, delaydb ...) clean from BATV-Tags. This will also work, if DoBATV is disabled. If you do not use remindBATVTag and the MTA behind SPAMBOX sends a bounced mail back - this mail will fail on BATV on the recipients site. If any BATVTag was removed, no DKIM-check will be done!

# variable - remindBATVTag
msg004870=store incoming strange BATV-Tags to remind them for outgoing bounce mails
msg004871=If defined, any incoming stange BATV-signature will be stored and any recipient of outgoing bounce mails will be checked against this list. If there is found a valid (not older than 7 days) BATV-Tag for that recipient, it will be mangled in to the recipient address. This will also work, if DoBATV is disabled.

# variable - DoBackSctr
msg004880=Do DNS-Backscatter Detection
msg004881=If activated, the IP-address of each message received for null sender,bounced or postmaster will be checked against the list below.
   DNS base checks requires an installed <a href="http://search.cpan.org/search?query=Net::DNS" rel="external">Net::DNS</a> module in Perl.<br />
   For more information about backscatter detection please read <a href="http://www.backscatterer.org/?target=usage" rel="external">http://www.backscatterer.org/?target=usage</a>.

# variable - BackDNSInterval
msg004890=Backscatter-DNS Cache Refresh Interval
msg004891=IP's in cache will be removed after this interval in days. 0 will disable the cache and the usage of downloadBackDNSFile and localBackDNSFile. <input type="button" value=" Show Backscatter-DNS Cache" onclick="javascript:popFileEditor('pb/pbdb.back.db',5);" />

# variable - BackSctrServiceProvider
msg004900=ServiceProvider for Backscatterer Detection*
msg004901=ServiceProvider for DNS check on Backscatterer. Possible value is ips.backscatterer.org for DNS check.

# variable - downloadBackDNSFile
msg004910=Download the Backscatterer DNS-IP-List
msg004911=If selected, the complete IP-list is downloaded to a local file. If useDB4IntCache is set, the list is stored in a BerkeleyDB database (BackDNS2). Otherwise the records will be stored in the pbdb cache BackDNS . The download will be skipped, if useDB4IntCache is not set and mysqlSlaveMode is set. IP's are checked on this file first, if the IP is not found on this list, a DNS query is done. It is recommended to use this option for ISP's and users with more than 1000 bounced mails a day. See wget-mirrors.uceprotect.net/rbldnsd-all/ips.backscatterer.org.gz

# variable - localBackDNSFile
msg004920=Local File for the Backscatterer DNS-IP-List
msg004921=The name of the local file that is used for this IP-list. The content of this file is filled in to the 'Backscatter-DNS Cache' ( BackDNSInterval ). IP's from this list will be removed after one day from the cache.
  <hr /><hr /><font color=red>The following configurations are valid for all Backscatter Detection Options!</font><hr />

# variable - Back250OKISP
msg004930=Send 250 OK to ISP if any Backscatter Detection fails
msg004931=If any Backscatter check fails for a bounced mail that is coming from an ISPIP, SPAMBOX will send "250 OK" to the ISP, but will discard the mail, if the check is configured to block!

# variable - BackWL
msg004940=Do Backscatter Detection checks for Whitelisted mail
msg004941=Tagging will be always done, if not excluded by address or domain!

# variable - BackNP
msg004950=Do Backscatter Detection checks for No Processing mail
msg004951=Tagging will be always done, if not excluded by address or domain!

# variable - noBackSctrRe
msg009240=Regular Expression to Skip all BackScatter Checks*
msg009241=If the contents of a mail matches these regular expressions, all BackScatter checks will be skipped.

# variable - noBackSctrAddresses
msg004960=Do not any Backscatter detection for this Addresses *
msg004961=Mail to and from any of these addresses will not be tagged and checked by any backscatter option. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).

# variable - noBackSctrIP
msg004970=Exclude these IP's from any Backscatter detection*
msg004971=Enter IP's that you want to exclude from FBMTV and Backscatter check, separated by pipes (|). <br />
  <hr /><div class="menuLevel1">Notes On Backscatter Detection</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/backscatter.txt',3);" />

# heading - TestModes

# variable - spamSubject
msg004980=Prepend Spam Subject <a href="http://sourceforge.net/p/assp/wiki/Getting_Started/#Rebuild_your_Bayesian_database."><img src="get?file=images/info.png" alt="TestMode" /></a>
msg004981=Setting a filter to testmode will tell SPAMBOX not to reject the mail but rather build up the whitelist and spam and notspam collections. This can go on for some time without disturbing normal operation. After this very important phase TestMode can be used to tag the message: if TestMode and the message is spam Spam Subject gets prepended to the subject of the email. For example: [SPAM]

# variable - spamTag
msg004990=Prepend Spam Tag
msg004991=If checked, the method(s) SPAMBOX used which caught the spam will be prepended to the subject of the email. For example; [DNSBL]

# variable - allTestMode
msg005000=All Test Mode ON
msg005001=Turn all of the individual testmodes on - regardless of the individual test mode settings. 

# variable - baysTestMode
msg005010=Bayesian/Hidden-Markov-Model Test Mode
msg005011=

# variable - baysTestModeUserAddresses
msg005020=Bayesian Test Mode User Addresses*
msg005021=These users are in test mode / mark subject only for bayesian spam, even with test mode above off

# variable - blTestMode
msg005030=BlackDomain Test Mode
msg005031=

# variable - hlTestMode
msg005040=Helo Blacklist Test Mode
msg005041=

# variable - flsTestMode
msg005050=Forged Local Domain Test Mode
msg005051=-> DoNoValidLocalSender

# variable - spfTestMode
msg005060=SPF Test Mode
msg005061=

# variable - rblTestMode
msg005070=DNSBL Test Mode
msg005071=

# variable - attachTestMode
msg005080=Bad Attachment Test Mode
msg005081=

# variable - uriblTestMode
msg005090=URIBL Test Mode
msg005091=

# variable - srsTestMode
msg005100=SRS Test Mode
msg005101=

# variable - bombTestMode
msg005110=Bomb Regex Test Mode
msg005111=

# variable - scriptTestMode
msg005120=Script Regex Test Mode
msg005121=

# variable - mxaTestMode
msg005130=Missing MX Record Test Mode
msg005131=

# variable - ptrTestMode
msg005140=Reversed Lookup Test Mode
msg005141=

# variable - ihTestMode
msg005150=Invalid Helo Test Mode
msg005151=

# variable - fhTestMode
msg005160=Forged Helo Test Mode
msg005161=

# variable - msTestMode
msg005170=Message Scoring Test Mode
msg005171=

# variable - dkimTestMode
msg005180=DKIM Test Mode
msg005181=

# variable - pbTestMode
msg005190=Penalty Box Test Mode
msg005191=

# variable - switchTestToScoring
msg005200=Switch Testmode to Message Scoring
msg005201=Put the filter automatically in "Message Scoring" when DoPenaltyMessage is set  (instead of stopping spam processing altogether).<br /><hr /><div class="menuLevel1">Notes On Testmode</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/testmode.txt',3);" />

# heading - Email Interface <a href="http://sourceforge.net/p/assp/wiki/How_do_i_use_the_e-mail_interface" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="How do I use the e-mail interface" /></a>

# variable - EmailInterfaceOk
msg005210=Enable Email Interface
msg005211=Checked means that you want SPAMBOX to intercept and parse mail to the following usernames at any localdomains. The domain '@assp.local' is automatically a local domain and can be used for the email-interface.
  <hr>
  <b>NOTICE:</b> It is possible to define any MIME-header lines in any report file after the first (subject) line. This makes it possible to define MIME encoding and/or charset settings.<br />
  If a definition of MIME encoding and/or charset is found in a report file, assp converts the report from UTF-8 in to the defined encodings. <b> Don't forget to terminate your MIME-header with an empty line!</b><br /><br />
  It is also possible to include files at any line of such a file, using the following directive<br />
  # include filename<br />
  where filename is the relative path (from /root/spambox) to the included file like reports/mime-header.txt (one file per line). The line will be internaly replaced by the contents of the included file!

# variable - EmailAdminReportsTo
msg005220=Admin Mail Address
msg005221=If set internal warnings/infos  will be sent to this address. For example: admin@domain.com

# variable - EmailReportDestination
msg005230=Email Interface Reports Destination
msg005231=Port to connect to when Email Interface or Block reports are send. If blank they go to the main smtpDestination.<br />
  If you need to connect to the EmailReportDestination host using native SSL, write 'SSL:' in front of the IP/host definition. In this case the Perl module <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a> must be installed and enabled ( useIOSocketSSL ).<br />
  eg 10.0.1.3:1025 SSL:10.0.1.3:465, etc.

# variable - EmailAdmins
msg005250=Authorized Addresses*
msg005251=Mail from any of these addresses can add/remove to/from redlist, spamlovers, noprocessing, blacklist. May request an EmailBlockReport for a list of users. Accepts specific addresses (user@example.com), user parts (user) or entire domains (@example.com)

# variable - EmailInterfaceDomains
msg010370=Accept Mails (Reports) for these local domains only*
msg010371=Enable the EmailInterface and BlockReports for these local domains ONLY (NOT RECOMMENDED). If used, you have also to define '@assp.local' (if required). If not used, all localdomains and '@assp.local' take place ( see EmailInterfaceOk ). Accepts entire domains (@domain.com|domain.com)

# variable - EmailSenderOK
msg005260=Accept Mails (Reports) from these external addresses*
msg005261=Allow these external domains/addresses to report to the email interface (NOT RECOMMENDED). The reply address for the reports must be set to a local one.  By default, SPAMBOX only accepts reports from local or authenticated users. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com)

# variable - EmailSenderNotOK
msg005270=Not Authorized Addresses*
msg005271=Mail from any of these addresses are not accepted from Email Interface, except "Help Report", "Analyze Report" and "Block Report/Resend". Accepts specific addresses (user@example.com), user parts (user) or entire domains (@example.com). The user will get informed about the denied request.

# variable - EmailSenderIgnore
msg009390=Ignore Not Authorized Addresses*
msg009391=Mail from any of these addresses are not accepted from Email Interface. Accepts specific addresses (user@example.com), user parts (user) or entire domains (@example.com). The user will get not informed about the denied request.

# variable - EmailHelp
msg005240=Help Address<a href="http://sourceforge.net/p/assp/wiki/Getting_Started/#Instructions_for_use_for_your_end_users." target="SPAMBOXHELP"><img src="get?file=images/info.png" alt="doku" /></a>
msg005241=Any mail sent by local/authenticated users to this username will be interpreted as a request for help. Do not put the full address here, just the user part. For example: assphelp

# variable - EmailSpam
msg005280=Report Spam Address
msg005281=Any mail sent or forwarded by local/authenticated users to this username will be interpreted as a spam report. Multiple attachments get truncated to MaxBytesReports. Do not put the full address here, just the user part.<br />
   For example: asspspam . Use a fake domain like @assp.local when you send the email- so the full address would be then asspspam@assp.local. <br />
   You can sent multiple mails as attachments and/or zipped file(s). Each attached email-file must have the extension defined in "maillogExt". In this case only the attachments will be processed. To use this multi-attachment-feature an installed <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> module in PERL is needed. It is also possible to send MS-outlook '.msg' files (possibly zipped). To use this MS-outlook-feature in addition an installed <a href="http://search.cpan.org/search?query=Email::Outlook::Message" rel="external">Email::Outlook::Message</a> module in PERL is needed.

# variable - EmailHam
msg005290=Report Ham (Not-Spam) Address
msg005291=Any mail sent or forwarded by local/authenticated users to this username will be interpreted as a false-positive report. Multiple attachments get truncated to MaxBytesReports. Do not put the full address here, just the user part.<br />
   For example: asspnotspam . Use a fake domain like @assp.local when you send the email- so the full address would be then asspspam@assp.local. <br />
   You can sent multiple mails as attachments and/or zipped file(s). Each attached email-file must have the extension defined in "maillogExt". In this case only the attachments will be processed. To use this multi-attachment-feature an installed <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> module in PERL is needed. It is also possible to send MS-outlook '.msg' files (possibly zipped). To use this MS-outlook-feature in addition an installed <a href="http://search.cpan.org/search?query=Email::Outlook::Message" rel="external">Email::Outlook::Message</a> module in PERL is needed.

# variable - EmailForwardReportedTo
msg009930=Email Interface Forward Reports Destination
msg009931=Host and Port to forward EmailSpam and EmailHam reports to - eg "10.0.1.3:1025".<br />
  If you use more than one assp instance and your users are reporting spam and ham mails to multiple or all of them, but only one (but not this instance) is doing the rebuildspamdb and the corpus folders are not shared between the instances,<br />
  define the "host:port" of the central assp (rebuild-) instance here. Every report to EmailSpam and EmailHam (but only these!) will be forwarded to the defined host(s) and NO other local action will be taken. If the forwarding to all defined hosts fails, the request will be processed locally. To define multiple hosts for failover, separate them by pipe (|).

# variable - EmailErrorsReply
msg005300=Reply to Spam/Not-Spam Reports
msg005301=

# variable - EmailErrorsTo
msg005310=Send Copy of Spam/Ham-Reports TO
msg005311=Email sent from SPAMBOX acknowledging your submissions will be sent to this address. For example: admin@domain.com<br />

# variable - EmailErrorsModifyWhite
msg005320=Combined Spam/Ham Report &amp; Whitelist Check
msg005321=If set to 'modify whitelist' Ham Reports will add email addresses to the Whitelist, Spam Reports will remove addresses from the Whitelist, also a copy of a file in the GUI to correctedspam (remove) and correctednotspam (add) will modify the Whitelist for the found addresses. If set to 'show whitelist' Spam Reports will show if addresses are whitelisted.

# variable - EmailErrorsModifyNoP
msg008790=Combined Spam Report and NoProcessing Deletion
msg008791=If set to 'modify noProcessing' Spam Reports will remove email addresses from noProcessing list. If set to 'show noProcessing' Spam Reports will show if addresses are on noProcessing list, also a copy of a file in the GUI to correctedspam (remove) and correctednotspam (show) will modify the noProcessing list for the found addresses.

# variable - EmailWhitelistAdd
msg005330=Add to Whitelist Address
msg005331=Any mail sent by local/authenticated users to this username will be interpreted as a request to add addresses to the whitelist. Do not put the full address here, just the user part. <br />
  For example: asspwhite<br />
  If an address is added to whitelist, it will be removed from the Personal Blacklist of the sending user.

# variable - EmailWhitelistRemove
msg005340=Remove from Whitelist Address
msg005341=Any mail sent by local/authenticated users to this username will be interpreted as a request to remove addresses from the whitelist. Do not put the full address here, just the user part. <br />For example: asspnotwhite

# variable - EmailWhitelistReply
msg005350=Reply to Add to/Remove from Whitelist
msg005351=

# variable - EmailWhitelistTo
msg005360=Send Copy of Whitelist-Reports TO
msg005361=Email sent from SPAMBOX acknowledging your submissions will be sent to this address. For example: admin@domain.com

# variable - EmailRedlistAdd
msg005370=Add to Redlist Address
msg005371=Any mail sent by local/authenticated users to this username will be interpreted as a request to add the sender address to the redlist. Only the users defined in EmailRedlistTo, EmailAdmins and EmailAdminReportsTo are able to define a list of email addresses in the mail body.  Do not put the full address here, just the user part. <br />For example: asspred.

# variable - EmailRedlistRemove
msg005380=Remove from Redlist Addresses
msg005381=Any mail sent by local/authenticated users to this username will be interpreted as a request to remove the sender address from the redlist. Only the users defined in EmailRedlistTo, EmailAdmins and EmailAdminReportsTo are able to define a list of email addresses in the mail body. <br />
  Do not put the full address here, just the user part. <br />For example: asspnotred

# variable - EmailRedlistReply
msg005390=Reply to Add to/Remove from Redlist
msg005391=

# variable - EmailRedlistTo
msg005400=Send Copy of Redlist-Reports TO
msg005401=Email sent from SPAMBOX acknowledging your submissions will be sent to this address. For example: admin@domain.com

# variable - EmailSpamLoverAdd
msg005410=Add to SpamLover Addresses
msg005411=Any mail sent by local/authenticated users to this username will be interpreted as a request to add the sender address to spamLovers. Only the users defined in EmailSpamLoverTo, EmailAdmins and EmailAdminReportsTo are able to define a list of email addresses in the mail body. Do not put the full address here, just the user part. <br />For example: asspspamlover. To use this option, you have to configure spamLovers with "file:..." for example "file:files/spamlovers.txt" !

# variable - EmailSpamLoverRemove
msg005420=Remove from SpamLover Addresses
msg005421=Any mail sent by local/authenticated users to this username will be interpreted as a request to remove the sender address from spamLovers. Only the users defined in EmailSpamLoverTo, EmailAdmins and EmailAdminReportsTo are able to define a list of email addresses in the mail body. <br />
  Do not put the full address here, just the user part. <br />For example: asspnotspamlover

# variable - EmailSpamLoverReply
msg005430=Reply to Add to/Remove from SpamLovers
msg005431=

# variable - EmailSpamLoverTo
msg005440=Send Copy of Spamlover-Reports TO
msg005441=Email sent from SPAMBOX acknowledging your submissions will be sent to this address. For example: admin@domain.com

# variable - EmailNoProcessingAdd
msg005450=Add to NoProcessing Addresses
msg005451=Any mail sent by local/authenticated users to this username will be interpreted as a request to add the sender address to the noProcessing addresses. Only the users defined in EmailNoProcessingTo, EmailAdmins and EmailAdminReportsTo are able to define a list of email addresses in the mail body. Do not put the full address here, just the user part. <br />For example: asspnpadd. To use this option, you have to configure noProcessing with "file:..." for example "file:files/noprocessing.txt" !

# variable - EmailNoProcessingRemove
msg005460=Remove from noProcessing Addresses
msg005461=Any mail sent by local/authenticated users to this username will be interpreted as a request to remove the sender address from noProcessing .<br />
  Do not put the full address here, just the user part. Only the users defined in EmailNoProcessingTo, EmailAdmins and EmailAdminReportsTo are able to define a list of email addresses in the mail body. <br />For example: asspnprem. To use this option, you have to configure noProcessing with "file:..." for example "file:files/noprocessing.txt" !

# variable - EmailNoProcessingReply
msg005470=Reply to Add to/Remove from noProcessing
msg005471=

# variable - EmailNoProcessingTo
msg005480=Send Copy of NoProcessing-Reports TO
msg005481=Email sent from SPAMBOX acknowledging your submissions will be sent to this address. For example: admin@domain.com

# variable - EmailBlackAdd
msg005490=Add to BlackListed  Addresses
msg005491=Any mail sent by local/authenticated users to this username will be interpreted as a request to add the sender address to the blackListedDomains addresses. Only the users defined in EmailAdmins and EmailAdminReportsTo are able to request an addition. Do not put the full address here, just the user part. <br />For example: assp-black. To use this option, you have to configure blackListedDomains with "file:..." for example "file:files/blacklisted.txt" !

# variable - EmailBlackRemove
msg005500=Remove from BlackListed Addresses
msg005501=Any mail sent by local/authenticated users to this username will be interpreted as a request to remove the sender address from blackListedDomains .<br />
  Do not put the full address here, just the user part. Only the users defined in EmailAdmins and EmailAdminReportsTo are able to request an addition. <br />For example: assp-notblack. To use this option, you have to configure blackListedDomains with "file:..." for example "file:files/blacklisted.txt" !

# variable - EmailErrorsModifyPersBlack
msg009610=Spam/NotSpam Report will modify Personal Blacklist *
msg009611=Spam Reports will add email addresses to the Personal Blacklist, NotSpam Reports will remove addresses from the Personal Blacklist, if the report senders address matches.<br />
  Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). Wildcards are supported (fribo*@domain.com).<br />
  Default is *@* , which matches all addresses.

# variable - EmailPersBlackAdd
msg009110=Add to Personal BlackListed Addresses
msg009111=Any mail sent by local/authenticated users to this username will be interpreted as a request to add the listed address(es) to the personal blackListed addresses. Do not put the full address here, just the user part. <br />
  For example: assp-persblack.<br />
  The add and remove is done via email-interface, by sending specific email addresses to 'EmailPersBlackAdd'  and 'EmailPersBlackRemove'.
  A local user can force a complete report about all his personal black list entries by defining an email address that begins with 'reportpersblack' in a remove or add request : eg: reportpersblack@anydomain.com or by sending an empty body.<br />
  Any mail address sent to this username will be removed from the whitelist if possible.<br />
  Globalized adding an address to all local users is not supported - use EmailBlackAdd instead.<br />
  The following wildcard combinations are allowed for an email address to support personal blacklisting of domains:<br /><br />
  full_sender_address<br />
  *@sender_domain or @sender_domain<br />
  @*sender_domain or *@*sender_domain<br />
  @*.sender_domain or *@*.sender_domain

# variable - EmailPersBlackRemove
msg009120=Remove from Personal BlackListed Addresses
msg009121=Any mail sent by local/authenticated users to this username will be interpreted as a request to remove the listed address(es) from the personal blackListed addresses .<br />
  Do not put the full address here, just the user part.<br />
  For example: assp-persnotblack.<br />
  The add and remove is done via email-interface, by sending specific email addresses to 'EmailPersBlackAdd'  and 'EmailPersBlackRemove'.
  A local user can force a complete report about all his personal black list entries by defining an email address that begins with 'reportpersblack' in a remove or add request : eg: reportpersblack@anydomain.com or by sending an empty body.<br />
  Only an admin can force a complete cleanup of all personal black entries for a specific email address for all local users - sending an email to 'EmailPersBlackRemove' with the address followed by ',*' in the body
  eg: address_to_remove@the_domain.foo,* - be careful modifying personal entries of other users!<br />
  The same wildcard combinations like in EmailPersBlackAdd are supported.<br />
  <b>Notice: a remove request for a specific email address will remove ALL entries from the users personal blacklist, that would block this email address (also all matching wildcard entries)!</b>

# variable - EmailBlackReply
msg005510=Reply to Add to/Remove from BlackListed
msg005511=

# variable - EmailBlackTo
msg005520=Send Copy of Black-Change-Reports TO
msg005521=Email sent from SPAMBOX acknowledging your submissions will be sent to this address. For example: admin@domain.com

# variable - EmailAnalyze
msg005530=Request Analyze Report
msg005531=Any mail sent or forwarded by local/authenticated users to this username will be interpreted as a request for analyzing the mail. Do not put the full address here, just the user part. For example: asspanalyze <br />
  Use a fake domain like @assp.local when you send the email- so the full address would be then asspanalyze@assp.local. <br />You can sent multiple mails as attachments and/or zipped file(s). Each attached email-file must have the extension defined in "maillogExt". In this case only the attachments will be processed. To use this multi-attachment-feature an installed <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> module in PERL is needed. It is also possible to send MS-outlook '.msg' files (possibly zipped). To use this MS-outlook-feature in addition an installed <a href="http://search.cpan.org/search?query=Email::Outlook::Message" rel="external">Email::Outlook::Message</a> module in PERL is needed.

# variable - EmailAnalyzeReply
msg005540=Reply to Analyze Request
msg005541=

# variable - EmailAnalyzeTo
msg005550=Send Copy of Analyze-Reports
msg005551=A copy of the Analyze-Report will be sent to this address. For example: admin@domain.com

# variable - DoAdditionalAnalyze
msg005560=Spam and Ham Reports will trigger an additional Analyze Report 
msg005561=Additional Analyze Report will be generated for Spam and Ham Reports. Setting the TO Address accordingly and choosing <b>EmailAnalyzeTo</b> will send the Analyze Report to the admin only.

# variable - EmailFrom
msg005570=From Address for Reports
msg005571=Email sent from SPAMBOX acknowledging your submissions will be sent from this address.

# variable - EmailAllowEqual
msg005580=Allow '=' in Addresses
msg005581=Allow '=' in addresses to be whitelisted or redlisted.

# variable - EmailSenderNoReply
msg005590=Do Not Reply To These Addresses*
msg005591=Email sent from SPAMBOX acknowledging your submissions will not be sent to these addresses. Accepts specific addresses (user@example.com), user parts (user) or entire domains (@example.com).<br />
  Analyze-, PersonalBlackList- and all virus related reports are ignored by this feature (are sent even a user is listed here).<br />
  A Report copy to EmailAnalyzeTo, EmailBlackTo, EmailNoProcessingTo, EmailSpamLoverTo, EmailRedlistTo, EmailWhitelistTo and EmailErrorsTo is also ignored by this feature.<br /><hr />
  <div class="menuLevel1">Notes On Email Interface</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/emailinterface.txt',3);" />

# heading - File Paths and Database

# variable - base
msg005600=Directory Base
msg005601=All paths are relative to this folder.<br />
  <b>Note: Display only.</b>

# variable - spamlog
msg005610=Spam Collection
msg005611=The folder to save the collection of spam mails. This directory will be used in building the spamdb . For example: spam

# variable - notspamlog
msg005620=Not-spam Collection
msg005621=The folder to save the collection of not-spam mails. This directory will be used in building the spamdb . For example: notspam

# variable - incomingOkMail
msg005630=OK Mail
msg005631=The folder to save non-spam (message ok). These are messages which are considered as HAM, but are not stored in the standard HAM folder because of our policy to use only confirmed HAM messages (whitelisted or local) for spamdb . If you want to keep copies of ok mail then put in a directory name. This directory will not be used in building the spamdb . Default: okmail

# variable - discarded
msg005640=Discarded Spam
msg005641=The folder to save discarded spam-messages. These are Spam messages which are not stored for building the spamdb but for resending with an EmailBlockReport. If you want to keep copies of discarded Spam then put in a directory name. Default: discarded

# variable - viruslog
msg005650=Attachment/Virus Collection
msg005651=The folder to save rejected attachments and viruses. Leave this blank to not save these files (default). If you want to keep copies of rejected content then put in a directory name. Note: you must create the directory. This directory will not be used in building the spamdb . For example: quarantine

# variable - correctedspam
msg005660=False-negative Collection
msg005661=Spam that got through -- counts double. This directory will be used in building the spamdb . For example: errors/spam

# variable - correctednotspam
msg005670=False-positive Collection
msg005671=Good mail that was listed as spam, count 4x. This directory will be used in building the spamdb . For example: errors/notspam

# variable - resendmail
msg005680=try to resend this files
msg005681=SPAMBOX will try to resend the files in this directory to the original recipient. The files must have the "maillogExt" extension and must have the SMTP-format. For example: resendmail. This requires an installed <a href="http://search.cpan.org/search?query=Email::Send" rel="external">Email::Send</a> module in PERL.

# variable - maillogExt
msg005690=Extension for Mail Files
msg005691=Enter the file extension (include the period) you want appended to the mail files in the mail collections.<br />
  Leave it blank for no extension - this setting will prevent several features from working. Never use '.msg' - this is an extension used by MS-outlook! For Example: .eml

# variable - spamdb
msg005700=Spam/HMM Bayesian Database Files
msg005701=The output file from rebuildspamdb. Write only "DB:" to use a database table instead of a local file, in this case you need to edit the database parameters below. The Hidden Makov Model is only available if this parameter is set to DB: .<br />
 <hr /><span class=\"negative\">It is recommended to use a database for all possible lists and caches for best performance, less memoryusage and stability! If you do not want to install a database engine like MySql or Oracle, use BerkeleyDB! Please read the section DBdriver !</span><br />
 <hr /><div class="menuLevel1">Last Run Rebuildspamdb</div><input type="button" value="Last Run Rebuildspamdb" onclick="javascript:popFileEditor('rebuildrun.txt',5);" />

# variable - whitelistdb
msg005710=E<!--get rid of google autofill-->mail Whitelist Database File
msg005711=The file with the whitelist.<br />
  Write only "DB:" to use a database table instead of a local file, in this case you need to edit the database parameters below.

# variable - redlistdb
msg005720=E<!--get rid of google autofill-->mail Redlist Database File
msg005721=The file with the redlist.<br />
  Write only "DB:" to use a database table instead of a local file, in this case you need to edit the database parameters below.

# variable - persblackdb
msg009100=Personal Blacklist Database File
msg009101=The file with the personal blacklist. The check of the personal black list is done shortly after the RCPT TO: command. This command will be rejected if an entry is found - any other setting except send250OK and send250OKISP will be ignored.<br />
  Each entry is represented by two comma separated values TO,FROM (and an expiration date).<br />
  TO could be any of : email address, [subdomain.]domain.tld, @[subdomain.]domain.tld, *@[subdomain.]domain.tld - the last three entry options could be only added and removed by editing the list in the GUI !<br />
  FROM could be any of : email address or any [@][subdomain.][domain.]TLD variant (wildcards are allowed). All values are supported by the email interface for all local users.<br />
  Write only "DB:" to use a database table instead of a local file, in this case you need to edit the database parameters below.

# variable - griplist
msg005730=GreyIPlist Database
msg005731=The file with the current Grey-IP-List database -- make this blank if you don't use it.

# variable - useDB4griplist
msg005740=Use BerkeleyDB for Griplist
msg005741=If selected SPAMBOX uses 'BerkeleyDB' instead of 'orderedtie' for griplist. Depending on your settings for OrderedTieHashTableSize this could spend some memory and/or result in better performance.  The perl module <a href="http://search.cpan.org/dist/BerkeleyDB/" rel="external">BerkeleyDB</a> version 0.34 or higher and BerkeleyDB version 4.5 or higher is required to use this feature.

# variable - droplist
msg005750=Drop also Connections from these IP's*
msg005751=Automatically downloaded (http://www.spamhaus.org/drop/drop.lasso) list of IP's which should be blocked right away. This list could be used in addition to denySMTPConnectionsFrom and/or denySMTPConnectionsFromAlways!

# variable - delaydb
msg005760=Delaying Database
msg005761=The file with the delay database.<br />Write only "DB:" to use a database table instead of a local file, in this case you need to edit the database parameters below.

# variable - ldaplistdb
msg005770=LDAP Database
msg005771=The file with the LDAP-cache database.<br />Write only "DB:" to use a database table instead of a local file, in this case you need to edit the database parameters below.

# variable - adminusersdb
msg005780=Admin Users Database
msg005781=The file with the GUI-Admin-Users database - default to set is 'adminusers'.<br />Write only "DB:" to use a database table instead of a local file, in this case you need to edit the database parameters below. Before setting this parameter, please set adminusersdbpass to a value of your choice!<br />
 <hr>To use this database shared between multiple SPAMBOX's, set all SPAMBOX to mysqlSlaveMode (except the master) and the adminusersdbpass must be the same on all installations! If you want to change the adminusersdbpass, first change it on the master.<hr>

# variable - adminusersdbNoBIN
msg005790=Admin Users Database uses no Binary Data (ASCII only)
msg005791=Select this, if adminusersdb is set to "DB:" and your database engine does not accept or has problems with binary data (eg. Postgres). <span class="negative">If you change this value, you have to stop all assp and to cleanup both tables (adminusers and adminusersright) <b>before</b> restarting assp!</span>. To keep your data do the following: do an ExportMysqlDB - change this value - stop assp - drop or clean both tables - start assp - do an ImportMysqlDB .

# variable - adminusersdbpass
msg005800=Admin Users Database PassPhrase
msg005801=The passphrase that is used to encrypt the adminusersdb. This has to be the same on all SPAMBOX installations that are sharing the adminusersdb. If you want to change it, first change it on the master installation and than on the slaves. Do not forget to configure 'mysqlSlaveMode' first. An empty value is not valid!

# variable - myhost
msg005810=database hostname or IP
msg005811=You need <a  href="http://search.cpan.org/~lds/Tie-DBI-1.02/lib/Tie/RDBM.pm" rel="external">Tie::RDBM</a> to use a database instead of local files.<br />
  This way you can share whitelist, delaydb, redlist and penaltybox between servers

# variable - DBdriver
msg005820=database driver name
msg005821=The database driver used to access your database - DBD-driver. The following drivers are available on your system:<br />
  $DBdriversJ<br />
  If you can not find the driver for your database in this list, you should install it via cpan or ppm!<br />
  -  or if you have installed an ODBC-driver for your database and DBD-ODBC, just create a DSN and use ODBC.<br />
  If assp is running on windows and you want to use a MSSQL server as backend, don't use the ODBC driver - use the ADO driver with the DSN definition!<br />
  Useful are ADO|DB2|Informix|ODBC|Oracle|Pg|Sybase|mysql - but any other SQL compatible database should also work.<br/ ><br />
  syntax examples: driver,option1,option2,...,...<br />
  ADO[,DSN=mydsn[;Provider=sqloledb]]<br />
  DB2<br />
  Informix<br />
  ODBC,DSN=mydsn|driver=\{SQL Server\},Server=server_name<br />
  Oracle,SID=1|INSTANCE_NAME=myinstance|SERVER=myserver|SERVICE_NAME=myservice_name,[PORT=myport]<br />
  Pg[,PORT=myport]<br />
  Sybase,SERVER=myserver,[PORT=myport]<br />
  mysql[,PORT=myport][,mysql_socket=/path/to/mysql.sock][,AutoCommit=1][,mysql_auto_reconnect=1]<br /><br />
  <span class="negative">Instead using local files for hashes and lists via shared memory, it is recommended to use <a  href=\"http://search.cpan.org/search?query=berkeleydb\" rel=\"external\">BerkeleyDB</a> (Perl-module) version 0.34 or higher for highest performance and less memory usage.  The BerkeleyDB (engine) version 4.5 or higher is required to use BerkeleyDB.</span><br />
  If you specify BerkeleyDB here, the values for myhost, mydb, myuser and mypassword will be ignored. All possible BerkeleyDB option must be defined here - the option for '-Filename' is already set by SPAMBOX! Options could be defined for example:<br />
  BerkeleyDB,-Pagesize=>number,-Env=>[-Cachesize=>number,-Mode=>mode,...,...],...,...<br />
  If '-Env=>[-Cachesize=>number]' (number in bytes) is specified, this cache size will be used at minimum for every single list. This is not recommended, because SPAMBOX does automatically calculate the right cache for every list. You may setup configuration values for any BerkeleyDB, creating a file <a href=http://www.oracle.com/technology/documentation/berkeley-db/db/ref/env/db_config.html>DB_CONFIG</a> (case sensitive) in the corresponding directory ./tmpDB/[list]. Please use the BerkeleyDB documentation if you don't know the syntax of this file. Any value defined in that file will overwrite the corresponding internal SPAMBOX configuration for this DB.<br /><br />
  The options for all drivers and their possible or required order depends on the DBD driver used, please read the driver's documentation, if you do not know the needed option.<br />
  The username, password, host and databasename are always used from this configuration page.

# variable - mydb
msg005830=database name
msg005831=This database must exist before starting SPAMBOX, necessary tables will be created automatically into this database.

# variable - mysqlSlaveMode
msg005840=This is a slave of more then one assp-computers accessing the same database
msg005841=If you are running more then one assp-computers accessing the same or <a href="http://www.webopedia.com/TERM/S/SPOF.html">(better because of SPOF)</a> a bidirectional replicated database<br />
  this is a slave-assp and no database maintenance will be done by this one!<br />
  Maintenance should only be done by the first assp - the master!<br />
  Maintenance for file based caches and lists will always be done!

# variable - myuser
msg005850=database username
msg005851=This user must have CREATE privilege on database to create tables automatically

# variable - mypassword
msg005860=database password
msg005861=

# variable - DBCacheMaxAge
msg010020=Database Maximum Cache Age
msg010021=Setting this value above zero, enables an internal database cache for every defined table to reduce the concurrent database queries and to prevent possible record access collisions, which could cause stucking workers on some systems<br />
  The value defines the maximum age in seconds a record will exists untouched in the table cache.<br />
  Be careful, setting this value too high in a database replication environment could cause unexpected query results, because this cache is NOT shared between multiple assp instances.<br />
  If set, a value of 10 seems to be popular in any case. A value that is too small will produce overhead without any advantage. A value that is too high may cause database consistency problems.

# variable - importDBDir
msg005870=import directory
msg005871=The folder to import the used tables of the database from.<br />The schema of the files must be the assp-schema.<br />
Files can be:<br />
- pbdb.back.db.(add|rpl)<br />
- pbdb.batv.db.(add|rpl)<br />
- pbdb.black.db.(add|rpl)<br />
- pbdb.dkim.db.(add|rpl)<br />
- pbdb.mxa.db.(add|rpl)<br />
- pbdb.ptr.db(add|rpl)<br />
- pbdb.rbl.db.(add|rpl)<br />
- pbdb.rwl.db.(add|rpl)<br />
- pbdb.sb.db.(add|rpl)<br />
- pbdb.spf.db.(add|rpl)<br />
- pbdb.trap.db.(add|rpl)<br />
- pbdb.uribl.db.(add|rpl)<br />
- pbdb.white.db.(add|rpl)<br />
- ldaplist.(add|rpl)<br />
- redlist.(add|rpl)<br />
- whitelist.(add|rpl)<br />
- persblackdb.(add|rpl)<br />
- spamdb.(add|rpl)<br />
- spamdb.helo.(add|rpl)<br />
- delaydb.(add|rpl)<br />
- delaydb.white.(add|rpl)<br />
- adminusers.(add|rpl)<br />
- adminusersright.(add|rpl)<br />
Use the extension "add" or "rpl" to add or replace the records to the tables.<br />
Only files for database-enabled tables will be imported ! The import will be done at SPAMBOX start or if the option below is used.<br />
Imported files will be renamed to *.OK !<br />For example: mysql/dbimport<br />
<span class="negative">If you plan to import in to BerkeleyDB - do the following:<br />
- set DisableSMTPNetworking to on
- set all needed DB parameters
- collect your import files
- restart assp and wait until all imports are finished
- restart assp
- set DisableSMTPNetworking to off </span>

# variable - preventBulkImport
msg005880=Prevent Bulk Import
msg005881=Do not select, if you are using MySQL! Doing a Bulk-Import of data, SPAMBOX modifies the properties of table columns. This could result in breaking some configured DB features like DB-replication in MSSQL. If selected, SPAMBOX will do a line per line insert/update (which takes much more time) without modifying the tables properties.

# variable - fillUpImportDBDir
msg008990=Fill the Import Folder
msg008991=If set to a value between 1 and 9, the corresponding backup file for any list/hash that configured to use a database will be copied from the backupDBDir to the importDBDir. The resulting file name will has an extension of ".rpl", so a possible import will replace the current table content. If a value of "L" is defined, the last backup will be used. Possible values are L or 1 - 9 or blank. Any configured value will be reset to blank after the copy is finished.

# variable - ImportMysqlDB
msg005890=import all files from the importDBDir Directory in to the database - now.
msg005891=All files from the "importDBDir" will be imported in to database . Please define the directory above, before using the import!<br />
<input type=button value="Apply Changes and Run DB Import Now (if checked)" onclick="document.forms['SPAMBOXconfig'].theButtonX.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" />&nbsp;<input type=button value="Refresh Browser" onclick="document.forms['SPAMBOXconfig'].theButtonRefresh.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" />

# variable - exportDBDir
msg005900=export directory
msg005901=The folder to export the used tables of the database.<br />The schema of the files is the assp-schema.<br />Ten versions of exports are available!<br />For example: mysql/dbexport

# variable - ExportMysqlDB
msg005910=export all tables from the database
msg005911=All table of the database will be exported to the "exportDBDir" Directory. Please define the Directory above, before using the export!<br />
<input type=button value="Apply Changes and Run DB Export Now (if checked)" onclick="document.forms['SPAMBOXconfig'].theButtonX.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" />&nbsp;<input type=button value="Refresh Browser" onclick="document.forms['SPAMBOXconfig'].theButtonRefresh.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" />

# variable - backupDBDir
msg005920=backup directory
msg005921=The folder to backup the used tables of the database.<br />The schema of the files is the assp-schema.<br />Ten versions of backups are available!<br />For example: mysql/dbbackup

# variable - backupDBInterval
msg005930=backup database Interval <sup>s</sup>
msg005931=backup the database (all tables used by assp at the time)  every this hours.<br />
  Defaults to 2 hours.

# variable - copyDBToOrgLoc
msg005940=copy the last DB-backup to the original location
msg005941=If DB-backup is enabled, the last backupversion is also copied to the original location.<br />
  If database connections are failed, while SPAMBOX is running, SPAMBOX will switch over to use these files instead of DB-tables.<br />
  DB-tables will not be imported from here, this must be done from the importDBDir!

# variable - logfile
msg005950=SPAMBOX Logfile
msg005951=Blank if you don't want a log file. Change it to maillog.log if you don't want auto rollover.
  NOTE: Changing this field requires restarting SPAMBOX before changes take effect.

# variable - MaxLogAge
msg005960=Max Age of Logfiles
msg005961=The maximum file age in days of logfiles. If a logfile is older than this number in days, the file will be deleted. Default is 0 - recommended is 30. A value of 0 disables this feature and no logfile will be deleted because of its age.

# variable - MaxLogAgeSchedule
msg005970=Runtime MaxLogAge <sup>s</sup>
msg005971=Runtime hour for deleting old logfiles. Set a number between 0 and 23. 0 means midnight, 1 is default.

# variable - pidfile
msg005980=PID File
msg005981=Blank is not a valid value!<br />
  You have to restart SPAMBOX before you get a pid file in the new location.<br />
  This file is used to detect a clean shutdown of SPAMBOX - in this case it does not exist at startup!
  <hr /><div class="menuLevel1">Notes On File Path</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/filepath.txt',3);" />

# heading - Collecting

# variable - spamaddresses
msg005990=Spam Collect Addresses*
msg005991=Mail to any of these addresses are always spam and will contribute to the spam-collection unless from someone on the whitelist. Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com). The addresses are not validated, they  are readdressed to ccallspam, however you can supersede this by putting a valid address into sendAllCollect below.

# variable - sendAllCollect
msg006000=Catchall Address for Collect Addresses
msg006001=SPAMBOX will readdress messages addressed to Collect Addresses to this address.<br />
  For example: collect@mydomain.com

# variable - DoNotBlockCollect
msg006010=Use Collect Addresses for Testing Your Environment
msg006011=If set SPAMBOX will block messages from Collect Addresses <b>after</b> other checks are performed. That may help to test and control activated filters.

# variable - UseTrapToCollect
msg006020=Use Penalty Trap Addresses To Collect
msg006021=If set SPAMBOX will use addresses from DoPenaltyMakeTraps and spamtrapaddresses to collect spams.

# variable - noCollecting
msg006030=Do Not Collect Messages from/to these Addresses*
msg006031=Accepts specific addresses (user@domain.com), user parts (user) or entire domains (@domain.com).

# variable - noCollectRe
msg008930=Do Not Collect Messages - Content Based*
msg008931=If the content of a collected file (incl. X-SPAMBOX-... headers) matches this regular expression, it will be deleted from the collection after the mail is completely processed.<br />
  If the SPAMBOX_ARC plugin is used, the file will be deleted from the collection after it was archived. This is the only "no collect" option which removes an already collected file, all other options will prevent assp from creating a collection file - if set to "no collection". The check is limited to MaxBytes or at max 100000 Bytes.

# variable - DoNotCollectRedRe
msg006040=Do Not Collect RedRe Matching Mails
msg006041=Mails (Spam/Ham) matching Red Regex (redRe) will not be stored in the collection folders.

# variable - DoNotCollectRedList
msg006050=Do Not Collect Redlisted Mails
msg006051=Mails (Spam/Ham) matching  Redlist will not be stored in the collection folders.

# variable - DoNotCollectBounces
msg006060=Do Not Collect Bounced Mails
msg006061=Mails matching &lt;Bounce Senders&gt; will not be collected.

# variable - NoMaillog
msg006070=Don't Collect Mail
msg006071=Check this if you're using Whitelist-Only and don't care to save mail to build the Bayesian database.

# variable - MaxFiles
msg006080=Max Files
msg006081=If you're not using subjects as file names ( UseSubjectsAsMaillogNames ), this is the maximum number of files to keep in each collection (spam &amp; nonspam)<br />
  It's actually less than this -- files get a random number between 1 and MaxFiles.

# variable - FilesDistribution
msg006090=Files Distribution
msg006091=This defines how file names are chosen in each collection. If set to 1, names are uniformly distributed. If set between 0.01 and 0.99, names distribution is exponential -- files get lower numbers more frequently. This prevents from corpus being refreshed too quickly, especially when MaxFiles is set to low value (ex. 3000). This setting is ignored if UseSubjectsAsMaillogNames is set to ON.<br />
 Recommended: 0.5, Default: 1

# variable - UseSubjectsAsMaillogNames
msg006100=Use Subject as Maillog Names
msg006101=You can turn this on to help you manually identify mail in your spam and non-spam collections. This will prevent SPAMBOX from controlling the number of files in your collections(-> MaxFiles ). It is recommended to switch on MaintBayesCollection and to setup MaxNoBayesFileAge to your needs, if you have switched on this option.

# variable - MaxAllowedDups
msg008660=Max Number of Duplicate File Names
msg008661=The maximum number of logged files with the same filename (subject) that are stored in the spam folder (spamlog), if UseSubjectsAsMaillogNames is selected. Default is 0. A low value reduces the number of possibly duplicate mails, assuming that mails with the same subject will have the same content. A value of 0 disables this feature. If this number of files with the same filename is reached, the oldest file with the same subject will be moved to the discarded folder, which has to be defined ( in addition to spamlog ) for this feature to work.

# variable - AllowedDupSubjectRe
msg008670=Regular Expression to Identify allowed duplicate Subjects*
msg008671=Messages their subject matches this regular expression will be collected regardless the setting in MaxAllowedDups .

# variable - UseUnicode4MaillogNames
msg006110=Use Unicode to build Maillog Names
msg006111=If you have switched on UseSubjectsAsMaillogNames and your default (local language) characterset (please setup ConsoleCharset) needs 8 Bit like "KOI8-r","CP-866","Windows-1251","Windows-1252","ISO-8859-X","X-Mac-Cyrillic","JIS_X0201" or any other (or is UTF-8) - and you want to have readable filenames in the maillog and on the console screen, you can switch on this option. The resolution of some characters written to the console could be incorrect depending on your operating system. This requires an installed <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> module in PERL.<br />
  If in addition the module <a href="http://search.cpan.org/search?query=Win32::Unicode" rel="external">Win32::Unicode</a> is installed on windows platforms, assp will generate unicode filenames for the collected corpus files (already on nix systems).

# variable - UseUnicode4SubjectLogging
msg008920=Use Unicode to build Subjects in Maillog
msg008921=If you have switched on UseUnicode4SubjectLogging and your default (local language) characterset (please setup ConsoleCharset) needs 8 Bit like "KOI8-r","CP-866","Windows-1251","Windows-1252","ISO-8859-X","X-Mac-Cyrillic","JIS_X0201" or any other (or is UTF-8) - and you want to have a readable subject in the maillog and on the console screen, you can switch on this option. The resolution of some characters written to the console could be incorrect depending on your operating system. This requires an installed <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> module in PERL.

# variable - MaxFileNameLength
msg006130=Max Length of File Names
msg006131=The maximum character count that is used from the mail subject to build the file name of the logged file, if UseSubjectsAsMaillogNames is selected. This could be useful, if your mail clients having trouble to build the resend file name (right button - URL) correctly in block reports. Every non printable character will be replaced by a 4 byte string in this link.

# variable - MaintBayesCollection
msg006140=Maintenance for Bayesian Collection
msg006141=Set this to on, if you want SPAMBOX to run a maintenance tasks on the bayesian collection folders ( spamlog , notspamlog , correctedspam , correctednotspam ). SPAMBOX will delete the oldest files until the number of files per folder reaches MaxFiles. If you want SPAMBOX to delete files because of their age instead of the number of files ( MaxFiles ), setup MaxBayesFileAge and/or MaxCorrectedDays to your needs.<br />
  MaintBayesCollection is useful, if UseSubjectsAsMaillogNames is set to on and doMove2Num is set to off, because in this case the number of files in every collection folder will grow infinite. If set to On, the rebuildspamdb task will also do the cleanup.

# variable - MaxBayesFileAge
msg006150=Max Age of Bayes Files
msg006151=The maximum file age in days of every file in every bayesian collection folder ( spamlog , notspamlog ). If MaintBayesCollection is set to on and a file is older than this number in days, the file will be deleted. Default is 31. A value of 0 disables this feature and no file will be deleted because of its age. To use different values for spamlog and notspamlog, define two space separated values - the first for spamlog and the second for notspamlog, like '30 60'. The rebuildspamdb task will ignore files older than this days (if not zero).<br />
  <span class = "negative">It is not recommended to enable this option, if you use the bayesian engine of SPAMBOX and doMove2Num is set to ON.  A better solution in this case is, to have MaintBayesCollection take care of deletions (by date) and change this setting to 0.</span>

# variable - MaxCorrectedDays
msg008590=Max Corrected File Age
msg008591=This is the number of days a error report will be kept in the correctedspam and correctednotspam folders. These folders are the longterm memory of SPAMBOX, therefore the default is 10000 days (more than 27 years). To use different values for correctedspam and correctednotspam, define two space separated values - the first for correctedspam and the second for correctednotspam, like '1000 1500'. The rebuildspamdb task will ignore files older than this days (if not set to zero).

# variable - MaxNoBayesFileAge
msg006160=Max Age of non Bayes Files
msg006161=The maximum file age in days of every file in every non bayesian collection folder ( incomingOkMail , discarded , viruslog ). If defined and a file is older than this number in days, the file will be deleted. Default is 31. A value of 0 disables this feature and no file will be deleted because of its age. To use different values for incomingOkMail and discarded and viruslog, define three space separated values - the first for incomingOkMail and the second for discarded and the third for viruslog, like '31 45 60'

# variable - MaxFileAgeSchedule
msg006170=Runtime for MaintBayesCollection and MaxNoBayesFileAge <sup>s</sup>
msg006171=Runtime hour for deleting old collected files (bayes and non bayes). Set a number between 0 and 23. 0 means midnight, 1 is default. If empty a cleanup will not be scheduled. This could be fine, if a rebuildspamdb is scheduled, which will also do the cleanup based on the settings of MaintBayesCollection , MaxBayesFileAge and MaxCorrectedDays - but it will not maintain incomingOkMail , discarded and viruslog based on MaxNoBayesFileAge !

# variable - MaxBytes
msg006180=Max Bytes
msg006181=How many bytes of the message body will SPAMBOX look at - the message header is always included in all checks? Mails stored in the collecting folders will be truncated to this size. The average of Ham messages (message body) is 6K, the average of Spam messages is 3K. Usually the spam folder will be filled quicker than the notspam folder, therefore set this value to 4000 to get more wordpairs per Ham Message. When both folders are close to the maxfiles limit, reduce it to 3000.

# variable - StoreCompleteMail
msg006190=Store the Complete Mail
msg006191=If set, SPAMBOX will look at MaxBytes, but if possible it will store the complete mail up to the number of bytes configured. This could be useful for example, if you want resend blocked messages. Be careful using this option, your disk could be filled up very fast!

# variable - MaxBytesReports
msg006200=Error Max Bytes
msg006201=How many bytes of an error report message will SPAMBOX look at. For example: 10000. Set this to zero for no limit.

# variable - NonSpamLog
msg006210=Non Spam
msg006211=Where to store whitelisted/local non spam messages. Default: notspam folder ( notspamlog ).

# variable - baysNonSpamLog
msg006220=OK Mail
msg006221=Where to store non spam (message ok) messages. These are messages which are considered as HAM, but should not stored in the standard HAM folder because of our policy to use only confirmed HAM messages (whitelisted or local) for SpamDB. Set incomingOkMail accordingly if you choose 'okmail folder'. Default: no collection

# variable - SpamLog
msg006230=Store Spam
msg006231=Set this to 'disabled' if you do not want to store any Spam regardless of settings in. Default: enabled (store in folder spamlog ).

# variable - noProcessingLog
msg006240=NoProcessing OK Mails
msg006241=Where to store noprocessing OK mails.

# variable - npAttachLog
msg006250=NoProcessing rejected Attachments
msg006251=Where to store noprocessing rejected mail+attachments. Recommended: discard folder ( discarded ) &amp; sendAllSpam

# variable - wlAttachLog
msg006260=Whitelisted rejected Attachments
msg006261=Where to store whitelisted rejected mail+attachments. Recommended: discard folder ( discarded ) &amp; sendAllSpam

# variable - extAttachLog
msg006270=External rejected Attachments
msg006271=Where to store external rejected mail+attachments. Recommended: discard folder ( discarded ) &amp; sendAllSpam

# variable - SpamVirusLog
msg006280=Virus Infected
msg006281=Where to store virus infected messages. Recommended: quarantine ( quarantine )

# variable - spamBombLog
msg006290=Spam Bombs
msg006291=Where to store spam bombs. Recommended: discard folder ( discarded )

# variable - scriptLog
msg006300=Scripts
msg006301=Where to store scripted messages. Recommended: spam folder   ( spamlog )  &amp; sendAllSpam

# variable - blDomainLog
msg006310=Blacklisted Domains
msg006311=Where to store blacklisted domain messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - spamHeloLog
msg006320=Blacklisted Helos
msg006321=Where to store spam helo messages. Recommended: discard folder ( discarded ) &amp; sendAllSpam

# variable - forgedHeloLog
msg006330=Forged Helos
msg006331=Where to store forged helo messages. Recommended: no collection

# variable - invalidHeloLog
msg006340=Invalid Helos
msg006341=Where to store invalid helo messages. Recommended: discard folder ( discarded )

# variable - spamBucketLog
msg006350=Spam Collect Addresses
msg006351=Where to store mails addressed to Spam Collect Addresses. Recommended: spam folder ( spamlog )

# variable - baysSpamLog
msg006360=Bayesian Spams
msg006361=Where to store Bayesian spam messages. Recommended: discard folder ( discarded ) &amp; sendAllSpam

# variable - SPFFailLog
msg006370=SPF Failures
msg006371=Where to store SPF Failure spam messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - RBLFailLog
msg006380=DNSBL Failures
msg006381=Where to store DNSBL Failure spam messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - URIBLFailLog
msg006390=URIBL Failures
msg006391=Where to store URIBL Failure spam messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - SRSFailLog
msg006400=SRS Failures
msg006401=Where to store SRS Failure (not signed bounces) spam messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - spamPTRLog
msg006410=Missing/Invalid Pointer 
msg006411=Where to store Missing/Invalid Pointer rejected messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - spamMXALog
msg006420=Missing MX Record 
msg006421=Where to store Missing MX record rejected messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - spamISLog
msg006430=Invalid Local Sender
msg006431=Where to store messages from a local domain with an unknown userpart. Recommended: no collection

# variable - spamSBLog
msg006440=Blocked Country
msg006441=Where to store messages from a blocked country. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - spamMSLog
msg006450=Message Limit Blocks
msg006451=Where to store Message Scoring Limit rejected messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - spamPBLog
msg006460=PenaltyBox Blocks
msg006461=Where to store PB rejected messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - DKIMLog
msg006470=DKIM failed
msg006471=Where to store DKIM rejected messages. Recommended: spam folder ( spamlog ) &amp; sendAllSpam

# variable - BackLog
msg006480=Backscatter check failed
msg006481=Where to store backscatter (MSGID-signing, BATV, DNS-Backscatter) rejected messages. Recommended: no collection

# variable - freqNonSpam
msg006490=Non Spam Collection Frequency
msg006491=Store every n'th non spam message. If you set the value to 10 then every 10th message is logged. These frequency settings are for SPAMBOX users with a mature installation who experience heavy mail or spam volumes. Enter a larger value if the non spam corpus is being refreshed too quickly. Default Value = 1, log every message. Leave it at the default value 1, if you use BlockReports.

# variable - freqSpam
msg006500=Spam Collection Frequency
msg006501=Store every n'th spam message. The same as for non spam but helps prevent spam corpuses being skewed by flooding. It is recommended that this be set depending on spam volume. Default value = 1, log every message. Leave it at the default value 1, if you use BlockReports.<br /><hr /><div class="menuLevel1">Notes On Collecting</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/collecting.txt',3);" />

# heading - Logging

# variable - Notify
msg006510=Notification Email To
msg006511=Email address(es) to which you want SPAMBOX to send a notification email per default, if a matching log entry ( NotifyRe , NoNotifyRe ) is found. Separate multiple entries by comma ",".<br />
  NOTICE: that groups are not allowed to be used here!

# variable - NotifyRe
msg006520=Do Notify, if log entry matches*
msg006521=Regular Expression to identify loglines for which a notification message should be send.<br />
  useful entries are:<br />
  Info: new assp version - to get informed about new available assp versions<br />
  info: autoupdate: new assp version - to get informed about an autoupdate of the running script<br />
  adminupdate: - for config changes<br />
  admininfo: - for admin information<br />
  option list file: - for option file reload<br />
  error: - for any error<br />
  warning: - for any warning<br />
  restart - to detect a SPAMBOX restart<br />
  notification: too many recipients - for local frequency abuse once per day and sender<br />
  warning: too many recipients - for every local frequency abuse<br />
  MainThread started - to detect a start of SPAMBOX<br />
  Admin connection - for GUI logon<br /><br />
  You may define a comma separated list (after '=>') of recipients in every line, this will override the default recipient defined in 'Notify'.<br />
  for example: adminupdate:=>user1@yourdomain.com,user2@yourdomain.com.<br />
  NOTICE: that groups are not allowed to be used for the second parameter!<br />
  As third parameter after a second ('=>') you can define the subject line for the notification message.<br />
  for example: adminupdate:=>user1@yourdomain.com,user2@yourdomain.com=>configuration was changed<br />
  or: adminupdate:=>=>configuration was changed.

# variable - NoNotifyRe
msg006530=Do NOT Notify, if log entry matches*
msg006531=Regular Expression to identify loglines for which no notification message should be send.<br />
  for example:<br />
  user root - if root does anything<br />
  \[root.*?\] - if root changes the config

# variable - fileLogging
msg006540=File name logging
msg006541=Show file names of collected spam/notspam in log. Will be automatically set to on, if inclResendLink is not set to disabled.

# variable - subjectLogging
msg006550=Subject logging
msg006551=Show subject of mail in log 

# variable - subjectStart
msg006560=Subject Start Delimiter
msg006561=Start delimiter of subject in log 

# variable - subjectEnd
msg006570=Subject End Delimiter
msg006571=End delimiter of subject in log

# variable - regexLogging
msg006580=Regex Match logging
msg006581=Show matching regex in log, note that all lists (like eg. noprocessing-list) are used as regex. 

# variable - WorkerLogging
msg006590=Worker logging
msg006591=Show Workername in Log. 

# variable - ipmatchLogging
msg006600=IP Matches Logging
msg006601=Enables logging of IP addresses matches in the maillog. Will show a comment instead of the range if there is text after the IP ranges (and before any number sign)  eg. 182.82.10.0/24 AOL

# variable - slmatchLogging
msg006610=Logging Address Matches
msg006611=Enables logging of address matches in the maillog.

# variable - AddRegexHeader
msg006620=Add RegEx Match Header
msg006621=

# variable - uniqeIDLogging
msg006630=Unique ID logging
msg006631=Add unique string to log  

# variable - uniqueIDPrefix
msg006640=Prepend Unique ID logging
msg006641=Prepend ID. For example: m1-

# variable - tagLogging
msg006650=Spam Tag Logging
msg006651=Add spam tag to log.

# variable - replyLogging
msg006660=SMTP Status Code Reply Logging
msg006661=

# variable - expandedLogging
msg006670=Logging Records include IP &amp; MailFrom
msg006671=

# variable - sysLog
msg006680=SYSLOG Centralized Logging
msg006681=Enables logging to UNIX or Network Syslog.<br />
  Needs the Perl module Sys::Syslog for local UNIX/LINUX or Windows Eventlog logging.<br />
  If enabled and useSysSyslog is enabled and any of sysLogIp or sysLogPort is not set, local UNIX/LINUX or Windows Eventlog logging is used. It is not recommended to log to the Windows Eventlog!

# variable - sysLogPort
msg006690=Syslog Port (UDP)
msg006691=Port for Network Syslog logging.

# variable - SysLogFac
msg006700=Syslog Facility
msg006701=Syslog Facility. Valid are kern, user, mail, daemon, auth, syslog, lpr, news, uucp, cron, authpriv, ftp, local0, local1, local2, local3, local4, local5, local6

# variable - sysLogIp
msg006710=Syslog IP
msg006711=IP Address or hostname of your Network Syslog Daemon for Syslog logging.

# variable - spamboxLog
msg006720=SPAMBOX local logging
msg006721=SPAMBOX manages local logging. The logs (logfile) are stored inside the directory where SPAMBOX is installed.

# variable - LogRollDays
msg006730=Roll the Logfile How Often?
msg006731=SPAMBOX closes and renames the log file after this number of days. Leave this at the default value 1, if you use BlockReporting.

# variable - LogNameDate
msg006740=LogName Date Format
msg006741=The standard name for the logfile is YY-MM-DD.maillog.txt, use this option to set it to your needs.<br />
 possible values are:<br />
 YY-MM-DD (default)<br />
 YYYY-MM-DD<br />
 MM-DD

# variable - LogDateFormat
msg008690=Date/Time Format in LogDate
msg008691=Use this option to set the logdate. The default value is 'MMM-DD-YY hh:mm:ss'. The following (case sensitive !) replacements will be done:<br /><br />
 YYYY - year four digits<br />
 YY - year two digits<br />
 MMM - month (three characters) alpha numeric - like Oct Nov Dec<br />
 MM - month numeric two digits<br />
 DDD - day (three characters) alpha numeric - like Mon Tue Fri<br />
 DD - day numeric two digits<br />
 hh - hour two digits<br />
 mm - minute two digits<br />
 ss - second two digits<br /><br />
 <b>NOTICE: If you change this value, BlockReports and Griplist-uploads will not work for log entries in the past (from now)!</b><br />
 <span class="positive">A value has to be defined for every part of the date/time, the date must be the first part. Allowed separators in date part are '_ -./' - in time part '-_.:' .</span>

# variable - LogDateLang
msg008700=Date/Time Language
msg008701=Select the language for the day and month if LogDateFormat contains DDD and/or MMM.<br />
  <b>NOTICE: If you change this value, BlockReports and Griplist-uploads will not work for log entries in the past (from now)!</b>

# variable - silent
msg006750=Silent Mode
msg006751=Checked means don't print log messages to the console. AsADaemon overrides this.

# variable - debug
msg006760=General Debug Mode
msg006761=Checked sends debugging info to a .dbg file. Debug is enabled for all Threads, all the time! debugIP and debugRE will be ignored!
  Leave this unchecked unless there is a program error you are trying to track down.

# variable - debugIP
msg006770=Debug these IPs*
msg006771=Enter IP addresses that you want to be debugged, separated by pipes (|). The local and the remote IP of the connection will be checked!<br />
  Not blank sends debugging info to a .dbg file. Leave this blank unless there is a program error you are trying to track down.<br />
  This can be IP address of the SMTP service monitoring agent. For example:  127.0.0.1|172.16.

# variable - debugRe
msg006780=Regular Expression to Identify Debug-Messages*
msg006781=Put anything here to identify messages that you want to be debugged.  Not blank sends debugging info to a .dbg file. Leave this blank unless there is a program error you are trying to track down.

# variable - debugCode
msg006790=Run this Code to switch on Debug
msg006791=Put a code line here, to detect messages that you want to debug. The code line has to return 0 or 1. A return of 1 will switch on debug.<br />
  for example:<br /><br />
  $Con{$fh}->{isbounce}<br />
  This code line will switch on debug for all bounce messages.<br /><br />
  ($Con{$fh}->{relayok} && $Con{$fh}->{isbounce})<br />
  This code line will switch on debug for all outgoing bounce messages.<br /><br />
  ($Con{$fh}->{ispip} && $Con{$fh}->{cip} =~ /^193\.2\.1\./)<br />
  This code line will switch on debug if the messages is from ISP and the IP of the server that was connected to the ISP begins with 193.2.1. .<br /><br />
  To use this option, you need to know the internal SPAMBOX variables and their usage!

# variable - debugNoWriteBody
msg006800=Do not write Body to Debug
msg006801=If selected, the sent message body data will not be written to the debug file.

# variable - DataBaseDebug
msg006810=Database Connection Debug Mode
msg006811=Select to debug the database connections!

# variable - ConTimeOutDebug
msg006820=Connection Timeout Debug Mode
msg006821=Select to debug SMTP connections that are running in to timeout!

# variable - IgnoreMIMEErrors
msg006830=Ignore MIME Errors
msg006831=If selected - Errors, based on wrong email MIME contents, will not be written to log!

# variable - noLog
msg006840=Don't Log these IPs*
msg006841=Enter IP addresses that you don't want to be logged, separated by pipes (|). The local and the remote IP of the connection will be checked!<br />
  This can be IP address of the SMTP service monitoring agent. For example:  127.0.0.1|172.16.

# variable - noLogRe
msg006850=Regular Expression to Identify NoLog-Messages*
msg006851=Put anything here to identify messages that you don't want to be logged.

# variable - allLogRe
msg006860=Regular Expression to Identify Messages from/to Problematic Addresses *
msg006861=Put anything here to identify messages from/to addresses you want to look at for problem solving. Messages identified will also be set to StoreCompleteMail.

# variable - noLogLineRe
msg008680=Regular Expression to Identify skipped Log Lines*
msg008681=Put anything here to identify log Lines that you don't want to be logged.

# variable - ConnectionLog
msg006870=Connections Logging
msg006871=

# variable - SessionLog
msg006880=Session Limit Logging
msg006881=

# variable - denySMTPLog
msg006890=Enables Logging for 'Deny SMTP Connections From'
msg006891=

# variable - RWLLog
msg006900=Enable RWL logging
msg006901=

# variable - LDAPLog
msg006910=Enable LDAP logging
msg006911=ATTENTION: diagnostic will possibly write credential information in clear text to the log!

# variable - VRFYLog
msg006920=Enable VRFY logging
msg006921=

# variable - ValidateUserLog
msg006930=Enable User Validation logging
msg006931=

# variable - PenaltyLog
msg006940=Enable PenaltyBox logging
msg006941=

# variable - PenaltyExtremeLog
msg006950=Enable PenaltyBox logging
msg006951=

# variable - MessageLog
msg006960=Enable Message Scoring logging
msg006961=

# variable - MSGIDsigLog
msg006970=Enable Message-ID signing logging
msg006971=

# variable - BacksctrLog
msg006980=Enable DNS-Backscatter detection logging
msg006981=

# variable - BATVLog
msg006990=Enable BATV logging
msg006991=

# variable - ValidateSenderLog
msg007000=Enable Validate Sender Logging
msg007001=

# variable - SenderBaseLog
msg007010=Enable SenderBase Logging
msg007011=

# variable - DelayLog
msg007020=Enable Greylisting/Delaying logging
msg007021=

# variable - BombLog
msg007030=Enable Bomb logging
msg007031=If set to verbose, the reporting to the logfile and the X-SPAMBOX- scoring header will show the complete list of all hits. Otherwise only the highest match will be shown.

# variable - AttachmentLog
msg007040=Enable Attachment logging
msg007041=

# variable - SPFLog
msg007050=Enable SPF logging
msg007051=

# variable - RBLLog
msg007060=Enable DNSBL logging
msg007061=

# variable - URIBLLog
msg007070=Enable URIBL logging
msg007071=

# variable - ScanLog
msg007080=Enable ClamAV logging
msg007081=

# variable - DKIMlogging
msg007090=Enable DKIM logging
msg007091=

# variable - WorkerLog
msg007100=Enable thread action logging
msg007101=

# variable - SignalLog
msg007110=Enable central Perl-signal logging
msg007111=nolog will handle the Perl signals without any output (this should be never set!!!), standard will write a message to log, verbose will write a message to log and to file debugSignal.txt

# variable - BayesianLog
msg007120=Enable Bayesian Logging
msg007121=Enables verbose logging of  Bayesian checks in the maillog.

# variable - ConvLog
msg007130=Enable Conversion logging
msg007131=

# variable - MaintenanceLog
msg007140=Enable Maintenance logging
msg007141=

# variable - PerformanceLog
msg007150=Enable Performance logging
msg007151=

# variable - ReportLog
msg007160=Enable Report logging
msg007161=

# variable - ScheduleLog
msg007170=Enable Scheduler logging
msg007171=

# variable - SNMPLog
msg009420=Enable SNMP logging
msg009421=

# variable - Showmaxreplies
msg007180=Show All Possible Hits 
msg007181=Show hits until maxreplies instead of stopping at maxhits (RBL,URIBL,RWL).

# variable - RegExLength
msg007190=RegEx Length in Log
msg007191=Defines how many bytes of a matching Regular Expression will be shown in the log<br />
  Some matching Regular Expressions are too long for one line. Default: 32

# variable - sendNoopInfo
msg007200=Send NOOP Info
msg007201=Checked means you want SPAMBOX to send a "NOOP Connection from IP" message to your SMTP server.
  <br /><hr />
  <div class="menuLevel1">Notes On Logging</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/logging.txt',3);" />

# heading - LDAP Setup <a href="http://sourceforge.net/p/assp/wiki/LDAP" target=wiki><img height=12 width=12 src="get?file=images/info.png" alt="LDAP" /></a>

# variable - LDAPHost
msg007210=LDAP Host(s)
msg007211=Enter the DNS-name(s) or IP address(es) of the server(s) that run(s) the <a href="http://ldap.perl.org/FAQ.html">LDAP</a> database. Second entry is backup. For example: localhost. Separate entries with pipes: LDAP-1.domain.com|LDAP-2.domain.com . To use a different than the default LDAP port, define host:port.

# variable - DoLDAPSSL
msg007220=Use SSL with LDAP (ldaps)
msg007221=SPAMBOX will use 'ldaps (SSL port 636)' instead of ldap (port 389) or 'ldaps (TLS over port 389)'. The Perl module <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a> must be installed to use SSL or TLS!

# variable - LDAPtimeout
msg007230=LDAP Query Timeout
msg007231=timeout when connecting to the remote server. The default is 15 seconds.

# variable - LDAPLogin
msg007240=LDAP Login
msg007241=Most LDAP servers require a login and password before they allow queries.<br />Enter the DN specification for a user with sufficient permissions here.<br />For example: cn=Administrator,cn=Users,DC=yourcompany,DC=com

# variable - LDAPPassword
msg007250=LDAP Password
msg007251=Enter the password for the specified LDAP login here.

# variable - LDAPVersion
msg007260=LDAP Version
msg007261=Enter the version for the specified LDAP here.

# variable - ldLDAPRoot
msg009350=LDAP Root container for Local Domains
msg009351=The LDAP lookup will use this container and all sub-containers to match the local domain query.<br />The literal DOMAIN is replaced by the domain part of SMTP recipient (eg. domain.com) during the search.<br />For example: DC=yourcompany,DC=com.<br />If you use DOMAIN here, you must check "LDAP failures return false" below or non local domains will be treated as local. If not defined, LDAPRoot will be used.

# variable - ldLDAPFilter
msg007280=LDAP Filter for Local Domains
msg007281=This filter is used to query the LDAP database. This strongly depends on the LDAP structure.<br />The filter must return an entry if the domain must be relayed.<br />
  The literal DOMAIN is replaced by the domain name during the search.<br />
  for example: (&amp;(|(|(|(|(&amp;(objectclass=user)(objectcategory=person))(objectcategory=group))(objectclass=publicfolder))(!(objectclass=contact)))(objectclass=msExchDynamicDistributionList))(proxyaddresses=smtp:*@DOMAIN))

# variable - LDAPRoot
msg007270=LDAP Root container for Local Addresses
msg007271=The LDAP lookup will use this container and all sub-containers to match the local email address query.<br />The literal DOMAIN is replaced by the domain part of SMTP recipient (eg. domain.com) during the search.<br />For example: DC=yourcompany,DC=com.<br />If you use DOMAIN here, you must check "LDAP failures return false" below or non local domains will be treated as local.

# variable - LDAPFilter
msg007290=LDAP Filter for Local Addresses
msg007291=This filter is used to query the LDAP database. This strongly depends on the LDAP structure.<br />The filter must return an entry if the recipient address matches with that of any user.<br />The literal EMAILADDRESS is replaced by the fully qualified SMTP recipient (eg. user@domain.com) during the search.<br />The literal USERNAME is replaced by the user part of SMTP recipient (eg. user) during the search.<br />The literal DOMAIN is replaced by the domain part of SMTP recipient (eg. domain.com) during the search.<br />For example: (proxyaddresses=smtp:EMAILADDRESS) or (|(mail=EMAILADDRESS)(mailaddress=EMAILADDRESS)) or<br />
 (&amp;(|(|(|(|(&amp;(objectclass=user)(objectcategory=person))(objectcategory=group))(objectclass=publicfolder))(!(objectclass=contact)))(objectclass=msExchDynamicDistributionList))(proxyaddresses=smtp:EMAILADDRESS))

# variable - LDAPcrossCheckInterval
msg007300=Clean Up local LDAP/VRFY Database <sup>s</sup>
msg007301=Delete outdated entries from the LDAP/VRFY cache. Check the LDAP cache to the LDAP server and/or VRFY-MTA and delete not existing entries.<br />
  Defaults to 12 hours. Is only used, if ldaplistdb is defined in the database section!

# variable - LDAPShowDB
msg007310=Show local LDAP Database
msg007311=The directory/file with the LDAP cache database file. If you change ldaplistdb in section Filepath you must change it here too.

# variable - forceLDAPcrossCheck
msg007320=force to run LDAP/VRFY-CrossCheck - now.
msg007321=SPAMBOX will force to run an LDAP/VRFY-CrossCheck now!<br /><input type=button value="Apply Changes and Run LDAP VRFY-CrossCheck Now (if checked)" onclick="document.forms['SPAMBOXconfig'].theButtonX.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" />&nbsp;<input type=button value="Refresh Browser" onclick="document.forms['SPAMBOXconfig'].theButtonRefresh.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" />

# variable - MaxLDAPlistDays
msg007330=Max LDAP/VRFY cache Days
msg007331=This is the number of days an address will be kept on the local LDAP/VRFY cache without any email to this address.

# variable - ldapLocalIPAddress
msg010460=LDAP - Destination to Local IP-address Mapping*
msg010461=You need to use the "file: ..." option for this parameter!<br />
  On windows systems at least Vista/2008 is required!<br />
  On multihomed systems with multiple default gateways, it could be required to define the local IP address (source) used for outgoing LDAP connections.<br />
  This parameter allows to define local IP addresses used for specific targets (IP's or hosts) - based on the local address, the system will use the right gateway/interface.<br />
  Define one entry per line, comments (#) are allowed. The syntax for an entry is 'target=>local-IP'.<br />
  target could be any of: IP(4/6) network, IP(4/6) address, hostname, domain-name with wildcard (*).<br /><br />
  for example:<br />
  22.* => 192.168.1.1            # IP4 Network<br />
  2222:333:* => FE81::1          # IP6 Network<br />
  22.23.24.25 => 10.1.1.1,       # host IP4<br />
  1:2:3:4:5:6:7:8 => FE94::5     # host IP6<br />
  *.domain.com => 10.1.1.1       # domain<br />
  host.domain.com => 192.168.1.1 # host<br />
  * => 172.16.1.1                # default - if not defined, the system default is used<br /><br />
  NOTICE: assp will NOT check, that the local IP address is available and bound to a local interface! It will also NOT check the system routing table! YOU SHOULD KNOW WHAT YOU DO!

# variable - LDAPFail
msg007340=LDAP/VRFY failures return false
msg007341=If checked, when an error occurs in LDAP or VRFY lookups, the test fails.<hr /><div class="menuLevel1">Notes On LDAP </div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/ldap.txt',3);" />

# heading - DNS Setup

# variable - UseLocalDNS
msg007350=Use Local DNS
msg007351=Use system default local DNS Name Servers. To use system default local DNS Servers and the configured DNSServers (below), unselect this option and define the system default local DNS Servers in addition below!<br />
  To debug the DNS queries, switch on DebugSPF, even you don't use the SFF-check.<br />
  All configured or local DNS Name Servers will be checked <span class="negative">this may take some time if the servers are responding slow- please wait after apply changes!</span>

# variable - DNSReuseSocket
msg004770=Reuse DNS UDP Sockets
msg004771=If selected, assp will try to reuse DNS-UDP sockets as long as this is possible. Otherwise each DNS-query will create a new UDP socket for each DNS-Server. It is recommended to set this to on, because assp could use DNS-queries very extensive, which possibly forces the assp system and/or your DNS-servers to run out of available UDP sockets.

# variable - DNSResponseLog
msg007360=Show DNS Name Servers Response Time in Log
msg007361=You can use this to arrange DNSServers for better performance.

# variable - DNSServers
msg007370=DNS Name Servers*
msg007371=DNS Name Servers IP's to use for DNSBL(RBL), RWL, URIBL, PTR, SPF2, SenderBase, NS, and DMARC lookups. Separate multiple entries by "|" or leave blank to use system defaults. At least TWO DNS-servers should be defined or used by the system!<br /> For example: 208.67.222.222|208.67.220.220 (<a href="http://www.opendns.com/" rel="external">OpenDNS</a>).<br />
  A DNS-query for the domain 'sourceforge.net' is used per default to measure the speed of the used DNS-servers. If you want assp to use another domain or hostname for this, append '=>domain.tld' at the end of the line - like: 208.67.222.222|208.67.220.220=>myhost.com<br />
  To define the domain if you use the local DNS-servers 'UseLocalDNS' without defining any DNS-servers here, simply write '=>myhost.com'.<br />
  To debug the DNS queries, switch on DebugSPF, even you don't use the SFF-check.<br />
  NOTICE: don't define any public , ISP or open DNS-Servers (eg 208.67.222.222 208.67.220.220 8.8.8.8 8.8.4.4) , if you use any of the following assp checks: DNSBL(RBL), RWL, URIBL, SenderBase ! It is recommended in EVERY case to install (and to use) at least two local DNS-Servers!<br />
  All configured or local DNS Name Servers will be checked <span class="negative">this may take some time if the servers are responding slow - please wait after apply changes!</span>

# variable - DNSServerLimit
msg010490=Limit the Number of used DNS-Servers
msg010491=If set to a number &gt; zero, assp will use the defined number of fastest responding nameservers (DNSServers) for DNS queries.<br />
 Otherwise, all nameserver are used every time.<br />
 Notice: This value is not checked against the number of defined DNSServers - don't set nonsense here!

# variable - host2IPminTTL
msg009810=Minimum TTL used for config reload
msg009811=Minimum TTL used for config reload options, if hostnames are defined for any IP in regular expressions.

# variable - dnsLocalIPAddress
msg010450=DNS / WHOIS - Destination to Local IP-address Mapping*
msg010451=You need to use the "file: ..." option for this parameter!<br />
  On windows systems at least Vista/2008 is required!<br />
  On multihomed systems with multiple default gateways, it could be required to define the local IP (source) address used for DNS connections.<br />
  This parameter allows to define local IP addresses used for specific targets (IP's or hosts) - based on the local address, the system will use the right gateway/interface.<br />
  Define one entry per line, comments (#) are allowed. The syntax for an entry is 'target=>local-IP'.<br />
  target could be any of: IP(4/6) network, IP(4/6) address, hostname, domain-name with wildcard (*).<br /><br />
  for example:<br />
  22.* => 192.168.1.1            # IP4 Network<br />
  2222:333:* => FE81::1          # IP6 Network<br />
  22.23.24.25 => 10.1.1.1        # host IP4<br />
  1:2:3:4:5:6:7:8 => FE94::5     # host IP6<br />
  *.domain.com => 10.1.1.1       # domain<br />
  host.domain.com => 192.168.1.1 # host<br />
  * => 172.16.1.1                # default - if not defined, the system default is used<br /><br />
  NOTICE: assp will NOT check, that the local IP address is available and bound to a local interface! It will also NOT check the system routing table! YOU SHOULD KNOW WHAT YOU DO!

# variable - maxDNSRespDist
msg009800=Maximum DNS Response Time change
msg009801=Maximum DNS Server response time change in milliseconds. The query order of the used nameservers is changed, if any responds time exceeds this value.

# variable - DNStimeout
msg007380=DNS Query Timeout
msg007381=Global DNS Query Timeout for DNSBL, RWL, URIBL, PTR, SPF, MX and A record lookups. The default is 2 seconds.

# variable - DNSretry
msg007390=DNS Query Retry
msg007391=Global DNS Query Retry. Set the number of times to try the query. The default is 1.

# variable - DNSretrans
msg007400=DNS Query Retrans
msg007401=Global DNS Query Retransmission Interval. Set the retransmission interval. The default is 1.<br /><hr />
  <div class="menuLevel1">Notes On DNS Setup</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/DNSsetup.txt',3);" />

# heading - Server Setup

# variable - ConsoleCharset
msg007410=Charset for STDOUT and STDERR
msg007411=Set the characterset/codepage for the console output to your local needs. Default is "System Default" - default conversion. To display nonASCII characters on the console screen, setup UseUnicode4MaillogNames . <span class='negative'>Restart is required!</span>

# variable - normalizeUnicode
msg010420=Normalize Unicode to NFKC
msg010421=If set (which is the default and recommended), all regular expressions and both, the Bayesian and the HMM engine, are normalizing all characters in there setup and the checked content, according to unicode <a href="http://www.unicode.org/reports/tr15/ target=_blank">NFKC</a>.<br />
 In addition some extended (assp unique) unicode normalization is done for the unicode blocks "Enclosed Alphanumerics", "Enclosed Alphanumeric Supplement" , "Enclosed CJK Letters And Months" and "Enclosed Ideographic Supplement" - like: &#9312; &#9313; &#9331; &#9332; &#9352; &#9451; &#9461; &#9424; &#9398; &#127280; &#12809; &#12853; &#13003; &#127559;. Those characters are decomposed by compatibility, then recomposed by canonical equivalence (eg. to LATIN or CJK).<br />
 If this value is changed, it is recommended to run a rebuildspamdb.<br />
 This feature requires a Perl version 5.012000 (5.12.0) or higher.<br />
 NOTICE: the rebuildspamdb task will take up to double the time, if this feature is enabled and non-LATIN mails are processed!

# variable - send250OK
msg007430=Send 250 OK
msg007431=Set this checkbox if you want SPAMBOX to reply with '250 OK' instead of SMTP error code '554 5.7.1'. This will turn SPAMBOX in some form of tarpit. 

# variable - AsADaemon
msg007440=Run SPAMBOX as a Daemon
msg007441=In Linux/BSD/Unix/OSX fork and close file handles. <br />
 Similar to the command "perl spambox.pl &amp;", but better.<br />
 If "externally controlled" is selected, SPAMBOX simply ends and you have to restart assp from your daemon or watchdog script<br />
 If "run AutoRestartCmd on restart and wait" is selected, assp starts the OS command defined in AutoRestartCmd - assp will <b>NOT !</b> automatically terminate - the started command has to terminate/kill and to (re)start assp - like "service assp restart"!<br />
 If "run AutoRestartCmd on restart and exit" is selected, assp starts the OS command defined in AutoRestartCmd and terminates immediately!<br />
  <span class="negative"> requires SPAMBOX restart</span>

# variable - runAsUser
msg007450=Run as UID
msg007451=The *nix user name to assume after startup (*nix only). use the autorestart features careful, because any restart from inside SPAMBOX will be done with the permission of this user! <p><small><i>Examples:</i> assp, nobody</small></p>
  <span class="negative"> requires SPAMBOX restart</span>

# variable - runAsGroup
msg007460=Run as GID
msg007461=The *nix group to assume after startup (*nix only).<p><small><i>Examples:</i> assp, nobody</small></p>
  <span class="negative"> requires SPAMBOX restart</span>

# variable - ChangeRoot
msg007470=Change Root
msg007471=The new root directory to which SPAMBOX should chroot (*nix only). If blank, no chroot jail will be used. Note: if you use this feature, be sure to copy or link the etc/protocols file in your chroot jail.<br />
  <span class="negative"> requires SPAMBOX restart</span>

# variable - setFilePermOnStart
msg007480=Set SPAMBOX File Permission on Startup
msg007481=If set, SPAMBOX sets the permission of all SPAMBOX- files and directories at startup to full (0777) - without any function on windows systems!

# variable - checkFilePermOnStart
msg007490=Check SPAMBOX File Permission on Startup
msg007491=If set, SPAMBOX checks the permission of all SPAMBOX- files and directories at startup - all files must be writable for the running job - the minimum permission is 0600 - without any function on windows systems!

# variable - AutoRestart
msg007500=Automatic Restart after Exception
msg007501=If SPAMBOX detects a main exception and it runs not as service or daemon, it will try to restart it self automatically!  If running as daemon on nix/MAC , SPAMBOX uses the action defined in AsADaemon to restart.

# variable - AutoRestartAfterCodeChange
msg007510=Automatic Restart SPAMBOX on new or changed Script
msg007511=If selected, SPAMBOX will restart it self, if it detects a new or changed running script. An automatic restart will not be done, if SPAMBOX is not running as a service on windows or as daemon on linux/MAC, and AutoRestartCmd is not configured. If running as daemon on linux/MAC ( AsADaemon ) SPAMBOX simply ends - you have to restart assp from your daemon script. Leave this field empty to disable the feature. Possible values are 'immed and 1...23' . If set to 'immed', assp will restart within some seconds after a detected code change. If set to '1...23' the restart will be scheduled to that hour. A restart at 00:00 is not supported.

# variable - AutoUpdateSPAMBOX
msg008810=Auto Update the Running Script (spambox.pl)
msg008811=No action will be done if 'no auto update' is selected. You'll get a hint in the GUI (top) and a log line will be written, if a new version is availabe at the download location.<br />
  If 'download only' is selected and a new assp version is available, this new version will be downloaded to the directory /root/spambox/download (spambox.pl) and the syntax will be checked. The still running script will be saved version numbered to the download directory.<br />
  If 'download and install' is selected, in addition the still running script will be replaced by the new version.<br />
  Configure ( AutoRestartAfterCodeChange ), if you want the new version to become the active running script.<br />
  If this value is changed to 'download and install', the autoupdate procedure will be scheduled immediately.<br />
  If set, SPAMBOX (on windows systems with ActivePerl installations) will search for updated Perl modules in all registered PPM repositories &nbsp;&nbsp;<input type="button" value="new available perl modules" onclick="javascript:popFileEditor('notes/avail_perl_modules.txt',5);" /><br />
  The installation of some modules could require manual configuration and the installation fails or an upgrade is not recommended. In this case put the case sensitive module names (one per line) in the following file. &nbsp;&nbsp;<input type="button" value="never upgrade these modules" onclick="javascript:popFileEditor('files/noupgrade.txt',1);" /><br />
  If this value is set to 'download and install', SPAMBOX will try an autoupdate of the new available modules. It is possible, that some modules could not be installed, because the XS module parts are still in use. In this case follow the instruction - click the "new available perl modules" button above. To disable the automatic Perl module update - set "noModuleAutoUpdate" below.<br />
  Click this button to see the log file for the updated modules&nbsp;&nbsp;<input type="button" value="module upgrade log" onclick="javascript:popFileEditor('notes/upgraded_Perl_Modules.log',1);" /><br />
  The perl module <a href="http://search.cpan.org/dist/Compress-Zlib/" rel="external">Compress::Zlib</a> is required to use this feature.

# variable - noModuleAutoUpdate
msg007900=No Automatic Perl Module update
msg007901=If set, SPAMBOX will skip the automatic Perl module update.

# variable - AutoRestartCmd
msg007520=OS-shell command for AutoRestart
msg007521=The OS level shell-command that is used to autorestart SPAMBOX, if it runs not as a service or daemon! A possible value for your system is:<br /><font color=blue>"/usr/bin/perl" "spambox.pl" "/root/spambox" &</font><br />Leave this field blank, if SPAMBOX runs inside an external loop (inside the OS like assp.sh or assp.cmd). If running on NIX systems and runAsUser and/or runAsGroup is used, don't forget to switch back to root permissions in the script!

# variable - RestartEvery
msg007530=Restart Timeout
msg007531=SPAMBOX will automatically terminate and restart after this many seconds. Use this setting to periodically reload configuration data, combat potential memory leaks, or perform shutdown/startup processes. This will only work properly if SPAMBOX runs as a Windows service or in a script that restarts it after it stops or AutoRestartCmd is configured. Alternative to this field you can use ReStartSchedule, to schedule restarts.

# variable - ReStartSchedule
msg007540=Schedule Cron time for SPAMBOX Restart <sup>s</sup>
msg007541=If <b>not</b> set to "noschedule" (noschedule is default), SPAMBOX uses scheduled times to shutdown or restart ( AutoRestartCmd )! The syntax is the same like in <a href="http://en.wikipedia.org/wiki/Cron" rel="external">"Vixie" cron</a>! To disable this Scheduler leave this field blank!<b> Never write quotes in to this field!</b><br />
This requires an installed <a href="http://search.cpan.org/search?query=Schedule::Cron" rel="external">Schedule::Cron</a> module in PERL.<br />
<br /><b>Time and Date specification</b><br />
<br />
Entry is the specification of the scheduled time in crontab format,
which contains five mandatory time and date fields.
Entry can be either a plain string, which contains
a whitespace separated time and date specification.<br />
<br />
The time and date fields are (taken mostly from "Vixie" cron):<br />
<br />
<table BORDER CELLSPACING=0 CELLPADDING=4 WIDTH="50%" >
<tr><td><b>field</b></td><td><b>values</b></td></tr>
<tr><td>minute</td><td>0-59</td></tr>
<tr><td>hour</td><td>0-23</td></tr>
<tr><td>day of month</td><td>1-31</td></tr>
<tr><td>month</td><td>1-12 (or as names)</td></tr>
<tr><td>day of week</td><td>0-7 (0 or 7 is Sunday, or as names )</td></tr>
<tr><td>seconds</td><td>0-59 (optional) <b>not supported inside SPAMBOX !!!</b></td></tr>
</table>
<br />
 A field may be an asterisk (*), which always stands for
 "first-last".<br />
<br />
 Ranges of numbers are  allowed.  Ranges are two numbers
 separated  with  a  hyphen.   The  specified  range  is
 inclusive.   For example, 8-11  for an "hours" entry
 specifies execution at hours 8, 9, 10 and 11.<br />
<br />
 Lists  are allowed.   A list  is a  set of  numbers (or
 ranges)  separated by  commas.   Examples: "1,2,5,9",
 "0-4,8-12".<br />
<br />
 Step  values can  be used  in conjunction  with ranges.
 Following a range with "/<number>" specifies skips of
 the  numbers value  through the  range.   For example,
 "0-23/2" can  be used in  the hours field  to specify
 command execution every other hour (the alternative in
 the V7 standard is "0,2,4,6,8,10,12,14,16,18,20,22").
 Steps are  also permitted after an asterisk,  so if you
 want to say "every two hours", just use "*/2".<br />
<br />
 Names can also  be used for the "month"  and "day of
 week"  fields.  Use  the  first three  letters of  the
 particular day or month (case doesn't matter).<br />
<br />
 Note:<br />
       The day of a command's execution can be specified
       by two fields  -- day of month, and  day of week.
       If both fields are restricted (ie, aren't *), the
       command will be run when either field matches the
       current  time.  For  example, "30  4 1,15  * 5"
       would cause a command to be run at 4:30 am on the
       1st and 15th of each month, plus every Friday<br />
<br />
Examples:<br />
<br />
<table BORDER CELLSPACING=0 CELLPADDING=4 WIDTH="80%" >
<tr><td>8 0 * * *</td><td>==></td><td>8 minutes after midnight, every day</td></tr>
<tr><td>5 11 * * Sat,Sun</td><td>==></td><td>at 11:05 on each Saturday and Sunday</td></tr>
<tr><td>0-59/5 * * * *</td><td>==></td><td>every five minutes</td></tr>
<tr><td>42 12 3 Feb Sat</td><td>==></td><td>at 12:42 on 3rd of February and on each Saturday in February</td></tr>
<tr><td>32 11 1-15/2 */3 *</td><td>==></td><td>at 11:32 every two days from the first to the 15. every third month</td></tr>
</table>
<br />
In addition, ranges or lists of names are allowed.<br />
If you want to define multiple entries separate them by "|"

# variable - MemoryUsageLimit
msg009950=Memory Limit in MB that SPAMBOX could use
msg009951=The memory limit in megabyte the assp process could use at maximum on your system. Set this to empty or zero to disable the feature. The check is done using the schedule defined in MemoryUsageCheckSchedule . If the assp process uses more memory than the limit at a scheduled time and assp is able to restart it self - a restart will be done within 15 seconds. The user running assp must have read access to /proc on nix systems or must have read access to the WMI provider on windows systems!

# variable - MemoryUsageCheckSchedule
msg009960=Schedule(s) to check the SPAMBOX process memory usage <sup>s</sup>
msg009961=The schedule(s) that is used to check the current memory usage of the assp process compared to the MemoryUsageLimit. Default value is (0-59/10 * * * *), which means every 10 minutes. This requires an installed <a href="http://search.cpan.org/search?query=Schedule::Cron" rel="external">Schedule::Cron</a> module in PERL.

# variable - myName
msg007550=My Name
msg007551=SPAMBOX will identify itself by this name in the email "Received:" header and in the helo when sending report-replies. Usually the fully qualified domain name of the host.<p><small><i>Examples:</i> assp.mydomain.com, SPAMBOX.nospam</small></p>

# variable - myNameAlso
msg007880=Additional My-Name-Definitions
msg007881=If myName was changed or you use shared folders (multiple SPAMBOX) for the corpus files, define the old or other host names here - separate multiple entries by pipe, space or comma. SPAMBOX will use this host names in addition to myName, to detect the received headerlines while the rebuildspamdb is running and in the mail analyzer.

# variable - myHelo
msg007560=My Helo
msg007561=How SPAMBOX will identify itself when connecting to the target MTA.<br />
  The values used for incoming and outgoing/local mails are separated by "|" - for example:<br /><br />
  SENDERHELO - IP - MYNAME - FQDN | MYNAME<br /><br />
  The left part "SENDERHELO - IP - MYNAME - FQDN" is used for incoming mails, the right part "MYNAME" is used for outgoing mails.<br />
  If any part is empty or the complete parameter is not defined, the helo of the sending host is used.<br />
  Using the "IP" literal, you can tell your local MTA the connected IP address.<br />
  Any RFC compatible text can be used. DO NOT define the SMTP command HELO/EHLO, the command used by the sending host will take place!<br />
  The following case sensitive literals will be replaced with:<br /><br />
  IP - the IP address of the connected host<br />
  MYNAME - the value defined in myName<br />
  FQDN - the local operating system hostname<br />
  SENDERHELO - the helo text received from the connected host<br /><br />

# variable - HideIPandHelo
msg009830=Hide IP and/or Helo
msg009831=Replace any of these information ( ip=127.0.0.1 helo=anyhost.local ) in our received header for outgoing mails. Use the syntax ip=127.0.0.1 and/or helo=anyhost.local .

# variable - myGreeting
msg010260=Override the Server SMTP Greeting
msg010261=Send this SMTP greeting (eg. 220 MYNAME is ready - using SPAMBOX VERSION) instead of your MTA's SMTP greeting to the client. If not defined (default), the MTA's greeting will be sent to the client. The literal MYNAME will be replaced with myName and the literal VERSION will be replaced by the full version string of assp. If the starting '220 ' is not defined, assp will add it to the greeting.

# variable - spamboxCfg
msg007570=spambox.cfg*
msg007571=For internal use only - it is spambox.cfg file. Do not change this value.

# variable - AutoReloadCfg
msg007580=Automatic Reload ConfigFile
msg007581=If selected and the spambox.cfg file is changed externally, SPAMBOX will reload the configuration from the file automatically.

# variable - spamboxCfgVersion
msg007590=spambox.cfg version
msg007591=SPAMBOX will identify the spambox.cfg file. Do not change this.

# variable - ConfigChangeSchedule
msg009680=Schedule Configuration Changes*
msg009681=Use this option to schedule configuration changes. You must use the file option like 'file:files/configchangeschedule.txt' to define schedules - an empty value disables this feature.<br />
 Define one schedule per line - comments are not allowed in a schedule definition line!<br />
 The line has to start with the schedule string ( see ReStartSchedule ) followed by the variable (or hidden variable ) name to change, followed by ':=', followed by the value to change the variable to - like:<br /><br />
 8 0 * * * myNameAlso:=otherhost1.mydomain.tld<br />
 0 6 * * *|0 10 * * * myNameAlso:=otherhost2.mydomain.tld<br />
 0 1 * * * debug:=1<br />
 0 2 * * * debug:=<br /><br />
 The schedule string can contain multiple schedule definitions separated by pipe'|'. You will get errors if:<br />
 - the schedule definition is wrong<br />
 - the variable name is wrong (does not exists)<br />
 - the syntax of the value is wrong<br />
 Notice - assp will only check the syntax at definition time - the logical correctness of the value will be checked at the scheduled time! So, assp will (for example) not check any dependencies at definition time - if a dependency is wrong, the change request at the scheduled time will fail!<br />
 Notice - all configuration changes are done with 'root' permission! For this reason, this configuration parameter is only visible to root and it is stored encrypted!<br /><br  />
 <span class="negative">For advanced users ONLY:<br />
 Using the following extension, requires a deep internal knowledge of the assp code!</span><br />
 It is also possible to schedule a call to an internal assp subroutine. The name of the subroutine has to begin with a '&amp;', the parameters that should passed to the subroutine must be in '()' - like:<br />
 0 6 * * * &amp;subname(var1,var2,..,...)<br />
 0 7 * * * &amp;subname()<br />
 Notice: the subroutine will be called in the MainThread and syntax check will be done at run time - possible errors are shown in the log!

# variable - proxyserver
msg007600=Proxy Server
msg007601=The Proxy Server to use when uploading global statistics and downloading the greylist.<p><small><i>Examples:</i> 192.168.0.1:8080, 192.168.0.1</small></p>

# variable - proxyuser
msg007610=Proxy User
msg007611=The Proxy-UserName that is used to authenticate to the proxy.

# variable - proxypass
msg007620=Proxy Password
msg007621=The password for Proxy-UserName that is used to authenticate to the proxy.

# variable - webAdminPort
msg007630=Web Admin Port
msg007631=The port on which SPAMBOX will listen for http connections to the web administration interface. If you change this, after you click Apply you must change the URL on your browser to reconnect. You may also supply an IP address or hostname to limit connections to a specific interface. Separate multiple entries by pipe "|"!<p><small><i>Examples:</i> 55555, 192.168.0.5:12345, myhost:12345, 192.168.0.5:22345|myhost:12345</small></p>

# variable - enableWebAdminSSL
msg007640=Use https instead of http
msg007641=If selected the web admin interface will be only accessible via https. If you change this, after you click Apply you must change the URL on your browser to reconnect.
  This requires an installed <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a> module in PERL.<br />
  A server-certificate-file "certs/server-cert.pem" and a server-key-file "certs/server-key.pem" must exist and must be valid!<br />
  If you do not have valid certificates, you may generate both files online with <a href="http://www.mobilefish.com/services/ssl_certificates/ssl_certificates.php" rel="external">www.mobilefish.com</a> or you may use OpenSSL to generate <a href="http://www.mobilefish.com/developer/openssl/openssl_quickguide_self_certificate.html" rel="external">Self-signed SSL certificates</a>! More configuration options are webSSLRequireCientCert, SSLWEBCertVerifyCB and SSLWEBConfigure .

# variable - webAdminPassword
msg007650=Web Admin Password - Masterpassword (root)
msg007651=The password for the web administration interface for user root(minimum of 5 characters).<br />
  <span class=\"negative\"><b>DO NOT use the digits "45" as the first two characters of the password or you will be not able to login ever again!</b></span><br />
  If root is logged on, no other logins are allowed. Always use the "logoff"-button as root to terminate the session - closing the browser without logoff could cause other session to be disallowed.

# variable - allowAdminConnectionsFrom
msg007660=Only Allow Admin Connections From*
msg007661=An optional list of IP addresses and/or hostnames from which you will accept web admin connections. Blank means accept connections from any IP address.<br /> <span class="negative">Note: if you make a mistake here, you may disable your web administration interface and be forced to manually edit your configuration file to fix it.</span><p><small><i>Examples:</i></small></p>
  127.0.0.1|172.16.

# variable - httpRequireCookies
msg009000=HTTP and HTTPS require enabled browser cookies
msg009001=Cookie based http session ID's are used by assp to handle different requests from the same IP (eg behind NAT). Switch this off, if you are unable to use cookies in your browser. If switched off, a security hole is opened for connection that are using NAT - it could be possible that a second workstation (behind NAT) is able to login to the GUI, without user credentials if the same OS and browser version is used.

# variable - webStatHealthyResp
msg009260=Status Response Literal for a Healthy State of SPAMBOX
msg009261=This option must be set and it must be different to webStatNotHealthyResp. This literal will be given back in stat requests, if SPAMBOX is working healthy.

# variable - webStatNotHealthyResp
msg009270=Status Response Literal for a Not Healthy State of SPAMBOX
msg009271=This option must be set and it must be different to webStatHealthyResp. This literal will be given back in stat requests, if SPAMBOX is working not healthy.

# variable - webStatPort
msg007670=Raw Statistics Port
msg007671=The port on which SPAMBOX will listen for http or telnet connections to the statistics interface. You may also supply an IP address to limit connections to a specific interface. Only one value is supported!<br />
   The stats are available via browser or telnet (or telnet similar socket). Using telnet, press ENTER two times to get the healthy state (' $webStatHealthyResp [CRLF]' or ' $webStatNotHealthyResp [CRLF]' in a single line), this is the recommended methods to get the 'UP'-state of assp from nagios or any other external script.<br />
   Type 'stat[ENTER][ENTER]' to get the STATS in raw text where each line is terminated with '[CR]LF' (CR is send in any case, if the request contains CR).<br />
   The HTML output are LF terminated STAT lines.<p><small><i>Examples:</i> 55553, 192.168.0.5:12345</small></p>

# variable - enableWebStatSSL
msg007680=Use https instead of http
msg007681=The web stat interface will be only accessible via https.
  This requires an installed <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a> module in PERL.<br />
  A server-certificate-file "certs/server-cert.pem" and a server-key-file "certs/server-key.pem" must exits and must be valid! More configuration options are statSSLRequireClientCert, SSLSTATCertVerifyCB and SSLSTATConfigure .

# variable - allowStatConnectionsFrom
msg007690=Only Allow Raw Statistics Connections From*
msg007691=An optional list of IP addresses from which you will accept raw statistical connections. Blank means accept connections from any IP address. <p><small><i>Examples:</i></small></p>
 127.0.0.1|172.16.

# variable - EnableHTTPCompression
msg007700=Enable HTTP Compression in GUI
msg007701=Enable HTTP Compression for faster web administration interface loading. The perl module <a href="http://search.cpan.org/dist/Compress-Zlib/" rel="external">Compress::Zlib</a> is required to use this feature.

# variable - httpLocalIPAddress
msg010440=HTTP - Destination to Local IP-address Mapping*
msg010441=You need to use the "file: ..." option for this parameter!<br />
  On windows systems at least Vista/2008 is required!<br />
  On multihomed systems with multiple default gateways, it could be required to define the local IP address (source) used for outgoing HTTP connections.<br />
  This parameter allows to define local IP addresses used for specific targets (IP's or hosts) - based on the local address, the system will use the right gateway/interface.<br />
  Define one entry per line, comments (#) are allowed. The syntax for an entry is 'target=>local-IP'.<br />
  target could be any of: IP(4/6) network, IP(4/6) address, hostname, domain-name with wildcard (*).<br /><br />
  for example:<br />
  22.* => 192.168.1.1            # IP4 Network<br />
  2222:333:* => FE81::1          # IP6 Network<br />
  22.23.24.25 => 10.1.1.1        # host IP4<br />
  1:2:3:4:5:6:7:8 => FE94::5     # host IP6<br />
  *.domain.com => 10.1.1.1       # domain<br />
  host.domain.com => 192.168.1.1 # host<br />
  * => 172.16.1.1                # default - if not defined, the system default is used<br /><br />
  NOTICE: assp will NOT check, that the local IP address is available and bound to a local interface! It will also NOT check the system routing table! YOU SHOULD KNOW WHAT YOU DO!

# variable - EnableFloatingMenu
msg007710=Enable Floating Menu Panel in GUI
msg007711=Allow the left menu panel on the web administration interface to float.

# variable - hideAlphaIndex
msg007720=Hide the Alpha Index Menu Panel in GUI
msg007721=Removes the index panel on the left side in the GUI, but the index is acceddible by clicking on "Sorted".

# variable - IndexSlideSpeed
msg007730=Sliding Speed of the Alpha Index Menu Panel in GUI
msg007731=Adjust the sliding speed of the Alpha Index Menu Panel in GUI to your needs.

# variable - RememberGUIPos
msg009340=Remember the last GUI position
msg009341=If selected, the GUI will remember the last topic of the main menu, that had the focus, was changed, that were jumped to or that were clicked on.

# variable - EnableInternalNamesInDesc
msg007740=Show Internal Names in the GUI
msg007741=Show the internal names in the web interface. The internal names are used in the configuration file (spambox.cfg), in the application code, and in the menu bar on the left side of the GUI.

# variable - MaillogTailJump
msg007750=Jump to the End of the Maillog
msg007751=Causes the browser window to jump to the bottom of the maillog instead of sitting at the top of the display.

# variable - MaillogTailBytes
msg007760=Maillog Tail Bytes
msg007761=The number of bytes that will be shown when the end of the maillog is viewed. The default value is 10000.

# variable - CleanCacheEvery
msg007780=Cache Cleaning Interval <sup>s</sup>
msg007781=This period (in hours) determines how frequently SPAMBOX does cache-housekeeping.

# variable - SaveStatsEvery
msg007790=Statistics Save Interval <sup>s</sup>
msg007791=This period (in minutes) determines how frequently SPAMBOX statistics are written to a local file.

# variable - totalizeSpamStats
msg007800=Upload Consolidated Spam Statistics
msg007801=SPAMBOX will upload its statistics to be consolidated with the <a href="http://assp.sourceforge.net/cgi-bin/assp_stats?stats" rel="external">global SPAMBOX totals</a>. This is a great marketing tool for the SPAMBOX project &mdash; please do not disable it unless you have a good reason to do so. No private information is being disclosed by this upload.

# variable - enableGraphStats
msg010000=Enable Graphical Statistics Collection
msg010001=SPAMBOX will collect statistical data in files located in the '/logs' folder (scoreGraphStats-YYYY-MM.txt , statGraphStats-YYYY-MM.txt). If data are collected and the module lib/SPAMBOX_SVG.pm is installed and the files images/stat.gplot, images/svg_style.css, images/svg_defs.svg and images/svg.js are installed and your browser supports SVG, assp will show graphical statistic data, if you click on a line in the 'Info and Stats' view.<br />
 If baysConf is configured, assp will also collect statistical data about the Bayesian and HMM confidence distribution - the file names are confidenceGraphStats-YYYY-MM.txt.<br />
 It is recommended to set 'SaveStatsEvery' to a value of 5 or 10 minutes, if this option is enabled!<br />
 Keep in mind that assp will NOT delete any of the '*GraphStats...txt'-files. If you don't need some of that files anymore, remove them manually!

# variable - ReloadOptionFiles
msg007810=Reload Option Files Interval <sup>s</sup>
msg007811=If set not to zero, SPAMBOX reloads configuration option files (file:.....) every this many seconds if they have changed. It is not recommended (and could make SPAMBOX unavailable) to use rsync or any external tool to snychronize caches and list permanently. If you need to snychronize data between SPAMBOX installations, you better use a database of your choice!

# variable - OrderedTieHashTableSize
msg007820=Ordered-Tie Hash Table Size
msg007821=The number of entries allowed in the hash tables used by SPAMBOX. This only belongs to Griplist if useDB4IntCache is not set. Larger numbers require more RAM but result in fewer disk hits. The default value is 10000. Adjust down to use less RAM.

# variable - OutgoingBufSizeNew
msg007830=Size of TCP/IP Buffer
msg007831=The default is 10240000 byte. Even more is better...

# variable - useDB4IntCache
msg007840=Use BerkeleyDB for Internal Caches
msg007841=SPAMBOX uses some internal caches that could grow to a large number of entries. Switch this on, if you want SPAMBOX to use less memory and be a little slower. The perl module <a href="http://search.cpan.org/dist/BerkeleyDB/" rel="external">BerkeleyDB</a> version 0.34 or higher and BerkeleyDB version 4.5 or higher is required to use this feature.

# variable - ALARMtimeout
msg007850=Module Call Timeout
msg007851=Global Timeout for SPF checks. The default is 10 seconds.
  <hr /><hr /><font color=red>Thread Control - be careful changing the following green options!</font><hr />

# variable - NumComWorkers
msg007860=Number of SMTP-Threads
msg007861=Number of SMTP-Threads to be used! Typical and default is 5. 10 should be enough for 200.000 connections a day. 15 should be the absolute maximum. Values above 7 will mostly not increase performance. Configurable values are between 2 and 29. Restart SPAMBOX if you changed this and you are using any database connection! A restart of assp is required if tis value was increased.

# variable - ReservedOutboundWorkers
msg007870=Reserved Number of Outbound-SMTP-Threads on relayPort
msg007871=Number of SMTP-Threads to be reserved for relayed (outbound) connections on relayPort ! This number of Threads will be exclusive reserved for connections on relayPort . For example: NumComWorkers=7 and ReservedOutboundWorkers=2 - mails on listenPort , listenPort2 and listenPortSSL are using worker 1-5 and mails on relayPort using worker 7-1 ! If you are not using the relayPort, do not reserve any workers.

# variable - autoRestartDiedThreads
msg007920=automatically restart died threads
msg007921=If defined, a (for any reason) died thread will be automatically restarted!

# variable - MaxFinConWaitTime
msg007930=Maximum time to wait for SMTP-Workers to finish connections
msg007931=The maximum time in seconds to wait for SMTP-Workers to finish connections, in case of a shutdown or restart of SPAMBOX. Default is 45. Configurable values are 10 to 599.

# variable - MonitorMainThread
msg007940=Monitor the MainThread
msg007941=If defined, the MainThread will be monitored for healthy by the MaintThread (Worker 10000)!

# variable - EnableHighPerformance
msg009700=Enable Higher Performance
msg009701=If set, the SMTP-Worker-Threads will get new pending connections much faster - using less wait states. The speed to interrupt the workers by the MainThread is increased. Using this feature will increase the CPU usage of the system!

# variable - ThreadCycleTime
msg007950=thread cycle time
msg007951=Time in microseconds (for SMTP workers and MainThread) to give each other thread to run in high CPU-workload conditions. Default value is 3000, typical values are between 10 and 9000. You can set this to 0, if your OS honors system-yield-calls (0 is not recommended on Windows OS)! A higher value will reduce CPU usage but cause SPAMBOX to run more slowly!

# variable - MaintThreadCycleTime
msg007960=MaintenanceThread cycle time
msg007961=Time in microseconds (for MaintThread) to give each other thread to run in high CPU-workload conditions. Default value is 3000, typical values are between 10 and 9000. You can set this to 0, if your OS honors system-yield-calls (0 is not recommended on Windows OS)! A higher value will reduce CPU usage but cause SPAMBOX to run more slowly!

# variable - RebuildThreadCycleTime
msg007970=RebuildSpamDBThread cycle time
msg007971=Time in microseconds (for RebuildSpamDBThread) to give each other thread to run in high CPU-workload conditions. Default value is 30, typical values are between 10 and 1000. You can set this to 0, if your OS honors system-yield-calls (0 is not recommended on Windows OS) and your system is fast enough! A higher value will reduce CPU usage but cause SPAMBOX to run more slowly!

# variable - ThreadStackSize
msg009030=Stack Size use by every Thread
msg009031=The stack size in MB that is used by every thread. Default is 0, which means to use the default system stack size. 16 MB is the default system stack size on windows platforms. This system value may differ on different platforms. To get the default stack size on linux use the shell command "ulimit -a". Try to increase this value, if you get "out of memory" errors while running assp. Changing this value requires an assp restart to take effect.

# variable - IOEngine
msg007980=Use This IO Engine
msg007981=Depending on your operating system and your Perl version it could be necessary to use the non default IOEngine 'IO::Select'. Try this if you see unexpected early closed connections in the log. You have to restart SPAMBOX, if you have changed this value!

# variable - MinPollTime
msg007990=Minimum Poll/Select Wait Time
msg007991=The time in milliseconds that SPAMBOX will at least wait for IO::Poll/IO::Select events! A higher value will reduce CPU usage but cause SPAMBOX to run more slowly! Default is 2.

# variable - WorkerCPUPriority
msg008000=CPU priority for SMTP-Threads
msg008001=Set the priority for the Workers in relation to all other processes/threads on the system. Than higher the value - than lower the priority. Default is 0 (system default is 0). Possible values are 0,1 and 2. This requires installed <a href="http://search.cpan.org/search?query=Thread::State" rel="external">Thread::State</a> module. It is recommended to run the Workers on lower priority, if SPAMBOX has to process most of the time a large number of mails at one moment ( number of mails &gt; NumComWorkers ).

# variable - asspCpuAffinity
msg009880=Cpu Affinity for assp
msg009881=Set the Cpu Affinity for all threads . Default is -1 (for use all CPU's). Possible values are comma or space separated CPU numbers starting with zero (0) or -1 for all CPU's. This requires installed <a href="http://search.cpan.org/search?query=Sys::CpuAffinity" rel="external">Sys::CpuAffinity</a> module. This feature will possibly not work on MacOS and OpenBSD and on any OS, if the system contains more than 32 CPU's.

# variable - PreAllocMem
msg008010=pre allocate memory for every mail
msg008011=SPAMBOX pre-allocates this number of bytes in mainstorage two times (in/out) for every mail to avoid memoryfracmentation (particularly in SPAMBOX long run conditions). The memory will be allocated, if the DATA command is received from the server. Default is 100000 - this is enough for most of the mails. If SPAMBOX receives the SIZE command from the server, the pre-allocation-memory will be calculated on that value. Question: Is it better to increase this value? Answer: Yes, it is - but be careful, this may cause SPAMBOX running in out of memory errors!

# variable - FreeupMemoryGarbage
msg008020=Freeup Memory Garbage
msg008021=If defined, all Threads will try to recover memory every five minutes!

# variable - ConnectionTransferTimeOut
msg008030=Connection Transfer Timeout
msg008031=Global Timeout for MainThread to transfer a connection to any Worker. If no Worker is able to take the new SMTP-connection (for any reason), the new connection will be dropped! The default is 30 seconds.

# variable - ShowPerformanceData
msg008040=Show Performance DATA in SMTP Connection screen
msg008041=If defined, performance data will be shown in top of the SMTP connection screen!
  <hr /><hr /><font color=red>end of Thread Control</font><hr />

# variable - UseLocalTime
msg008050=Use Local Time
msg008051=Use local time and timezone offset rather than UTC time in the mail headers.<br /><hr />
  <div class="menuLevel1">Notes On Server Setup</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/myserver.txt',3);" />

# heading - Rebuild Spamdb

# variable - RebuildSchedule
msg008070=Schedule Cron time for RebuildSpamdb
msg008071=If <b>not</b> set to "noschedule" (noschedule is default) , SPAMBOX uses scheduled times to run the RebuildSpamdb! The syntax is the same like in <a href="http://en.wikipedia.org/wiki/Cron" rel="external">"Vixie" cron</a>! To disable the Scheduler write "noschedule"!<b> Never write quotes in to this field!</b><br />
This requires an installed <a href="http://search.cpan.org/search?query=Schedule::Cron" rel="external">Schedule::Cron</a> module in PERL.<br />
It is possible to define more than one scheduled time per day to keep the Bayesian and HMM databes up to date, but this is not required - use 'newReportedInterval' instead.<br />
If a file /root/spambox/rebuilddebug.txt exists, the rebuild task will write the debug output to this file.<br />
<br /><b>Time and Date specification</b><br />
<br />
Entry is the specification of the scheduled time in crontab format,
which contains five mandatory time and date fields.
Entry can be either a plain string, which contains
a whitespace separated time and date specification.<br />
<br />
The time and date fields are (taken mostly from "Vixie" cron):<br />
<br />
<table BORDER CELLSPACING=0 CELLPADDING=4 WIDTH="50%" >
<tr><td><b>field</b></td><td><b>values</b></td></tr>
<tr><td>minute</td><td>0-59</td></tr>
<tr><td>hour</td><td>0-23</td></tr>
<tr><td>day of month</td><td>1-31</td></tr>
<tr><td>month</td><td>1-12 (or as names)</td></tr>
<tr><td>day of week</td><td>0-7 (0 or 7 is Sunday, or as names )</td></tr>
<tr><td>seconds</td><td>0-59 (optional) <b>not supported inside SPAMBOX !!!</b></td></tr>
</table>
<br />
 A field may be an asterisk (*), which always stands for
 "first-last".<br />
<br />
 Ranges of numbers are  allowed.  Ranges are two numbers
 separated  with  a  hyphen.   The  specified  range  is
 inclusive.   For example, 8-11  for an  "hours" entry
 specifies execution at hours 8, 9, 10 and 11.<br />
<br />
 Lists  are allowed.   A list  is a  set of  numbers (or
 ranges)  separated by  commas.   Examples: "1,2,5,9",
 "0-4,8-12".<br />
<br />
 Step  values can  be used  in conjunction  with ranges.
 Following a range with "/<number>" specifies skips of
 the  numbers value  through the  range.   For example,
 "0-23/2" can  be used in  the hours field  to specify
 command execution every  other hour (the alternative in
 the V7 standard is "0,2,4,6,8,10,12,14,16,18,20,22").
 Steps are  also permitted after an asterisk,  so if you
 want to say "every two hours", just use "*/2".<br />
<br />
 Names can also  be used for the "month"  and "day of
 week"  fields.  Use  the  first three  letters of  the
 particular day or month (case doesn't matter).<br />
<br />
 Note:<br />
       The day of a command's execution can be specified
       by two fields  -- day of month, and  day of week.
       If both fields are restricted (ie, aren't *), the
       command will be run when either field matches the
       current  time.  For  example, "30  4 1,15  * 5"
       would cause a command to be run at 4:30 am on the
       1st and 15th of each month, plus every Friday<br />
<br />
Examples:<br />
<br />
<table BORDER CELLSPACING=0 CELLPADDING=4 WIDTH="80%" >
<tr><td>8 0 * * *</td><td>==></td><td>8 minutes after midnight, every day</td></tr>
<tr><td>5 11 * * Sat,Sun</td><td>==></td><td>at 11:05 on each Saturday and Sunday</td></tr>
<tr><td>0-59/5 * * * *</td><td>==></td><td>every five minutes</td></tr>
<tr><td>42 12 3 Feb Sat</td><td>==></td><td>at 12:42 on 3rd of February and on each Saturday in February</td></tr>
<tr><td>32 11 * * * 0-30/2</td><td>==></td><td>11:32:00, 11:32:02, ... 11:32:30 every day</td></tr>
</table>
<br />
In addition, ranges or lists of names are allowed.<br />
If you want to define multiple entries separate them by "|"

# variable - useDB4Rebuild
msg008080=Use BerkeleyDB/DB_File or orderedtie for the RebuildSpamDB Internal Caches
msg008081=The RebuildSpamDB thread uses some internal caches that could grow to a large number of entries. Switch this on, if you want this thread to use less memory and be a little slower.<br />
   Adjust RebuildThreadCycleTime to a lower value (between 0 and 30) to speed up the RebuildSpamDB thread.<br />
   The perl module <a href="http://search.cpan.org/dist/BerkeleyDB/" rel="external">BerkeleyDB</a> version 0.34 or higher and BerkeleyDB version 4.5 or higher is required to use this feature. DB_File (Berkeley V1) will be used if BerkeleyDB is not available. If both BerkeleyDB and DB_File are not available, the rebuild thread will use the internal 'orderedtie' which is up to 1000 times slower than BerkeleyDB.

# variable - ReplaceOldSpamdb
msg008090=Replace the old Records in Spamdb and Spamdb.helo
msg008091=If selected, the new created records for Spamdb and Spamdb.helo will replace the old (belongs not to HMM, which is replaced every time). If not seleted, the new records will be added to Spamdb and Spamdb.helo . Default is on.

# variable - doMove2Num
msg008100=Do move2num Before Rebuild
msg008101=Renames files to numbers before the rebuild is started. If this is done, some other features like 'MailLogTail' and 'Block-Report' will be unable to find the files!

# variable - newReportedInterval
msg009870=Interval for processing new Reported Mails
msg009871=File count and interval definition (count minutes) for processing new reported mails (correctedspam , correctednotspam) - process if at least 'first value' mails are reported but every 'second value' minutes. defaults to '10 5'<br />
 Set the first value to zero to disable this feature.<br />
 If enabled, new reported mails or files moved in to the corpus via GUI are used, to immediately update the Spamdb and HMMdb with the new information.<br />
 This will keep the databases continuously uptodate and the RebuildSchedule interval could be increased, if there are enough files in the corpus and your corpus norm is fine.<br />
 If you need to copy/move several files from outside assp in to the corpus and you want assp to process them immediately, copy/move the files in to the subfolder "error/.../newManuallyAdded".

# variable - MaxKeepDeleted
msg008650=Max Days of Keep Deleted
msg008651=The maximum number in days deleted files in the bayesian collection folders ( spamlog , notspamlog ) will be kept. This is necessary when EmailBlockReport is used to handle the file and the file is meanwhile deleted. The list of files that are maked for deletion is stored in trashlist.db .

# variable - autoCorrectCorpus
msg008980=Automatic Corpus Correction
msg008981=(Syntax: a.a[a]-b.b[b]-cccc-dd or empty - default is "0.6-1.4-4000-14") If the corpus norm (the weight between spamwords/hamwords) is less than "a" (0.6 - too much ham) or greater than "b" (1.4 - too much spam), assp will delete the excess (oldest) files from the corresponding folder ( spamlog , notspamlog ). SPAMBOX will keep a minimum of "c" (4000) files in the folder and will never delete files that are younger than "d" (14) days. This cleanup will run at the end of the rebuildspamdb task. So the corrected file corpus will take effect at the next rebuildspamdb!<br />
  If this value is defined, assp will use the middle value of "a" and "b" ((a+b)/2) as target corpusnorm and will try to reach this value, using (as many as possible) but only such a count of files in the folders spamlog and notspamlog as required!

# variable - RebuildFileTimeLimit
msg009620=File Processing time Limit
msg009621=(Syntax: a[.aa] b[.bb] - default is "1 5")<br />
   Define one, or two space or comma separated values.<br />
   If the first value is not zero and the processing time of a single corpus file exceeds the first value in seconds, this will be shown in the rebuild log.<br />
   If the second value is not zero and the processing time of a single corpus file exceeds the second value in seconds, the file will be moved to the folder "$base/rebuild_error" to prevent future runtime penalties.

# variable - RebuildNotify
msg008110=Notification Email To
msg008111=Email address(es) to which you want SPAMBOX to send a notification email after the rebuild task is finished. The file rebuildrun.txt is included in this notification. Separate multiple entries by "|".

# variable - RebuildTestMode
msg009720=Run the Rebuild in Test Mode
msg009721=If selected, all rebuildspamdb tasks will not populate the spamdb and hmmdb - and no data will be sent to the griplist-Server.

# variable - forceRebuildDowngrade
msg009840=Keep rebuildspamdb.pm compatible to spambox.pl
msg009841=Keep rebuildspamdb.pm compatible to spambox.pl in case of an spambox.pl version downgrade.

# variable - RunRebuildNow
msg008120=Run RebuildSpamdb now
msg008121=If selected, RebuildSpamdb will be started immediately.<br /><input type=button value="Apply Changes and Run Rebuild SpamDB Now (if checked)" onclick="document.forms['SPAMBOXconfig'].theButtonX.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" />&nbsp;<input type=button value="Refresh Browser" onclick="document.forms['SPAMBOXconfig'].theButtonRefresh.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" /><hr /><div class="menuLevel1">Last Result Of Rebuildspamdb</div><input type="button" value="Last Run Rebuildspamdb" onclick="javascript:popFileEditor('rebuildrun.txt',5);" />
  <hr /><div class="menuLevel1">Rebuildspamdb-debug-output - create the file to enable the debug mode - delete the file to stop the debug mode for the rebuildspamdb task</div><input type="button" value="Rebuildspamdb-debug-output" onclick="javascript:popFileEditor('rebuilddebug.txt',3);" />
  <hr /><div class="menuLevel1">normfile - shows current:<br />
  Corpus-Norm , Corrected-SpamFiles , Corrected-NotSpamFiles , Spamlog-Files , NotSpamlog-Files , SpamWords/File , Hamwords/File , Spamwords , Hamwords</div><input type="button" value="normfile" onclick="javascript:popFileEditor('normfile',3);" />
  <hr /><div class="menuLevel1">Notes On RebuildSpamdb</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/rebuildspamdb.txt',3);" />

# heading - Char Conversions / TNEF

# variable - inChrSetConv
msg008130=inbound charset conversion table*
msg008131=If defined, characterset conversion for inbound mails will be done. For example: if your email server does not understand UTF-8, SPAMBOX will convert the mail parts to the characterset of your choice. The rules specified here are used to convert text parts of inbound mails from one to another characterset.<p><small><i>Example:</i>UTF-8=>ISO-8859-1|ISO-8859-15=>ISO-8859-1</small></p>
 This requires an installed <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> module in PERL.<br />
 This conversions are done for all (inbound,CC,report ..) mails except relayed mails. The converted mail will be not available on disk except DEBUG.

# variable - outChrSetConv
msg008140=outbound charset conversion table*
msg008141=If defined, characterset conversion for outbound mails will be done. For example: if your email server is unable to send mails in UTF-8, SPAMBOX will convert the mail parts to UTF-8. The rules specified here are used to convert text parts of outbound mails from one to another characterset.<p><small><i>Example:</i>ISO-8859-1=>UTF-8|ISO-8859-2=>UTF-8|windows-1250=>UTF-8</small></p>
 This requires an installed <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> module in PERL.<br />
 This conversions are done only for relayed mails!

# variable - doInFixTNEF
msg008150=convert inbound MS-TNEF attachments to MIME
msg008151=convert inbound MS-TNEF attachments like winmail.dat to MIME parts/attachments. If a TNEF-file is attached by other than Exchange (like application/octet-stream) no conversion will be done. <br />
 In addition to <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> this requires both installed <a href="http://search.cpan.org/search?query=Convert::TNEF" rel="external">Convert::TNEF</a> and <a href="http://search.cpan.org/search?query=MIME::Types" rel="external">MIME::Types</a> module in PERL.

# variable - keepInTNEF
msg008160=keep the MS-TNEF part in inbound mail
msg008161=keep inbound MS-TNEF attachments like winmail.dat in MIME parts. If unchecked and the conversion is successful, the original attachment will be removed from mail!

# variable - doOutFixTNEF
msg008170=convert outbound MS-TNEF attachments to MIME
msg008171=convert outbound MS-TNEF attachments like winmail.dat to MIME parts/attachments. If a TNEF-file is attached by other than Exchange (like application/octet-stream) no conversion will be done.<br />
 In addition to <a href="http://search.cpan.org/search?query=Email::MIME" rel="external">Email::MIME</a> this requires both installed <a href="http://search.cpan.org/search?query=Convert::TNEF" rel="external">Convert::TNEF</a> and <a href="http://search.cpan.org/search?query=MIME::Types" rel="external">MIME::Types</a> module in PERL.

# variable - keepOutTNEF
msg008180=keep the MS-TNEF part in outbound mail
msg008181=keep outbound MS-TNEF attachments like winmail.dat in MIME parts. If unchecked and the conversion is successful, the original attachment will be removed from mail!

# variable - convertNP
msg008840=convert NoProcessing mails
msg008841=Set this to on, if noprocessing mails should be converted, which is normally not the case.

# variable - doDKIMConv
msg008190=convert DKIM mails
msg008191=DKIM messages could normally not modified. If checked, conversions will be done on DKIM messages - <span class="negative">you have to disable the DKIM check on your email server (MTA)!</span>

# variable - TNEFDEBUG
msg008200=TNEFDEBUG (only in dev)
msg008201=prints TNEF conversion debug info to screen.<br /><hr />
  <div class="menuLevel1">Notes On Character Conversions / TNEF</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/conversions.txt',3);" />

# heading - SSL Proxy and TLS support

# variable - DoTLS
msg008210=How to Handle STARTTLS Requests
msg008211=If set to "drop TLS", any STARTTLS request will be removed from the protocol stack and no connection will ever go in to any TLS mode!<br />
  If set to "TLS to Proxy" and both peers (client and server) supports TLS, both connection will be moved in to a transparent Proxy mode. All data will be encrypted and unreadable to SPAMBOX.<br />
  If set to "do TLS", SPAMBOX will be the "man in the middle". SPAMBOX will try to move both connections in to TLS. All data will be readable to SPAMBOX - so all checks could be done. If any of the peers does not support TLS, SPAMBOX will fake this (250-STARTTLS) to the other peer. So it could be possible, that the connection to the client is going in to TLS mode, even if TLS is not supported by the server. If a client does not request TLS (STARTTLS) even it has got the (250-STARTTLS), SPAMBOX tries to start a TLS session to server, if he has sent (250-STARTTLS)! This behavior belongs to incoming and outgoing messages. This option requires the installed perl module <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a>!<br />
  For "do TLS" a server-certificate-file " SSLCertFile " and a server-key-file " SSLKeyFile " must exist and must be valid!<br />
  If you do not have valid certificates, you may generate both files online with <a href="http://www.mobilefish.com/services/ssl_certificates/ssl_certificates.php" rel="external">www.mobilefish.com</a> or you may use OpenSSL to generate <a href="http://www.mobilefish.com/developer/openssl/openssl_quickguide_self_certificate.html" rel="external">Self-signed SSL certificates</a>! If you have installed OpenSSL (must be in PATH) and installed and enabled IO::Socket::SSL and SPAMBOX is unable to find valid certificates - SPAMBOX will try to create them at startup!<br />
  <input type="button" value="SSLfailed Cache" onclick="javascript:popFileEditor('DB-SSLfailed','1h');" /><br />

# variable - SSL_version
msg009660=SSL version used for transmission
msg009661=Sets the version of the SSL protocol used to transmit data. The default is SSLv2/3,<br />
  which auto-negotiates between SSLv2 and SSLv3. You may specify 'SSLv2', 'SSLv3', 'TLSv1', 'TLSv1_1', 'TLSv1_2' (case-insensitive) combined with ':' and negated with '!' (example: 'SSLv2/3:!SSLv2') if you do not want this behavior.

# variable - SSL_cipher_list
msg009670=SSL key cipher list
msg009671=If this option is set, the cipher list for the connection will be set to the given value, e.g. something like 'ALL:!LOW:!EXP:!ADH'. Look into the OpenSSL documentation (<a href="http://www.openssl.org/docs/apps/ciphers.html#CIPHER_STRINGS" rel="external">http://www.openssl.org/docs/apps/ciphers.html#CIPHER_STRINGS</a>) for more details. Setting this value causes the 'SSL_honor_cipher_order' flag to be switched on (BEAST vulnerable)<br />
 If this option is not used (default) the openssl builtin default is used which is suitable for most cases.

# variable - NoTLSlistenPorts
msg008220=Disable SSL support on listenPorts
msg008221=This disables TLS/SSL on the defined listenPorts, if DoTLS is set to "do TLS". All other SMTP listeners will support TLS/SSL, if DoTLS is set to "do TLS". This option works for listenPort , listenPort2 and relayPort . The listener definition here has to be the same like in the port definitions. Separate multiple entries by "|".<p><small><i>Examples:</i> 25, 127.0.0.1:25, 127.0.0.1:25|127.0.0.2:25 </small></p>

# variable - TLStoProxyListenPorts
msg009020=Force TLS to Proxy on this Ports
msg009021=If a STARTTLS command is received on a port that is defined here, the connection will be moved in to the transparent proxy mode every time - independent from the setting of DoTLS . This option works for listenPort , listenPort2 and relayPort . The listener definition here has to be the same like in the port definitions. Separate multiple entries by "|".<p><small><i>Examples:</i> 25, 127.0.0.1:25, 127.0.0.1:25|127.0.0.2:25 </small></p>

# variable - SSLCertFile
msg008230=SSL Certificate File (PEM format)
msg008231=Full path to the file containing the server's SSL certificate or certificate-chain, for example : /usr/local/etc/ssl/certs/assp-cert.pem or c:/assp/certs/server-cert.pem. A general cert.pem file is already provided in 'assp/certs/server-cert.pem'.

# variable - SSLKeyFile
msg008240=SSL Key File (PEM format)
msg008241=Full path to the file containing the server's SSL private key, for example: /usr/local/etc/ssl/certs/assp-key.pem or c:/assp/certs/server-key.pem. A general key.pem file is already provided in 'assp/certs/server-key.pem'

# variable - SSLPKPassword
msg009540=SSL Private Key Password
msg009541=Optional parameter. If your private key ' SSLKeyFile ' is password protected, assp will need this password to decrypt the server's SSL private key file.

# variable - SSLCaFile
msg009530=SSL Certificate Authority File
msg009531=Optional parameter to enable chained certificate validation at the client side. Full path to the file containing the server's SSL certificate authority. If you provide the ca-certificate or certificate-chain together with the certificate file in the SSLCertFile parameter, leave this field blank. For example : /usr/local/etc/ssl/certs/assp-ca.crt or c:/assp/certs/server-ca.crt. A general ca.crt file is already provided in '/root/spambox/certs/server-ca.crt'. The default value is empty and leave it empty as long as you don't know, how this parameter works.

# variable - noTLSIP
msg008250=Exclude these IP's from TLS*
msg008251=Enter IP's that you want to exclude from starting SSL/TLS, separated by pipes (|). For example, put all IP's here, that making trouble to switch to TLS every time, what will prevent SPAMBOX from getting mails from this hosts.

# variable - banFailedSSLIP
msg010100=Ban Failed SSL IP
msg010101=If set (recommended is 'both'), an IP that fails to connect via SSL/TLS will be banned for 12 hour from using SSL/TLS.<br />
  Privat IP's and IP addresses listed in 'acceptAllMail' will get one more try to correct the mistake.<br />
  This is done per default ('both'), to prevent possible DoS attacks via SSL/TLS.<br />
  Those IP's are stored in the SSLfailed cache. This cache is cleaned up at startup.<br />
  disable - disables this feature, which is highly NOT recommended<br />
  private only - only private IP's and IP's in acceptAllMail will be banned (they have two tries)<br />
  public only - only public IP's will be banned<br />
  both - private and public IP's will be banned<br />
  <input type="button" value="edit SSLfailed Cache" onclick="javascript:popFileEditor('DB-SSLfailed','1h');" />

# variable - noBanFailedSSLIP
msg010280=Exclude these IP's from SSLfailed Cache*
msg010281=Enter IP's that you want to exclude from being added to the SSLfailed-Cache, separated by pipes (|).

# variable - sendEHLO
msg008260=Send EHLO
msg008261=If selected, SPAMBOX sends an EHLO even if the client has sent only a HELO. This is useful to force the usage of TLS to the server or to satisfy XCLIENT/XFORWARD helo offers, because EHLO is needed before STARTTLS or XCLIENT/XFORWARD could be used.

# variable - SSLRetryOnError
msg008270=Retry SSL on "SSL want a read first" error
msg008271=If selected, SPAMBOX retries one time to establish a SSL connection with one second delay, if the peer was not ready after STARTTLS because of a "SSL want a read/write first" error.

# variable - SSLtimeout
msg008280=SSL Timeout (0-999)
msg008281=SSL/TLS negotiation will timeout after this many seconds. default is : 5 seconds.

# variable - SSLDEBUG
msg008290=Debug Level for SSL/TLS
msg008291=Set the debug-level for SSL/TLS. Than higher the level, than more information are written to STDOUT!

# variable - webSSLRequireCientCert
msg010150=Client requires valid SSL Certificate for GUI Requests
msg010151=If enabled and enableWebAdminSSL is set to ON, each browser session is forced to provide a valid SSL client certificate. If no certificate is provided by the client, the connection will fail! To extend the verification of the certificate, use SSLWEBCertVerifyCB . Per default are used 'SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT | SSL_VERIFY_CLIENT_ONCE'<br />
  To create a PKCS12 from the PEM formated cert- and key file you can use openssl, like : <br />
  openssl pkcs12 -export -clcerts -in client.pem -inkey client.key -out client.p12<br />
  The file client.p12 could now be imported in to your browser.<br />
  <b>!!! Install a valid certificate in to your browser BEFORE you enable this option - otherwise the GUI will get inaccessible !!!</b><br />
  <b>NOTICE: This option will not work if you use any self signed certificate!</b>

# variable - SSLWEBCertVerifyCB
msg010160=CallBack to Verify Client Certificates for GUI Connections
msg010161=If used, assp will call the defined subroutine as SSL->SSL_verify_callback in an eval closure submitting the original ARRAY of parameters (see the IO::Socket::SSL documentation).<br />
  The subroutine has to return 1 on certificate verification success - otherwise 0.<br />
  You can use/modify the module lib/CorrectSPAMBOXcfg.pm to implement your code. For example<br /><br />
  sub checkWebSSLCert {<br />
  &nbsp;&nbsp;&nbsp;&nbsp;my ($OpenSSLSays,$CertStackPtr,$DN,$OpenSSLError, $Cert)=@_;<br />
  &nbsp;&nbsp;&nbsp;&nbsp;my $subject = Net::SSLeay::X509_NAME_oneline(Net::SSLeay::X509_get_subject_name($Cert));<br />
  &nbsp;&nbsp;&nbsp;&nbsp;my $chain = Net::SSLeay::PEM_get_string_X509($Cert);<br />
  &nbsp;&nbsp;&nbsp;&nbsp;...any code...;<br />
  &nbsp;&nbsp;&nbsp;&nbsp;my $success = eval{verify($Cert);};<br />
  &nbsp;&nbsp;&nbsp;&nbsp;return $OpenSSLSays if $@;<br />
  &nbsp;&nbsp;&nbsp;&nbsp;my $user = eval{get_owner($Cert);};<br />
  &nbsp;&nbsp;&nbsp;&nbsp;return $OpenSSLSays if $@;<br />
  &nbsp;&nbsp;&nbsp;&nbsp;my $pass = get_pass($user);};<br />
  &nbsp;&nbsp;&nbsp;&nbsp;@main::ExtWebAuth = ($user,$pass)<br />
  &nbsp;&nbsp;&nbsp;&nbsp;return $success;<br />
  }<br /><br />
  Now, if you set this parameter to 'CorrectSPAMBOXcfg::checkWebSSLCert' - assp will call<br />
  CorrectSPAMBOXcfg::checkWebSSLCert->(@_);<br />
  The variable '@main::ExtWebAuth' could be used to authenticate the user to the GUI related to the used certificate. The username must be provided as first element of the array. The password could be provided as second element of the array - this is not recommended and it is not required! If the used certificate is valid and a known adminusername (root is provided) is stored as first element in '@main::ExtWebAuth', the user will be automatically logged on to the GUI.<br />
  <b>NOTICE: This option will not work if you use any self signed certificate!</b>

# variable - SSLWEBConfigure
msg010170=Call to Configure SSL-Listener-Parameters for GUI Connections
msg010171=If used, assp will call the defined subroutine in an eval closure submitting a reference to the assp predefined SSL-Socket-Configuration-HASH.<br />
  The HASH could be modified in place to your needs - please read the documentation of IO::Socket::SSL, Net::SSLeay and OpenSSL. Return values are ignored.<br />
  You can use/modify the module lib/CorrectSPAMBOXcfg.pm to implement your code. For example<br /><br />
  sub configWebSSL {<br />
  &nbsp;&nbsp;&nbsp;&nbsp;my \$parms = shift;<br />
  &nbsp;&nbsp;&nbsp;&nbsp;$parms->{timeout} = 10;<br />
  &nbsp;&nbsp;&nbsp;&nbsp;$parms->{'SSL_check_crl'} = 1;<br />
  &nbsp;&nbsp;&nbsp;&nbsp;$parms->{'SSL_crl_file'} = '/assp/certs/crl/crllist.pem';<br />
  &nbsp;&nbsp;&nbsp;&nbsp;return;<br />
  }<br /><br />
  Now, if you set this parameter to 'CorrectSPAMBOXcfg::configWebSSL' - assp will call<br />
  CorrectSPAMBOXcfg::configWebSSL->(\%sslparms);<br />
  <b>NOTICE: This option will not work if you use any self signed certificate!</b>

# variable - statSSLRequireClientCert
msg010180=Client requires valid SSL Certificate for STAT Requests
msg010181=If enabled and enableWebStatSSL is set to ON, each session is forced to provide a valid SSL client certificate. If no certificate is provided by the client, the connection will fail! To extend the verification of the certificate, use SSLSTATCertVerifyCB . Per default are used 'SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT | SSL_VERIFY_CLIENT_ONCE'<br />
  <b>NOTICE: This option will not work if you use any self signed certificate!</b>

# variable - SSLSTATCertVerifyCB
msg010190=CallBack to Verify Client Certificates for STAT Connections
msg010191=Please read the description of SSLWEBCertVerifyCB .<br />
  <b>NOTICE: This option will not work if you use any self signed certificate!</b>

# variable - SSLSTATConfigure
msg010200=Call to Configure SSL-Listener-Parameters for STAT Connections
msg010201=If used, assp will call the defined subroutine in an eval closure submitting a reference to the assp predefined SSL-Socket-Configuration-HASH.<br />
   Please follow the description for SSLWEBConfigure .<br />
   <b>NOTICE: This option will not work if you use any self signed certificate!</b>

# variable - smtpSSLRequireClientCert
msg010210=Client requires valid SSL Certificate for SMTP SSL Connections
msg010211=If enabled, each client or server requesting a connection at the listenPortSSL requires a valid SSL client certificate. If no certificate is provided by the client, the connection will fail! To extend the verification of the certificate, use SSLSMTPCertVerifyCB . Per default are used 'SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT | SSL_VERIFY_CLIENT_ONCE'<br />
  <b>NOTICE: This option will not work if you use any self signed certificate!</b>

# variable - SSLSMTPCertVerifyCB
msg010220=CallBack to Verify Client Certificates for SMTP Connections
msg010221=Please read the description of SSLWEBCertVerifyCB .<br />
  <b>NOTICE: This option will not work if you use any self signed certificate!</b>

# variable - SSLSMTPConfigure
msg010230=Call to Configure SSL-Listener-Parameters for SMTP Connections
msg010231=If used, assp will call the defined subroutine in an eval closure submitting a reference to the assp predefined SSL-Socket-Configuration-HASH.<br />
   Please follow the description for SSLWEBConfigure .<br />
   <b>NOTICE: This option will not work if you use any self signed certificate!</b>

# variable - ProxyConf
msg008300=Transparent TCP Proxy Table*
msg008301=Define transparent Port Proxy here. SPAMBOX will forward incoming packets to a specific destination.<br />
   For example: if you want incoming connections on port 465 (SMTP-SSL) to be forwarded to your email server.<br />
   <p><small><i>Example:</i>0.0.0.0:465=>192.168.1.25:465<=12.1.1.3,34.5.6.7,67.23.2.1|<br />
   10.1.1.1:1477=>192.168.1.23:25<=120.5.1.3,134.5.19.7,67.123.221.11</small></p><br />
 The syntax is: localIP:localPORT=>forwardIP:forwardPORT<=allowfromIP1,allowfromIP2,...|next Proxy configuration|....<br />
 You have to configure the IP-address and IP-port for both - local and forward  values. AllowfromIP are comma separated values of IP-addresses from where connections are allowed. If there is no allow value defined, all connections will be allowed!<hr />
  <div class="menuLevel1">SSL Proxy and TLS support</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/ssl_and_proxy.txt',3);" />

# heading - Global PenaltyBox

# variable - globalClientName
msg008310=client registration name
msg008311=The Name of this global-client for registration on the global-server. This entry has to be the full qualified DNS-Name of the IP-address over which SPAMBOX is doing HTTP-requests! If you are using a HTTP-Proxy, this should be the public IP-address of the last Proxy in chain! This DNS-Name has to be resolvable worldwide and the resolved IP-address has to match the SPAMBOX-HTTP-connection-IP-address. It is not possible to use an IP-address in this field! Dynamic DNS-Names like "yourdomain.dyndns.org" are supported!<br />
 To become a member of the exclusive global-penalty-box-users, you will need a subscription and you will have to pay a yearly maintenance fee. To get registered and/or to get more information, please send an email with your personal/company details and the globalClientName to "assp.globalpb@thockar.com".<br />
 The name of this client has to be known by the global server before it could be registered from here. Please wait until you have confirmation that your client name is known by the global server.<br />
 In addition to <a href="http://search.cpan.org/search?query=Compress::Zlib" rel="external">Compress::Zlib</a> this requires an installed <a href="http://search.cpan.org/search?query=LWP::UserAgent" rel="external">LWP::UserAgent</a> module in PERL.

# variable - globalClientPass
msg008320=client registration password
msg008321=If the global client is registered on the global-server, you will see a number of "*" in this field. This field is readonly.

# variable - globalClientLicDate
msg008330=client subscription expiration date
msg008331=The date of license/subscription expiration for this global client. If this date is exceeded, no upload and download of global PB will be done! This field is readonly.

# variable - DoGlobalBlack
msg008340=Enable the Global-Black-Penalty
msg008341=Enables the merge of the Black-Penalty-Box-Entries, if the client is registered on the global-PB-server. Upload and download of the black penalty entries are done independent from this setting as long as any of GPBDownloadLists or GPBautoLibUpdate is activated.

# variable - globalValencePB
msg008350=Value for Global-Black-PB Entries +
msg008351=This penalty-value will be given to downloaded Black-Penalty-Box-Entries. As long as entries have the "GLOBALPB" state, they will never become extreme-Black. It is recommended to set this value above PenaltyLimit!

# variable - globalBlackExpiration
msg008360=Expiration for Global-PB-Black Records
msg008361=Global-Black-Penalties will expire after this number of hours.

# variable - DoGlobalWhite
msg008370=Enable the Global-White-Penalty
msg008371=Enables the merge of the White-Penalty-Box-Entries, if the client is registered on the global-PB-server. Upload and download of the white penalty entries are done independent from this setting as long as any of GPBDownloadLists or GPBautoLibUpdate is activated.

# variable - globalWhiteExpiration
msg008380=Expiration for Global-PB-White Records(days)
msg008381=Global-White-Penalties will expire after this number of days.

# variable - GPBDownloadLists
msg009370=Download List and Regex Updates from GPB-Server
msg009371=Select, if assp should download updates for lists and regular expressions from the global penaltybox server. Downloads will be done to the 'download' folder. If install is selected, the downloaded lines will merged in to the defined files (file:...). If you want to disable a specific line in any of your files, do not delete the line, instead comment it out - putting a '#' or ';' in front of the line. If any list is not configured using the 'file:...' option, only the download will be done, even if install is selected. To disable a line that was added by the GPB-server to your file - simply commend the line out (# or ;). If you remove such a line, it could be possibly added again by the next GPB check. To change a line that was added by the GPB-server to your file - disable the line and customize a copied line to your needs.

# variable - GPBautoLibUpdate
msg009380=Download Plugin and Library Updates from GPB-Server
msg009381=Select, if assp should download updates for Plugins or Library-Files (../lib) from the global penaltybox server. Downloads will be done to the 'download' folder. If install is selected, the downloaded Plugins and/or modules will be installed in to there original location, if an older version of the file still exists. If an older version is not found, only the download will be done. To activate updated Plugins or modules a restart of assp is required. This feature will not force an automatic restart of assp!.
<hr /><div class="menuLevel1">Notes On Global Penalty Box</div><input type="button" value="Notes" onclick="javascript:popFileEditor('notes/global_pb.txt',3);" />

# heading - Block Reporting

# variable - ExtraBlockReportLog
msg008390=Enable extra Logging for BlockReports
msg008391=Maillogs could grow to a very large size. Enable this feature to log only loglines with blocking information to an extra file. These files will be named as "b" + logfile . Using this option will speed up Block Reporting. Before you switch on this option, you should run "grep"[linux/MacOS] or "find"[Windows] to create the "b" - file from the maillogs.<br />
 linux/MacOS - grep "\[spam found\]" *maillog.txt &gt; bmaillog.txt<br />
 Windows - find "[spam found]" *maillog.txt &gt; bmaillog.txt

# variable - EmailBlockReport
msg008400=Request Block Report
msg008401=Any mail sent by local/authenticated users to this username will be interpreted as a request to get a report about blocked emails. Do not put the full address here, just the user part. For example: asspblock<br />
 Leading digits/numbers in the mail subject will be interpreted as "report request for the last number of days". If the number of days is not specified in the mail subject, a default of 5 days will be used to build the report. <br />
 All characters behind the "number of days" will be interpreted as a regular expression to overwrite the BlockReportFilter - leading and trailing white spaces will be ignored.<br />
 Users defined in EmailBlockTo, EmailAdmins, BlockReportAdmins and EmailAdminReportsTo are 'Admins' and can request a report for multiple users. They have to use a special syntax with '=>' in the body of the report request. The syntax is: <br />
 QueryAddress=>ReportRecipient=>ReportDays  -  there are many possible combinations of this three parameters. For example:<br />
 user@domain and user@domain=>user@domain - will send a report for this user to this user<br />
 *@domain (better use) *@domain=>* - will send a report for every blocked user in this domain to this user<br />
 user@domain=>recipient@any-domain - will send a report for user@domain to recipient@any-domain<br />
 *@domain=>recipient@any-domain - will send a report for every blocked user in this domain to recipient@any-domain<br />
 It is possible to define a group ( Groups ) in the first parameter like:<br />
 [user@domain]=>recipient@any-domain<br />
 The group name must be a lower case email address of a local domain without any wildcard. This will create a combined block report for all email addresses defined in this group - useful, if someone has multiple email addresses and wants to get a single report.<br />
 If the group name is equal to a real existing email address of a user, and this user requests a block report using this email address (MAIL FROM:), a combined block report for the group will be generated.<br />
 A third parameter is possible to set, which defines the number of days for which the report should be created. The default (if empty or not defined) is one day. This value is used to calculate the 'next run date'. For example:<br />
 *@domain=>recipient@any-domain=>2 - creates a report for two days.<br />
 *@domain=>*=>14 - creates a report for 14 days.<br />
 user@domain=>=>3 or user@domain=>*=>3 - creates a report for three days. The second parameter is here empty or *.<br />
 To overwrite the defined BlockReportFilter, you can define a fourth parameter, which contains the regular expression to use.<br />
 *@domain=>*=>14=>virus|newsletter - creates a report for 14 days and skips all lines that contains the words 'virus' or 'newsletter'.<br />
 If an admin emails a block report request and specifies a filter in the subject of the email and a fourth parameter in the body, both regular expressions will be merged in to a single regex for each line.<br />
 If you or a user want the default BlockReportFilter to become part of the overwrite regex, the literal '$BRF' should be included in the regex like:<br />
 *@domain=>*=>14=>virus|$BRF|newsletter - or even in the subject of the email<br />
 In this case the literal '$BRF' will be replaced by the BlockReportFilter.<br />
 Only Admins are able to request blockreports for non local email addresses. For example:<br />
 user@non_local_domain=>recipient@any-domain=>4<br />
 *@non_local_domain=>recipient@any-domain=>4<br />
 This will result in an extended blockreport for the non local address(es). Replace 'non_local_domain' with the domain name you want to query for.<br />
 It is possible to change the complete design of the BlockReports to your needs,  using a html-css file. A default css-file 'blockreport.css' is in the image folder as is a default icon file 'blockreporticon.gif' and a default header-image-file 'blockreport.gif'.  These are optional files - If assp can not find these files in its
 image folder, it will use the default hardcoded css and icon. If the file 'blockreport.gif' is not found 'logo.gif' will be used.<br />
 To change any content, use the Blockreport::modify module in the lib folder. You'll need some Perl skills to do that.<br />
  <input type="button" value=" Edit blockreport_sub.txt file" onclick="javascript:popFileEditor('reports/blockreport_sub.txt',2);" /><br />
  <input type="button" value=" Edit blockreport_html.txt file" onclick="javascript:popFileEditor('reports/blockreport_html.txt',2);" /><br />
  <input type="button" value=" Edit blockreport_text.txt file" onclick="javascript:popFileEditor('reports/blockreport_text.txt',2);" />

# variable - EmailBlockReportDomain
msg008410=Request Blocked Email Domain
msg008411=Set this to the domain to which the users can send a request to receive blocked messages. For example: @assp.local. Notice the leading required '@'!

# variable - EmailBlockReply
msg008420=Reply to Block-Report Request
msg008421=

# variable - QueueUserBlockReports
msg008430=Queue User Block Report Requests
msg008431=How to process block report requests for users ( not EmailBlockTo, EmailAdmins, BlockReportAdmins, EmailAdminReportsTo ).<br />
  'run instantly' - the request will be processed instantly (not stored).<br />
  'store and run scheduled' - (deprecated) the request will be stored/queued, runs permanently scheduled at BlockReportSchedule until it will be removed from queue - a '+' in the subject is not needed<br />
  To add a request to queue, the user has to send an email to EmailBlockReport. Leading digits/numbers in the mail subject will be interpreted as "report request for the last number of days". If the number of days is not specified in the mail subject, a default of 5 days will be used to build the report.<br />
  If 'run instantly' is selected, but a user wants to schedule a permanent request, a leading '+' before the digits in subject is required.<br />
  To remove a request from queue the user has to send an email to EmailBlockReport with a leading '-' in the subject.<br />
  <input type="button" value=" Edit user report queue" onclick="javascript:popFileEditor('files/UserBlockReportQueue.txt',2);" />

# variable - QueueSchedule
msg008440=Runtime for Queued Requests <sup>s</sup>
msg008441=Runtime hour for reports in QueueUserBlockReports. Set a number between 0 and 23. 0 means midnight and is default

# variable - BlockRepForwHost
msg008450=Forward The Blockreportrequest to other SPAMBOX
msg008451=If you are using more than one SPAMBOX (backup MX), define the IP-address and relayPort (x.x.x.x:ppp - for SSL use SSL:x.x.x.x:ppp) of the other SPAMBOX here (separate multiple entries by "|"). The Blockreportrequest will be forwarded to this SPAMBOX and the user will get a blockreport from every SPAMBOX. The forwarded request has the same sender and recipient like the original request. So EmailBlockReport and EmailBlockReportDomain have to be configured identically on all SPAMBOX!!!! Resend requests are automatic forwarded to the right (or next) host, if SPAMBOX finds the hostname in the subject of the request. If you have more than two SPAMBOX, the logical sending structure must be a star. If SPAMBOX(A) (the sun) is in the middle and you have also SPAMBOX(B), SPAMBOX(C) and SPAMBOX(D) (satellites), SPAMBOX(A) should know C,B and D, and B,C and D should only know A.<br />
  If a forward host is unreachable, the forward request will be queued for a maximum of 24 hours and the user will be informed sending the 'reports/blockreportforwarderror.txt' file.<br />
  The perl module <a href="http://search.cpan.org/search?query=Net::SMTP/" rel="external">Net::SMTP</a> is required to use this feature (for SSL - Net::SMTP::SSL is required).

# variable - EmailBlockTo
msg008460=Send Copy of Block-Reports TO
msg008461=Email sent from SPAMBOX acknowledging your submissions will be sent to this address. For example: admin@domain.com

# variable - BlockReportAdmins
msg010480=BlockReport Admins*
msg010481=A list of local addresses, which have the same rights like EmailAdmins, but only for all BlockReport functions (nothing else). Leave this field blank (default), to disable this feature.<br />
  This is useful, if a user must request BlockReports or resend mails for other users like an EmailAdmin and BlockReportAdmin can do it, but should not have other extended rights to use the EmailInterface.<br />
  Accepts specific addresses (user@domain.com), user parts (user).  Wildcards are supported (fribo*@domain.com).<br />
  For example: fribo*@thisdomain.com|jhanna 

# variable - EmailAdminDomains
msg009710=Email Admin BlockReport User and Domain Restrictions*
msg009711=Use this parameter to restrict users registered in EmailAdmins, BlockReportAdmins, EmailAdminReportsTo and EmailBlockTo to a list of domains or users, for which they can request BlockReports.<br />
  It is possible to use defined GROUPS on both sites. The file: option is required. Use the following syntax to define an entry (one per line):<br />
  EmailAdminAddress=>*@domain1,*@domain2,user@domain3,...<br />
  EmailAdminAddress1|EmailAdminAddress2=>*@domain1,*@domain2,user@domain3,...<br />
  [group_of_EmailAdminAddresses]=>*@domain1,*@domain2,user@domain3,...<br />
  [group_of_EmailAdminAddresses]=>[group_of_domains],...<br />
  Wildcards are allowed to be used only in the domain definition - like *@*.domain.tld - separate multiple domains by comma.<br />
  If an address of an EmailAdmin or BlockReportAdmin is defined multiple times, all entries are used in an "AND" logic.<br />
  If a BlockReport is requested for a not allowed email address, the complete BlockReport request will be ignored.<br />
  If an EmailAdmins or BlockReportAdmins address is not registered in this parameter, he/she is able to request BlockReports for all domains.

# variable - EmailResendRequester
msg010120=Blocked Email Resend Requester*
msg010121=A list of local addresses, which are allowed to request a resend of blocked emails for other users, even they are not EmailAdmins or BlockReportAdmins . Leave this field blank (default), to disable this feature.<br />
  This is useful, if a user gets automatic generated BlockReports (e.g via BlockReportFile ) for a group of users and should be able to manage resends for them. Added here, the user is not allowed to request BlockReports for other users - in this case use EmailAdmins, BlockReportAdmins and EmailAdminDomains instead.<br />
  The resend is done to the recipient stored in the X-Assp-Intended-For: ( requires AddIntendedForHeader ) header field and the requester, if the address was found in a TO: header field. <br />
  Accepts specific addresses (user@domain.com), user parts (user).  Wildcards are supported (fribo*@domain.com).<br />
  For example: fribo*@thisdomain.com|jhanna 

# variable - BlockReportFile
msg008470=File for Blockreportrequest
msg008471=A file with BlockReport requests. SPAMBOX will generate a block report for every line in this file (file:files/blockreportlist.txt - file: is required if defined!) every day at midnight for the last day. The perl modules <a href="http://search.cpan.org/search?query=Net::SMTP/" rel="external">Net::SMTP</a> and <a href="http://search.cpan.org/search?query=Email::MIME /" rel="external">Email::MIME </a> are required to use this feature. A report will be only created, if there is at least one blocked email found! The syntax is: <br />
 QueryAddress=>ReportRecipient=>ReportDays  -  there are many possible combinations of this three parameters. For example:<br />
 user@domain and user@domain=>user@domain - will send a report for this user to this user<br />
 *@domain (better use) *@domain=>* - will send a report for every blocked user in this domain to this user<br />
 *@* - creates a report for all local users in all local domains<br />
 user@domain=>recipient@any-domain - will send a report for user@domain to recipient@any-domain<br />
 *@domain=>recipient@any-domain - will send a report for every blocked user in this domain to recipient@any-domain<br />
 It is possible to define a group ( Groups ) in the first parameter like:<br />
 [user@domain]=>recipient@any-domain<br />
 The group name must be a lower case email address of a local domain without any wildcard. This will create a combined block report for all email addresses defined in this group - useful, if someone has multiple email addresses and want's to get a single report.<br />
 An optional third parameter can define the number of days for which the report should be created. The default (if empty or not defined) is one day. This value is used to calculate the 'next run date'. For example:<br />
 *@domain=>recipient@any-domain=>2 - creates a report for two days.<br />
 *@domain=>*=>14 - creates a report for 14 days.<br />
 user@domain=>=>3 or user@domain=>*=>3 - creates a report for three days. The second parameter is here empty or *!<br />
 To overwrite the defined BlockReportFilter, you can define a fourth parameter, which contains the regular expression to use.<br />
 *@domain=>*=>14=>virus|newsletter - creates a report for 14 days and skips all lines that contains the words 'virus' or 'newsletter'.<br />
 A fifth parameter could be used to schedule (cron) a BlockReport. If this parameter is used, the line will be ignored at BlockReportSchedule. For the syntax of the cron entry, please read RebuildSchedule . Multiple schedules in one line could be separated by pipe (|).<br />
 *@domain=>it_dep@domain=>7=>virus|newsletter=>0 0 * * 0 - creates a report every Sunday at 00:00 for the last seven days<br />
 *@domain=>it_dep@domain=>2=>virus|newsletter=>0 0 * * 2,4,6|0 12 * * 1 - creates a report every Tuesday,Thursday,Saturday at 00:00 and at every Monday at 12:00 for the last two days<br />
 Only Admins are able to request blockreports for non local email addresses. For example:<br />
 user@non_local_domain=>recipient@any-domain=>4<br />
 *@non_local_domain=>recipient@any-domain=>4<br />
 This will result in an extended blockreport for the non local address(es). Replace 'non_local_domain' with the domain name you want to query for.

# variable - BlockReportSchedule
msg008480=Runtime BlockReportFile <sup>s</sup>
msg008481=Runtime hour for reports in BlockReportFile. Set a number between 0 and 23. 0 means midnight and is default.

# variable - BlockReportNow
msg008490=Generate a BlockReport from BlockReportFile Now
msg008491=If selected, SPAMBOX will generate a block report from BlockReportFile now. <input type=button value="Apply Changes and Run Block Report Now (if checked)" onclick="document.forms['SPAMBOXconfig'].theButtonX.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" />&nbsp;<input type=button value="Refresh Browser" onclick="document.forms['SPAMBOXconfig'].theButtonRefresh.value='Apply Changes';document.forms['SPAMBOXconfig'].submit();WaitDiv();return false;" />

# variable - BlockMaxSearchTime
msg008500=Max Search time per log File
msg008501=The maximum time in seconds, the Blockreport feature spends on searching in one log file. If this value is reached, the next log file will be processed. Default is 0. A value of 0 disables this feature and all needed log files will be fully processed.

# variable - BlockReportFormat
msg008510=The format of the Report Email
msg008511=Block reports will be sent as multipart/alternative MIME messages. They normally contains two parts, a plain text part and a html part. Select "text only" or "html only" if you want to skip any of this parts.<br />
  To make it possible to detect a resent email, SPAMBOX will add a header line "X-Assp-Resend-Blocked: myName" to each email!

# variable - BlockReportHTTPName
msg008760=My HTTP Name
msg008761=The hostname for HTTP(S) links in AdminUsers Blockreports. If not defined the local hostname will be used.

# variable - BlockReportFilter
msg008520=Regular Expression to Skip Log Records*
msg008521=Put anything here to identify messages which should not be reported in any Block Report. For example:  Virus|BlackDomain.<br />
 For individual filter settings, it is possible to overwrite this value in the BlockReportFile for every single line and in every request per email using the subject line ( read EmailBlockReport ).

# variable - DoT10Stat
msg009790=Collect multiple TopTen Statistics
msg009791=enable the top ten statistic count (blocked IP's, blocked senders, blocked recipients) and the output in the GUI and BlockReports for admins.

# variable - inclResendLink
msg008530=Include a Resend-Link for every resendable email
msg008531=Block reports will be sent as multipart/alternative MIME messages. They contains two parts, a plain text part and a html part. If a blocked email is stored in any folder, it is possible to include a link for each email in to the report. Define here what you want SPAMBOX to do. Default is "in both". If set to not to disabled " fileLogging " will be automatically set to on.

# variable - BlockResendLink
msg008540=Which Link Should be included
msg008541=If HTML is enabled in inclResendLink, two links (one on the left and one on the right site) will be included in the report email by default. Depending on the used email clients it could be possible, that one of the two links will not work for you. Try out what link is working and disable the other one, if you want.

# variable - BlockResendLinkLeft
msg008550=User which get the Left link only*
msg008551=List of users and domains that will get the left link only. The setting for BlockResendLink will be ignored for this entries!

# variable - BlockResendLinkRight
msg008560=User which get the right link only* 
msg008561=List of users and domains that will get the right link only. The setting for BlockResendLink will be ignored for this entries!

# variable - DelResendSpam
msg008570=Delete Mails in Spam Folder
msg008571=If selected, a user request to resend a blocked email will delete the file in the spamlog folder - an admin request will move the file to the correctednotspam folder.

# variable - autoAddResendToWhite
msg008580=Automatic add Resend Senders to Whitelist
msg008581=If a BlockReport resend request is made by any of the selected users, the original sender of the resent mail will be added to whitelist, also a copy file to the resend folder will do that.
  <div class="menuLevel1">Notes On Block Reporting</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/blockreports.txt',3);" />

# heading - SNMP Configuration

# variable - SNMP
msg00009400=Enable the SPAMBOX-SNMP Interface
msg009401=This enables the AgentX registration of assp to a SNMP master-AgentX. SPAMBOX will be registered to the master-AgentX as 'assp_myName', the possible configuration file name will be assp_myName.conf . This option requires the installed perl module <a href="http://search.cpan.org/search?query=NetSNMP::agent" rel="external">NetSNMP::agent</a>. The product and needed librarys could be downloaded at <a href="http://www.net-snmp.org/download.html" rel="external">net-snmp.org</a>.<br />
 All configuration values are accessed using the SNMPUser account. The SNMP-permission and visibility is used from the configured user GUI-permissions.<br /><br />
The following OIDs (relative to the SNMPBaseOID) are available for SNMP-queries. The configuration values are changeable via snmp. The file mib/SPAMBOX-MIB could be used in SNMP browsers to get a human readable view of the OID's (copy it to the net-snmp MIB file location - eg: [C:]/usr/share/snmp/mibs and the MIB location of your SNMP browser). Please keep in mind, that an extensive usage of SNMP queries will slow down assp.<br /><br />
.1   - runtime information<br />
.1.0 - assp healthy status boolean 0/1<br />
.1.1 - assp healthy status text<br />
.1.2 - SPAMBOX runtime status boolean 0/1 0=shutdown in progress - 1=running<br />
.1.3 - SPAMBOX runtime status text<br />
.1.4 - SPAMBOX version string<br />
.1.5 - SPAMBOX script name<br />
.1.6 - Perl version string<br />
.1.7 - Perl executable name<br />
.1.8 - operating system name<br />
.1.9 - hostname where SPAMBOX is running on<br />
.1.10 - IP-host where SPAMBOX is running on<br />
.1.11 - myName<br />
.1.12 - URL to new SPAMBOX version download<br />
.1.13 - currently running tasks<br />
.1.14 - current assp memory usage in MB<br />
.1.20 - schedule information<br />
.1.20.1 - next BerkeleyDB sync<br />
.1.20.2 - next scheduled Config reload<br />
.1.20.3 - next BATVTag cache cleaning<br />
.1.20.4 - next general cache cleaning<br />
.1.20.5 - next IP-per-Domain cache cleaning<br />
.1.20.6 - next DelayDB cache cleaning<br />
.1.20.7 - next Penaltybox cache cleaning<br />
.1.20.8 - next Database Backup<br />
.1.20.9 - next Database Connection Check<br />
.1.20.10 - next DNS Connection Check<br />
.1.20.11 - next hourly job runs (at)<br />
.1.20.12 - next Database Export<br />
.1.20.13 - next upload for Global-Black<br />
.1.20.14 - next upload for Global-White<br />
.1.20.15 - next Hash-File-Check (option files)<br />
.1.20.16 - next LDAP-cross-Check<br />
.1.20.17 - next RebuildSpamDB<br />
.1.20.18 - next ResendMail<br />
.1.20.19 - next SPAMBOXFileDownload (spambox.pl)<br />
.1.20.20 - next Version File Download (version.txt)<br />
.1.20.21 - next BackDNS File Download<br />
.1.20.22 - next Code Change Check<br />
.1.20.23 - next Droplist Download<br />
.1.20.24 - next Griplist Download<br />
.1.20.25 - next POP3Collect<br />
.1.20.26 - next Save Stats<br />
.1.20.27 - next TLDlist Download<br />
.1.20.28 - next Sync Config<br />
.1.20.29 - next Groups File Reload<br />
.1.20.30 - next BlockReport Schedule<br />
.1.20.31 - next File Age Schedule<br />
.1.20.32 - next BlockReport Queue Schedule<br />

<br />
.1.30.X - worker status (boolean) X = worker<br />
.1.30.X.1 - worker time since last loop (text) X = worker<br />
.1.30.X.2 - worker last action (text) X = worker<br />
<br />
.1.31.0 - general database status (boolean) 0/1<br />
.1.31.0.1 - general database status (text)<br />
.1.31.X - database table status (boolean) 0/1 - X >= 1<br />
.1.31.X.1 - database table name - X >= 1 related to .1.31.X<br />
<br />
.2 - Configuration - X is the internal value number adapted from the language files<br />
.2.H - heading description - H is the internal GUI heading number<br />
.2.H.X   - config value<br />
<br />
.3 - assp module information - X is a counter up from zero<br />
.3.X - module name<br />
.3.X.1 - installed module version<br />
.3.X.2 - required module version<br />
.3.X.3 - module installation status<br />
.3.X.4 - download URL for the module<br />
<br />
.4 - assp runtime status<br />
.4.1 - current stat - X is a counted number<br />
.4.1.X - current stat value<br />
<br />
.4.2 - cumulative stat - X is a counted number<br />
.4.2.X - cumulative stat value<br />
<br />
.4.3 - current total stat - X is a counted number<br />
.4.3.X - current total value<br />
<br />
.4.4 - cumulative total stat - X is a counted number<br />
.4.4.X - cumulative total stat value
<br />
.4.5 - current scoring stat - X is a counted number<br />
.4.5.X - current scoring stat value<br />
<br />
.4.6 - cumulative scoring stat - X is a counted number<br />
.4.6.X - cumulative scoring stat value
<br />
.5.0 - SNMP-API : is writeable - accepts internal subroutine command/call to be executed<br />
.5.1 - the result of the last SNMP-API call (success or error)<br />
 

# variable - SNMPBaseOID
msg009410=SNMP Base OID
msg009411=The Base OID that should be used by assp. This OID will be registered to the master-AgentX. The master-AgentX will then redirect all requests for this OID and sub OID's to assp! The default setting  .1.3.6.1.4.1.37058.2  is needed to use the MIB file mib/SPAMBOX-MIB in SNMP browsers.

# variable - SNMPreturnBOOL
msg009430=How to return Boolean Values
msg009431=How should assp return boolean values for status OIDs. Use another setting than the default ASN_BOOLEAN, if your SNMP application or browser does not understand it!

# variable - SNMPUser
msg009440=SPAMBOX User Account used for SNMP Requests
msg009441=The Admin Users account used for SNMP requests. If the user does no longer exists, the root account will be used!

# variable - SNMPwriteable
msg009450=Allow Config Changes via SNMP
msg009451=Allow configuration changes via SNMP. Do not forget to setup your SNMP configuration file to secure the access to SNMP. All configuration changes via SNMP are done using the SNMPUser account!

# variable - SNMPAgentXSocket
msg009460=The Socket use to connect to the master-AgentX
msg009461=How to connect to the master-AgentX. Please read the <a href="http://www.net-snmp.org/docs/readmefiles.html" rel="external">net-snmp</a> documentation for more details.<br />
  <div class="menuLevel1">Notes On SNMP</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/snmp.txt',3);" />

# heading - POP3 Collecting

# variable - POP3ConfigFile
msg009070=POP3 Configuration File*
msg009071=The file with a valid POP3 configuration. Only the file: option is allowed to use. <br />
  If the file exists and contains at least one valid POP3 configuration line and POP3Interval is configured, assp will collect the messages from the configured POP3-servers. <br />
  Each line in the config file contains one configuration for one user.<br />
  All spaces will be removed from each line.<br />
  Anything behind a # or ; is consider a comment.<br />
  If the same POP3-user-name is used multiple times, put two angles with a unique number behind the user name. The angles and the number will be removed while processing the configuration.<br />
  e.g: pop3user&lt;1&gt; will result in pop3user  -  or  - myName@pop3.domain&lt;12&gt; will result in myName@pop3.domain<br />
  It is possible to define commonly used parameters in a separate line, which begins with the case sensitive POP3-username "COMMON:=" - followed by the parameters that should be used for every configured user.<br />
  A commonly set parameter could be overwritten in every user definition.<br />
  Each configuration line begins with the POP3-username followed by ":=" : e.g myPOP3userName:=<br />
  This statement has to followed by pairs of parameter names and values which are separated by commas - the pairs inside are separated by "=". <br />
  e.g.: POP3username&lt;num&gt;:=POP3password=pop3_pass,POP3server=mail.gmail.com,SMTPsendto=demo@demo_smtp.local,......<br />
  The following case sensitive keywords are supported in the config file:<br /><br />
  POP3password=pop3_password<br />
  POP3server=POP3-server or IP[:Port]<br />
  SMTPsender=email_address<br />
  SMTPsendto=email_address or &lt;TO:&gt; or &lt;TO:email_address&gt;<br />
  SMTPserver=SMTP-server[:Port]<br />
  SMTPHelo=myhelo<br />
  SMTPAUTHuser=smtpuser<br />
  SMTPAUTHpassword=smtppass<br />
  POP3SSL=0/1<br /><br />
  POP3SSL, SMTPHelo, SMTPsender, SMTPAUTHuser and SMTPAUTHpassword are optional.<br />
  If POP3SSL is set to 1 - POP3S will be done! The Perl module <a href="http://search.cpan.org/search?query=IO::Socket::SSL" rel="external">IO::Socket::SSL</a> is required for POP3S!<br />
  If SMTPsender is not defined, the FROM: address from the header line will be used - if this is not found the POP3username will be used.<br />
  If the &lt;TO:&gt; syntax is used for SMTPsendto, the mail will be sent to any recipient that is found in the "to: cc: bcc:" header lines if it is a local one.<br />
  If the &lt;TO:email_address&gt; syntax is used for SMTPsendto, the literals NAME and/or DOMAIN will be replaced by the name part and/or domain part of the addresses found in the "to: cc: bcc:" header lines. This makes it possible to collect POP3 mails from a POP3 account, which holds mails for multiple recipients.<br />
  For example: &lt;TO:NAME@mydomain.com&gt;  or  &lt;TO:NAME@subdomain.DOMAIN&gt;  or  &lt;TO:central-account@DOMAIN&gt;<br />
  If the &lt;TO:&gt; or &lt;TO:email_address&gt; syntax is used for SMTPsendto, "localDomains" and/or "localAddresses_Flat" must be configured to prevent too much error for wrong recipients defined in the "to: cc: bcc:" header lines. The POP3collector will not do any LDAP or VRFY query!<br />
  If you want assp to detect SPAM, use the listenPort or listenPort2 as SMTP-server.<br />
  To use this feature, you have to install the perl script "spambox_pop3.pl" in the assp- base directory.

# variable - POP3Interval
msg009080=POP3 Collecting Interval <sup>s</sup>
msg009081=The interval in minutes, assp should collect messages from the configured POP3-servers. A value of zero disables this feature.

# variable - POP3fork
msg009130=POP3 Collector forks to a new Process
msg009131=If selected, the POP3 collection will be started in a new process (fork). This prevents the MaintThread from waiting until the POP3 collection has finished. Do not select this option, if you are testing the POP3 collection - to get all output from the collector! It is recommended to set this option after you've verified that the POP3 collector is running well.

# variable - POP3KeepRejected
msg009140=POP3 Keep Rejected Mails on POP3 Server
msg009141=If selected, any collected POP3 mail that fails to be sent via SMTP (because of being SPAM - in case rejected by the SMTP server) will be kept on the POP3 server.

# variable - POP3debug
msg009090=POP3 debug
msg009091=If selected, the POP3 collection will write debug output to the log file. Do not use it, unless you have problems with the POP3 collection!
  <div class="menuLevel1">Notes On POP3 collecting</div>
  <input type="button" value="Notes" onclick="javascript:popFileEditor('notes/pop3collect.txt',3);" />

# heading - Module Setup <a href="javascript:popFileEditor('moduleLoadErrors.txt',8);"><img height=12 width=12 src="get?file=images/info.png" alt="show module load errors" /></a>

# variable - useAsspSelfLoader
msg030010=Use Module AsspSelfLoader
msg030011=If selected, the perl module AsspSelfLoader will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module AsspSelfLoader even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useAuthenSASL
msg030020=Use Module Authen::SASL
msg030021=If selected, the perl module Authen::SASL will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Authen::SASL even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for relayAuthUser and maybe some other features.

# variable - useBerkeleyDB
msg030030=Use Module BerkeleyDB
msg030031=If selected, the perl module BerkeleyDB will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module BerkeleyDB even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for DoHMM HMMusesBDB downloadBackDNSFile spamdb useDB4griplist DBdriver importDBDir useDB4IntCache useDB4Rebuild SNMP and maybe some other features.

# variable - useCompressZlib
msg030040=Use Module Compress::Zlib
msg030041=If selected, the perl module Compress::Zlib will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Compress::Zlib even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for AutoUpdateSPAMBOX EnableHTTPCompression globalClientName and maybe some other features.

# variable - useConvertTNEF
msg030050=Use Module Convert::TNEF
msg030051=If selected, the perl module Convert::TNEF will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Convert::TNEF even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for doInFixTNEF doOutFixTNEF and maybe some other features.

# variable - useDB_File
msg030060=Use Module DB_File
msg030061=If selected, the perl module DB_File will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module DB_File even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for useDB4Rebuild and maybe some other features.

# variable - useDigestMD5
msg030070=Use Module Digest::MD5
msg030071=If selected, the perl module Digest::MD5 will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Digest::MD5 even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for DelayMD5 and maybe some other features.

# variable - useDigestSHA1
msg030080=Use Module Digest::SHA1
msg030081=If selected, the perl module Digest::SHA1 will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Digest::SHA1 even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for DoMSGIDsig DoBATV and maybe some other features.

# variable - useEmailMIME
msg030090=Use Module Email::MIME
msg030091=If selected, the perl module Email::MIME will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Email::MIME even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for ValidateURIBL DoBlockExes EmailSpam EmailHam EmailAnalyze UseUnicode4MaillogNames UseUnicode4SubjectLogging inChrSetConv outChrSetConv doInFixTNEF doOutFixTNEF BlockReportFile and maybe some other features.

# variable - useEmailSend
msg030100=Use Module Email::Send
msg030101=If selected, the perl module Email::Send will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Email::Send even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for resendmail and maybe some other features.

# variable - useFileReadBackwards
msg030110=Use Module File::ReadBackwards
msg030111=If selected, the perl module File::ReadBackwards will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module File::ReadBackwards even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useFileScanClamAV
msg030120=Use Module File::Scan::ClamAV
msg030121=If selected, the perl module File::Scan::ClamAV will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module File::Scan::ClamAV even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for UseAvClamd and maybe some other features.

# variable - useIOSocketINET6
msg030130=Use Module IO::Socket::INET6
msg030131=If selected, the perl module IO::Socket::INET6 will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module IO::Socket::INET6 even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for enableINET6 and maybe some other features.

# variable - useIOSocketSSL
msg030140=Use Module IO::Socket::SSL
msg030141=If selected, the perl module IO::Socket::SSL will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module IO::Socket::SSL even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for syncUsesSSL smtpDestination smtpDestinationSSL smtpAuthServer relayHost EmailReportDestination DoLDAPSSL enableWebAdminSSL enableWebStatSSL DoTLS SSLWEBCertVerifyCB SSLWEBConfigure POP3ConfigFile and maybe some other features.

# variable - useLWPSimple
msg030150=Use Module LWP::Simple
msg030151=If selected, the perl module LWP::Simple will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module LWP::Simple even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useMIMETypes
msg030160=Use Module MIME::Types
msg030161=If selected, the perl module MIME::Types will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module MIME::Types even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for doInFixTNEF doOutFixTNEF and maybe some other features.

# variable - useMailDKIMVerifier
msg030170=Use Module Mail::DKIM::Verifier
msg030171=If selected, the perl module Mail::DKIM::Verifier will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Mail::DKIM::Verifier even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for DoDKIM and maybe some other features.

# variable - useMailSPF
msg030180=Use Module Mail::SPF
msg030181=If selected, the perl module Mail::SPF will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Mail::SPF even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for ValidateSPF SPF2 LocalPolicySPF and maybe some other features.

# variable - useMailSPFQuery
msg030190=Use Module Mail::SPF::Query
msg030191=If selected, the perl module Mail::SPF::Query will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Mail::SPF::Query even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for SPF2 LocalPolicySPF and maybe some other features.

# variable - useMailSRS
msg030200=Use Module Mail::SRS
msg030201=If selected, the perl module Mail::SRS will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Mail::SRS even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for EnableSRS and maybe some other features.

# variable - useNetCIDRLite
msg030210=Use Module Net::CIDR::Lite
msg030211=If selected, the perl module Net::CIDR::Lite will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Net::CIDR::Lite even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useNetDNS
msg030220=Use Module Net::DNS
msg030221=If selected, the perl module Net::DNS will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Net::DNS even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for ValidateRWL DoReversed DoInvalidPTR ValidateRBL ValidateURIBL DoBackSctr and maybe some other features.

# variable - useNetIP
msg030230=Use Module Net::IP
msg030231=If selected, the perl module Net::IP will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Net::IP even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useNetLDAP
msg030240=Use Module Net::LDAP
msg030241=If selected, the perl module Net::LDAP will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Net::LDAP even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for ldLDAP DoLDAP and maybe some other features.

# variable - useNetSMTP
msg030250=Use Module Net::SMTP
msg030251=If selected, the perl module Net::SMTP will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Net::SMTP even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for enableCFGShare syncUsesSSL localDomains BlockRepForwHost BlockReportFile and maybe some other features.

# variable - useNetSMTPSSL
msg030260=Use Module Net::SMTP::SSL
msg030261=If selected, the perl module Net::SMTP::SSL will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Net::SMTP::SSL even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for syncUsesSSL BlockRepForwHost and maybe some other features.

# variable - useNetAddrIPLite
msg030270=Use Module NetAddr::IP::Lite
msg030271=If selected, the perl module NetAddr::IP::Lite will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module NetAddr::IP::Lite even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useNetSNMPagent
msg030280=Use Module NetSNMP::agent
msg030281=If selected, the perl module NetSNMP::agent will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module NetSNMP::agent even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for SNMP and maybe some other features.

# variable - usePerlIOscalar
msg030290=Use Module PerlIO::scalar
msg030291=If selected, the perl module PerlIO::scalar will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module PerlIO::scalar even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useRegexpOptimizer
msg030300=Use Module Regexp::Optimizer
msg030301=If selected, the perl module Regexp::Optimizer will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Regexp::Optimizer even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useSPAMBOX_FC
msg030310=Use Module SPAMBOX_FC
msg030311=If selected, the perl module SPAMBOX_FC will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module SPAMBOX_FC even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useSPAMBOX_SVG
msg030320=Use Module SPAMBOX_SVG
msg030321=If selected, the perl module SPAMBOX_SVG will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module SPAMBOX_SVG even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for enableGraphStats and maybe some other features.

# variable - useSPAMBOX_WordStem
msg030330=Use Module SPAMBOX_WordStem
msg030331=If selected, the perl module SPAMBOX_WordStem will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module SPAMBOX_WordStem even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useScheduleCron
msg030340=Use Module Schedule::Cron
msg030341=If selected, the perl module Schedule::Cron will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Schedule::Cron even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for ReStartSchedule MemoryUsageCheckSchedule RebuildSchedule and maybe some other features.

# variable - useSysCpuAffinity
msg030350=Use Module Sys::CpuAffinity
msg030351=If selected, the perl module Sys::CpuAffinity will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Sys::CpuAffinity even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for asspCpuAffinity and maybe some other features.

# variable - useSysMemInfo
msg030360=Use Module Sys::MemInfo
msg030361=If selected, the perl module Sys::MemInfo will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Sys::MemInfo even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useSysSyslog
msg030370=Use Module Sys::Syslog
msg030371=If selected, the perl module Sys::Syslog will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Sys::Syslog even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for sysLog and maybe some other features.

# variable - useTextUnidecode
msg030380=Use Module Text::Unidecode
msg030381=If selected, the perl module Text::Unidecode will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Text::Unidecode even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for DoTransliterate and maybe some other features.

# variable - useThreadState
msg030390=Use Module Thread::State
msg030391=If selected, the perl module Thread::State will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Thread::State even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for WorkerCPUPriority and maybe some other features.

# variable - useTieRDBM
msg030400=Use Module Tie::RDBM
msg030401=If selected, the perl module Tie::RDBM will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Tie::RDBM even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for myhost and maybe some other features.

# variable - useUnicodeGCString
msg030410=Use Module Unicode::GCString
msg030411=If selected, the perl module Unicode::GCString will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Unicode::GCString even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useWin32APIOutputDebugString
msg030420=Use Module Win32::API::OutputDebugString
msg030421=If selected, the perl module Win32::API::OutputDebugString will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Win32::API::OutputDebugString even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useWin32Daemon
msg030430=Use Module Win32::Daemon
msg030431=If selected, the perl module Win32::Daemon will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Win32::Daemon even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span>

# variable - useWin32Unicode
msg030440=Use Module Win32::Unicode
msg030441=If selected, the perl module Win32::Unicode will be loaded if it is installed. If not selected, SPAMBOX will not load the perl module Win32::Unicode even it is installed and several features of SPAMBOX will not be available! It is recommended to disable installed but unused modules to reduce the required memory.<span class="negative"> Requires SPAMBOX restart!</span><br />This module is possibly used for UseUnicode4MaillogNames and maybe some other features.



# *******
# main text and hint for GUI
# *******


# main form buttom hint 1
msg500011=The CIDR notation is allowed(182.82.10.0/24).

# main form buttom hint 2
msg500012=<br />Text after the range (and before a number sign) will be accepted as comment which will be shown in a match (for example: 182.82.10.0/24 Yahoo Groups #comment not shown).

# main form buttom hint 3
msg500013=CIDR notation is accepted (182.82.10.0/24).

# main form buttom hint 4
msg500014=<br />Text after the range (and before a number sign) will be accepted as comment to be shown in a match. For example:<br />182.82.10.0/24 Yahoo #comment to be removed<br />The short notation like 182.82.10. is only allowed for IPv4 addresses, IPv6 addresses must be fully defined as for example 2201:1::1 or 2201:1::/96<br />You may define a hostname instead of an IP, in this case the hostname will be replaced by all DNS-resolved IP-addresses, each with a /32 or /128 netmask. For example:<br />mta5.am0.yahoodns.net Yahoo #comment to be removed -&gt; 66.94.238.147/32 Yahoo|... Yahoo|... Yahoo<br />

# main form buttom hint 5
msg500015=If Net::CIDR::Lite is installed, hyphenated ranges can be used (182.82.10.0-182.82.10.255).

# main form buttom hint 6
msg500016=Hyphenated ranges can be used (182.82.10.0-182.82.10.255).

# main form buttom hint 7
msg500017=For defining any full filepaths, always use slashes ("/") not backslashes. For example: c:/assp/certs/server-key.pem !<br /><br />

# main form buttom hint 8
msg500018=Fields marked with one small (<sup>s</sup>) - which are interval definitions - accept a single or a list of crontab entries separated by '|'. Such entries could be used to flexible schedule the configured task. A description of such crontab entries could be found in 'RebuildSchedule' and 'RestartSchedule'. Notice - this requires an installed <a href="http://search.cpan.org/search?query=Schedule::Cron" rel="external">Schedule::Cron</a> module in PERL.<br /><br />
Fields marked with at least one asterisk (*) accept a list separated by '|' (for example: abc|def|ghi) or a file designated as follows (path relative to the SPAMBOX directory): 'file:files/filename.txt'.  Putting in the <i>file:</i> will prompt SPAMBOX to put up a button to edit that file. <i>files</i> is the subdirectory for files. The file does not need to exist, you can create it by saving it from the editor within the UI. The file must have one entry per line; anything on a line following a number sign or a semicolon ( # ;) is ignored (a comment).<br />
It is possible to include custom-designed files at any line of such a file, using the following directive<br />
<span class="positive"># include filename</span><br />
where filename is the relative path (from /root/spambox) to the included file like files/inc1.txt or inc1.txt (one file per line). The line will be internaly replaced by the contents of the included file!<br /><br />
Fields marked with two asterisk (**) contains regular expressions (regex) and accept a second weight value. Every weighted regex that contains at least one '|' has to begin and end with a '~' - inside such regexes it is not allowed to use a tilde '~', even it is escaped - for example:  ~abc<span class="negative"><b>\~</b></span>|def~=>23 or ~abc<span class="negative"><b>~</b></span>|def~=>23 - instead use the octal (\126) or hex (\x7E) notation , for example <span class="positive">~abc\126|def~=>23 or ~abc\x7E|def~=>23</span> . Every weighted regex has to be followed by '=>' and the weight value. For example: Phishing\.=>1.45|~Heuristics|Email~=>50  or  ~(Email|HTML|Sanesecurity)\.(Phishing|Spear|(Spam|Scam)[a-z0-9]?)\.~=>4.6|Spam=>1.1|~Spear|Scam~=>2.1 . The multiplication result of the weight and the penaltybox valence value will be used for scoring, if the absolute value of weight is less or equal 6. Otherwise the value of weight is used for scoring. It is possible to define negative values to reduce the resulting message score.<br />
For all "<span class="positive">bomb*</span>" regular expressions and "<span class="positive">invalidFormatHeloRe</span>", "<span class="positive">invalidPTRRe</span>" and "<span class="positive">invalidMsgIDRe</span>" it is possible to define a third parameter (to overwrite the default options) after the weight like: Phishing\.=>1.45|~Heuristics|Email~=>50<span class="positive">:>N[+-]W[+-]L[+-]I[+-]</span>. The characters and the optional to use + and - have the following functions:<br />
use this regex (+ = only)(- = never) for: N = noprocessing , W = whitelisted , L = local , I = ISP mails . So the line ~Heuristics|Email~=>50:>N-W-LI could be read as: take the regex with a weight of 50, never scan noprocessing mails, never scan whitelisted mails, scan local mails and mails from ISP's (and all others). The line ~Heuristics|Email~=>3.2:>N-W+I could be read as: take the regex with a weight of 3.2 as factor, never scan noprocessing mails, scan only whitelisted mails even if they are received from an ISP .<br />
If the third parameter is not set or any of the N,W,L,I is not set, the default configuration for the option will be used unless a default option string is defined anywhere in a single line in the file in the form !!!NWLI!!! (with + or - is possible).<br />
<span class="negative">If any parameter that allowes the usage of weighted regular expressions is set to "block", but the sum of the resulting weighted penalty value is less than the corresponding "Penalty Box Valence Value" (because of lower weights) - only scoring will be done!</span><br />
If the regular expression optimization is used - ("perl module Regexp::Optimizer" installed and enabled) - and you want to disable the optimization for a special regular expression (file based), set one line (eg. the first one) to a value of '<span class="positive">assp-do-not-optimize-regex</span>' or '<span class="positive">a-d-n-o-r</span>' (without the quotes)! To disable the optimization for a specific line/regex, put &lt;&lt;&lt; in front and &gt;&gt;&gt; at the end of the line/regex. To weight such line/regex write for example: <span class="positive">&lt;&lt;&lt;</span>Phishing\.<span class="positive">&gt;&gt;&gt;</span>=>1.45=>N- or ~<span class="positive">&lt;&lt;&lt;</span>Heuristics|Email<span class="positive">&gt;&gt;&gt;</span>~=>50  or  ~<span class="positive">&lt;&lt;&lt;</span>(Email|HTML|Sanesecurity)\.(Phishing|Spear|(Spam|Scam)[a-z0-9]?)\.<span class="positive">&gt;&gt;&gt;</span>~=>4.6 .<br /><br />
The literal 'SESSIONID' will be replaced by the unique message logging ID in every SMTP error reply.<br />
The literal 'NOTSPAMTAG' will be replaced by a random calculated TAG using <a href="./NotSpamTag">NotSpamTag</a>, in every SMTP permanent (5xx) error reply.<br />
The literal 'MYNAME' will be replaced by the configuration value defined in 'myName' in every SMTP error reply.<br /><br />
If the internal name is shown in light blue like <span style="color:#8181F7">(uniqueIDPrefix)</span> , this indicates that the configured value differs from the default value. To show the default value, move the mouse over the internal name. A click on the internal name will reset the value to the default.<br /><br />
IP ranges are defined as for example 182.82.10.


# main form buttom hint 9
msg500019=<br /><br />'kill -HUP ' will load settings from disk. 'kill -NUM07 ' will suspend or resume assp.  'kill -USR2 ' will save settings to disk.


# manage users form hint
msg500020=Use the "Continue" button as long as you only want to see or to temporary change any parameter.
Use the "Apply Changes" button to apply all changes, that are currenty shown, to the user.
All user names that begins with a "~" are templates. The template "~DEFAULT" can't be deleted.
All permissions of a user can refer to a template, in this case the permission of the template
belongs to the user. If the template permission is changed, all user permissions
that refers to that template will also be changed. Template permissions can never refer to an
another user or template. It is possible to copy all permissions of a template or a user to
another user or template. If "use LDAP / LDAP host" is filled with an IP-address or hostname
the local password will only be used, if the LDAPhost is not available. If an LDAP login is
successful, the LDAP-password will be stored as local password. It is possible to configure
multiple LDAP hosts separated by "|". To navigate use the alpha-index on the left site.


# White/Redlist/Tuplets
msg500031=Do you want to work with the:

msg500032=Do you want to:

msg500033=<p>Post less than 1 megabyte of data at a time.</p>
Note: The redlist is not a blacklist. The redlist is a list of addresses that cannot
contribute to the whitelist, and who are not considered local, even if their mail is
from a local computer. For example, if someone goes on a vacation and turns on their
email's autoresponder, put them on the redlist until they return. Then as they reply
to every spam they receive they won't corrupt your non-spam collection or whitelist.<br />
To add or remove global whitelist entries use emailaddress,* .<br />
To add or remove domain whitelist entries use emailaddress,@domain .<br />
<b>NOTICE: removing global or domain whitelist entries will DELETE ALL related personal records!</b>

msg500034=<p class="warning">Warning: If your whitelist or redlist is long, pushing these buttons
 is ill-advised. Use these for testing and while your whitelist is short.</p>


# Recipient Replacement Test
msg500040=<p><a href="./#ReplaceRecpt">go to ReplaceRecpt to configure rules</a></p>
msg500041=<p><span class="negative"><a href="./#ReplaceRecpt">ReplaceRecpt</a> is not configured - please do this first!</span></p>
msg500042=<p>to modify the replacement rules, open the file by clicking edit 
msg500043=<p>the following replacement rules were processed (matching rules are shown green)</p><br />

# View Maillog Tail
msg500050=Refresh your browser or click [Search/Update] to update this screen. Newest entries are at the end. The search will stop, if the [search for] field is blank - and [tail bytes] is reached, or if the [search for] field is not blank - and [search in] or the number of [results] is reached. If you search for more than one word, all words must match. Words with a leading \'-\' will be negated. For example: a search pattern \'user -root\', will search all lines which contains the word \'user\' but not the word \'root\'! Don\'t use the characters &quot;&gt;\'&lt;&amp; in the search field.

msg500051=Select [file lines only], if you want to reduce the shown number of lines to such (POST filter), which contains filenames.<br /><br /> Use the MaillogTail function carefully, while SPAMBOX is processing any request, no new connections will be accepted by SPAMBOX, and this could take some minutes, if you search in large or many maillogs! To start realtime maillog, click on [Auto], to stop realtime maillog, click on [Stop].

msg500052=If [this file number(s)] is selected, you can define a single filenumber or a comma separated list of filenumbers here - like: <b>1,5,8,7,6 or 10,2...7,11,14-19,21,23...26</b>  A defined range 2...7 or 2-7 will include all numbers from 2 to 7. The resulting numbers will be internaly sorted ascending and the files will be used in that sorted order.

msg500053=Enter the search string - for more help use the [help] link. If you want to start the realtime log [Auto], you can define the number of lines to show in the browser [1 - 33] here.


# Mail Analyzer
msg500060=This page will show you how SPAMBOX analyzes and pre-processes an email to come up with the assigned spam probability. Regular Expressions will always check the full message. Group matching of any address will be shown. To analyze/modify individual email addresses click <a href="javascript:void(0);" onclick="popAddressAction('example@SPAMBOX.nospam');return false;">here</a>. To analyze/modify individual IP addresses click <a href="javascript:void(0);" onclick="popIPAction('1.1.1.1');return false;">here</a>.

msg500061=Copy and paste the mail header and body here:

msg500062=<b>You may put here helo=aaa.bbb.helo or ip=123.123.123.123 to look up the helo/ip information. text=abc will start a lookup in the regular expression files for the "abc" matching regex.<br />
Put helo=domain.com and ip=123.123.123.123 in two lines, to lookup SPF results.</b>
<p>Note: Analysis is performed using the current spam database --
if yours was rebuilt since the time the mail was received you'll
receive a different result.</p>

msg500063=<p>To use this form using <i>Outlook Express</i> do the following. Right-click on the message
of interest. Select <i>Properties</i>. Click the <i>Details</i> tab. Click the <i>message
source</i> button. Right-click on the message source and click <i>Select All</i>. Right-click
again and click <i>Copy</i>. Click on the text box above and paste (Ctrl-V perhaps). Click
the <i>Analyze</i> button.</p>
<p>The page will update to show you the following: if any of the email's addresses are in
the redlist or whitelist, the most and least spammy phrases together with their spaminess,
the resulting probabilities (probabilities may repeat one time), and the final spam probability
score.<br /><br />
To only transliterate the text (even MIME encoded) from non-Roman letters to Roman letters, simply select the checkbox.


# Shutdown/Restart
msg500070=Note: It's possible to restart, if SPAMBOX runs as a service or in a script that restarts it after it stops or it runs on WIN32 version Windows 2000(or higher) or it runs on linux,
otherwise this function can only shut SPAMBOX down. In either case, shutdown is possibly not clean -- all SMTP sessions will be interrupted after 45 seconds.<br /><br />


# EDIT files window/frame
msg500080=<span class="negative">Attention: This is the real database content!<br />
Incorrect editing hash lists could result in unexpected behavior or dying SPAMBOX!</span><br />
Use |::| as terminator between key and value, for example: 102.1.1.1|::|1234567890 !<br />
If a time is shown human readable, you can change the date or time,<br />
but leave the format as it is ([+]YYYY-MM-DD,hh:mm:ss) and leave a possible '+' in front.<br />
Use only one pair of key and value per line.<br />
Comments are not allowed!<br />
While the hash is saved, SPAMBOX is unable to accept new connections!<br />
Be careful saveing large hash here, this could take very long time. Better save the new contents of large hashes and lists to the Importfile, if this option is available. If possible, the DB-Import will be started immediately by the MaintThread!<br />
After saving the contents to the Importfile, you should close this windows and wait until the import has finished!

msg500081=File should have one entry per line; anything on a line following a number sign ( #) is ignored (a comment). Whitespace at the beginning or end of the line is ignored.
msg500082=First line specifies text that appears in the subject of report message. The remaining lines are the report message body.
msg500083=Put here comments to your assp installation.
msg500084=For removal of entries from BlackBox (PBBlack) use <a onmousedown="showDisp('$ConfigPos{noPB}')" target="main" href="./#noPB">noPB</a>.
For removal of entries from WhiteBox (PBWhite)  use <a onmousedown="showDisp('$ConfigPos{noPBwhite}')" target="main" href="./#noPBwhite">noPBwhite</a>. For  whitelisting IP's use <a onmousedown="showDisp('$ConfigPos{whiteListedIPs}')" target="main" href="./#whiteListedIPs">Whitelisted IP's</a> or <a onmousedown="showDisp('$ConfigPos{noProcessingIPs}')" target="main" href="./#noProcessingIPs">No Processing IP's</a>. For blacklisting use <a onmousedown="showDisp('$ConfigPos{denySMTPConnectionsFrom}')" target="main" href="./#denySMTPConnectionsFrom">Deny SMTP Connections From these IP's</a> and <a onmousedown="showDisp('$ConfigPos{denySMTPConnectionsFromAlways}')" target="main" href="./#denySMTPConnectionsFromAlways">Deny SMTP Connections From these IP's Strictly</a>.
msg500086=CacheEntry: IP/Domain '11' CacheIntervalStart 1=fail/2=pass Result/Comment
msg500090=To take an action, select the action and click "Do It!". To move a file to another location, just copy and delete the file!
msg500091=<br /> For "resend file" action install Email::Send  modules!
msg500092=IP ranges can be defined as: 182.82.10. 

# the following messages are in one line 0093.$records.0094
msg500093=This hash/list seems to be too large (
msg500094=records) to save it from GUI!
msg500095=Please close this window, and wait until import has finished.
msg500096=This file was trunked to (MaxBytes) 4000 byte. If you resend this file, the resulting view and/or attachments would be destroyed!

# SMTP-Connection - link - hintbox
msg500100=Click here to open a SMTP-Connections-Window that never stops refreshing. Do not make any changes in the main window, while this SMTP-Connections-Window is still opened! A SMTP-Connections-Window which is started with the default (left beside) link, will stop refreshing if it is not in forground.
